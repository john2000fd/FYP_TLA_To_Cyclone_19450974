Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    BACK_SLASH
    CHECK
    EDGE
    FORWARD_SLASH
    GOAL
    GRAPH
    INVARIANT
    NODE
    NOT_EQUALS
    SEMICOLON
    SINGLE_QUOTE
    UNDERSCORE
    VARIABLE_NAME

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements
Rule 2     module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements
Rule 3     attribute -> ATTRIBUTE
Rule 4     dot_access -> attribute DOT attribute
Rule 5     dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute
Rule 6     extends -> EXTENDS names
Rule 7     names -> names COMMA attribute
Rule 8     names -> attribute
Rule 9     statements -> statements statement
Rule 10    statements -> statement
Rule 11    statement -> constants_statement
Rule 12    statement -> variables_statement
Rule 13    statement -> assume_statement
Rule 14    statement -> type_invariant
Rule 15    statement -> set_definition
Rule 16    statement -> bean_value_count
Rule 17    statement -> function_declaration
Rule 18    statement -> termination_statement
Rule 19    statement -> next_state_relation
Rule 20    statement -> action_formula_definition
Rule 21    statement -> liveness_property
Rule 22    statement -> loop_invariant
Rule 23    statement -> termination_hypothesis
Rule 24    statement -> spec_definition
Rule 25    statement -> theorem_definition
Rule 26    statement -> init
Rule 27    constants_statement -> CONSTANTS names
Rule 28    variables_statement -> VARIABLES names
Rule 29    assume_statement -> ASSUME expression AND expression
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression STAR expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> set_membership
Rule 35    expression -> comparison
Rule 36    expression -> attribute
Rule 37    expression -> type_invariant_expression
Rule 38    expression -> NUMBER_LITERAL
Rule 39    expression -> STRING_LITERAL
Rule 40    type_invariant_expression -> attribute IN_A_SET attribute
Rule 41    init_expression -> <empty>
Rule 42    comparison -> attribute comparison_rule NUMBER_LITERAL
Rule 43    comparison -> attribute comparison_rule attribute
Rule 44    comparison_rule -> GREATER_OR_EQ
Rule 45    comparison_rule -> LESS_OR_EQ
Rule 46    comparison_rule -> GREATER_THAN
Rule 47    comparison_rule -> LESS_THAN
Rule 48    set_membership -> attribute IN_A_SET Nat
Rule 49    equals -> EQUALS_DEFINITIONS
Rule 50    equals -> EQUALS_EQUALITY
Rule 51    set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
Rule 52    set_info -> set_info COMMA set_individual_info
Rule 53    set_info -> set_individual_info
Rule 54    set_individual_info -> ATTRIBUTE COLON set_scope
Rule 55    set_scope -> NUMBER_LITERAL DOT DOT attribute
Rule 56    type_invariant -> attribute equals expression
Rule 57    init -> INIT equals attribute IN_A_SET init_set_statement
Rule 58    init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order
Rule 59    order -> dot_access PLUS dot_access IN_A_SET range_of_values
Rule 60    range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE
Rule 61    bean_value_count -> attribute equals bean_equation
Rule 62    bean_equation -> dot_access PLUS dot_access
Rule 63    function_declaration -> attribute equals AND function_conditions except_section
Rule 64    function_conditions -> function_condition
Rule 65    function_conditions -> function_conditions AND function_condition
Rule 66    function_conditions -> function_conditions OR function_condition
Rule 67    function_condition -> attribute comparison_rule NUMBER_LITERAL
Rule 68    function_condition -> attribute equals NUMBER_LITERAL
Rule 69    function_condition -> UNCHANGED attribute
Rule 70    function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
Rule 71    function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
Rule 72    function_condition -> attribute
Rule 73    function_condition -> INIT
Rule 74    function_condition -> EventuallyTerminates
Rule 75    function_condition -> LoopInvariant
Rule 76    function_condition -> TerminationHypothesis
Rule 77    function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL
Rule 78    except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause
Rule 79    except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
Rule 80    except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
Rule 81    termination_statement -> attribute equals AND function_conditions
Rule 82    next_state_relation -> attribute equals OR function_conditions
Rule 83    action_formula_definition -> attribute equals action_formula
Rule 84    action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
Rule 85    formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute
Rule 86    formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
Rule 87    liveness_property -> EventuallyTerminates equals property_details
Rule 88    property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN
Rule 89    loop_invariant -> LoopInvariant equals action_formula
Rule 90    termination_hypothesis -> TerminationHypothesis equals conditional_statements
Rule 91    conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement
Rule 92    conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
Rule 93    conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
Rule 94    spec_definition -> SPEC equals AND function_conditions
Rule 95    theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions
Rule 96    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 97    empty -> <empty>

Terminals, with rules where they appear

AND                  : 29 63 65 78 81 93 94 95
ARROW                : 
ASSUME               : 29
AT                   : 79 80 80
ATTRIBUTE            : 3 54
ATTRIBUTE_MAY_CHANGE : 70 71 84
BACK_SLASH           : 
CHECK                : 
COLON                : 54 58
COMMA                : 7 52 80
CONSTANTS            : 27
DIVIDE               : 33
DOT                  : 4 5 55 55 60 60 77 79 80 80
EDGE                 : 
ELSE                 : 91
ENABLED              : 88
EQUALS_DEFINITIONS   : 49
EQUALS_EQUALITY      : 50
EQUIVALENCE_OPERATOR : 86
EVENTUALLY           : 88 93
EXCEPT               : 79 80
EXCLAMATION_MARK     : 79 80 80
EXTENDS              : 6
EventuallyTerminates : 74 87
FORWARD_SLASH        : 
GOAL                 : 
GRAPH                : 
GREATER_OR_EQ        : 44
GREATER_THAN         : 46
IF                   : 91
IMPLIES              : 95
INIT                 : 57 73
INVARIANT            : 
IN_A_SET             : 40 48 57 58 59
LEFT_BRACE           : 58
LEFT_PAREN           : 71 88 93 96
LEFT_SQR_BRACKET     : 51 70 70 79 80 84 84
LESS_OR_EQ           : 45
LESS_THAN            : 47 85
LoopInvariant        : 75 89
MINUS                : 31 79 80
MODULE               : 1 2
MODULE_WRAPPER       : 1 1 2 2
MODULUS              : 86 86 92
NEXT_VALUE_OF_ATTRIBUTE : 5 78 85
NODE                 : 
NOT_EQUALS           : 
NUMBER_LITERAL       : 38 42 55 60 67 68 77 79 80 80 86 86 92 92 93 93
Nat                  : 48
OR                   : 66 82
PLUS                 : 30 59 62 80
RIGHT_BRACE          : 60
RIGHT_PAREN          : 71 88 93 96
RIGHT_SQR_BRACKET    : 51 70 70 79 80 84 84
SEMICOLON            : 
SINGLE_QUOTE         : 
SPEC                 : 94 95
STAR                 : 32
STRING_LITERAL       : 39
THEN                 : 91
THEOREM              : 95
TerminationHypothesis : 76 90
UNCHANGED            : 69
UNDERSCORE           : 
VARIABLES            : 28
VARIABLE_NAME        : 
WEAK_FAIRNESS        : 71
error                : 

Nonterminals, with rules where they appear

action_formula       : 83 89
action_formula_definition : 20
assume_statement     : 13
attribute            : 1 2 4 4 5 7 8 36 40 40 42 43 43 48 51 55 56 57 58 58 60 61 63 67 68 69 70 71 72 77 77 79 79 80 80 80 81 82 83 85 88
bean_equation        : 61
bean_value_count     : 16
comparison           : 35
comparison_rule      : 42 43 67 77
conditional_statement : 91 91 91
conditional_statements : 90
constants_statement  : 11
dot_access           : 59 59 62 62 86 86 92 93 93
empty                : 
equals               : 51 56 57 61 63 68 78 79 80 80 81 82 83 86 86 87 89 90 92 93 93 94
except_clause        : 78
except_section       : 63
expression           : 29 29 30 30 31 31 32 32 33 33 56 86 86 96
extends              : 1
formula_details      : 84
function_condition   : 64 65 66
function_conditions  : 63 65 66 81 82 94 95
function_declaration : 17
init                 : 26
init_expression      : 
init_set_statement   : 57
liveness_property    : 21
loop_invariant       : 22
module               : 0
names                : 6 7 27 28
next_state_relation  : 19
order                : 58
property_details     : 87
range_of_values      : 59
set_definition       : 15
set_individual_info  : 52 53
set_info             : 51 52
set_membership       : 34
set_scope            : 54
spec_definition      : 24
statement            : 9 10
statements           : 1 2 9
termination_hypothesis : 23
termination_statement : 18
theorem_definition   : 25
type_invariant       : 14
type_invariant_expression : 37
variables_statement  : 12

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements
    (2) module -> . MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements

    MODULE_WRAPPER  shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> MODULE_WRAPPER . MODULE attribute MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER . MODULE attribute MODULE_WRAPPER statements

    MODULE          shift and go to state 3


state 3

    (1) module -> MODULE_WRAPPER MODULE . attribute MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER MODULE . attribute MODULE_WRAPPER statements
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 4

state 4

    (1) module -> MODULE_WRAPPER MODULE attribute . MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER MODULE attribute . MODULE_WRAPPER statements

    MODULE_WRAPPER  shift and go to state 6


state 5

    (3) attribute -> ATTRIBUTE .

    MODULE_WRAPPER  reduce using rule 3 (attribute -> ATTRIBUTE .)
    EQUALS_DEFINITIONS reduce using rule 3 (attribute -> ATTRIBUTE .)
    EQUALS_EQUALITY reduce using rule 3 (attribute -> ATTRIBUTE .)
    COMMA           reduce using rule 3 (attribute -> ATTRIBUTE .)
    CONSTANTS       reduce using rule 3 (attribute -> ATTRIBUTE .)
    VARIABLES       reduce using rule 3 (attribute -> ATTRIBUTE .)
    ASSUME          reduce using rule 3 (attribute -> ATTRIBUTE .)
    EventuallyTerminates reduce using rule 3 (attribute -> ATTRIBUTE .)
    LoopInvariant   reduce using rule 3 (attribute -> ATTRIBUTE .)
    TerminationHypothesis reduce using rule 3 (attribute -> ATTRIBUTE .)
    SPEC            reduce using rule 3 (attribute -> ATTRIBUTE .)
    THEOREM         reduce using rule 3 (attribute -> ATTRIBUTE .)
    INIT            reduce using rule 3 (attribute -> ATTRIBUTE .)
    ATTRIBUTE       reduce using rule 3 (attribute -> ATTRIBUTE .)
    $end            reduce using rule 3 (attribute -> ATTRIBUTE .)
    IN_A_SET        reduce using rule 3 (attribute -> ATTRIBUTE .)
    GREATER_OR_EQ   reduce using rule 3 (attribute -> ATTRIBUTE .)
    LESS_OR_EQ      reduce using rule 3 (attribute -> ATTRIBUTE .)
    GREATER_THAN    reduce using rule 3 (attribute -> ATTRIBUTE .)
    LESS_THAN       reduce using rule 3 (attribute -> ATTRIBUTE .)
    AND             reduce using rule 3 (attribute -> ATTRIBUTE .)
    PLUS            reduce using rule 3 (attribute -> ATTRIBUTE .)
    MINUS           reduce using rule 3 (attribute -> ATTRIBUTE .)
    STAR            reduce using rule 3 (attribute -> ATTRIBUTE .)
    DIVIDE          reduce using rule 3 (attribute -> ATTRIBUTE .)
    DOT             reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_PAREN     reduce using rule 3 (attribute -> ATTRIBUTE .)
    OR              reduce using rule 3 (attribute -> ATTRIBUTE .)
    MODULUS         reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_SQR_BRACKET reduce using rule 3 (attribute -> ATTRIBUTE .)
    COLON           reduce using rule 3 (attribute -> ATTRIBUTE .)
    EXCEPT          reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_BRACE     reduce using rule 3 (attribute -> ATTRIBUTE .)


state 6

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER . extends statements
    (2) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER . statements
    (6) extends -> . EXTENDS names
    (9) statements -> . statements statement
    (10) statements -> . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME expression AND expression
    (56) type_invariant -> . attribute equals expression
    (51) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (61) bean_value_count -> . attribute equals bean_equation
    (63) function_declaration -> . attribute equals AND function_conditions except_section
    (81) termination_statement -> . attribute equals AND function_conditions
    (82) next_state_relation -> . attribute equals OR function_conditions
    (83) action_formula_definition -> . attribute equals action_formula
    (87) liveness_property -> . EventuallyTerminates equals property_details
    (89) loop_invariant -> . LoopInvariant equals action_formula
    (90) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (94) spec_definition -> . SPEC equals AND function_conditions
    (95) theorem_definition -> . THEOREM SPEC IMPLIES AND function_conditions
    (57) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    EXTENDS         shift and go to state 10
    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    extends                        shift and go to state 8
    statements                     shift and go to state 9
    statement                      shift and go to state 11
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 7

    (56) type_invariant -> attribute . equals expression
    (51) set_definition -> attribute . equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (61) bean_value_count -> attribute . equals bean_equation
    (63) function_declaration -> attribute . equals AND function_conditions except_section
    (81) termination_statement -> attribute . equals AND function_conditions
    (82) next_state_relation -> attribute . equals OR function_conditions
    (83) action_formula_definition -> attribute . equals action_formula
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 37

state 8

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends . statements
    (9) statements -> . statements statement
    (10) statements -> . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME expression AND expression
    (56) type_invariant -> . attribute equals expression
    (51) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (61) bean_value_count -> . attribute equals bean_equation
    (63) function_declaration -> . attribute equals AND function_conditions except_section
    (81) termination_statement -> . attribute equals AND function_conditions
    (82) next_state_relation -> . attribute equals OR function_conditions
    (83) action_formula_definition -> . attribute equals action_formula
    (87) liveness_property -> . EventuallyTerminates equals property_details
    (89) loop_invariant -> . LoopInvariant equals action_formula
    (90) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (94) spec_definition -> . SPEC equals AND function_conditions
    (95) theorem_definition -> . THEOREM SPEC IMPLIES AND function_conditions
    (57) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statements                     shift and go to state 40
    statement                      shift and go to state 11
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 9

    (2) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements .
    (9) statements -> statements . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME expression AND expression
    (56) type_invariant -> . attribute equals expression
    (51) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (61) bean_value_count -> . attribute equals bean_equation
    (63) function_declaration -> . attribute equals AND function_conditions except_section
    (81) termination_statement -> . attribute equals AND function_conditions
    (82) next_state_relation -> . attribute equals OR function_conditions
    (83) action_formula_definition -> . attribute equals action_formula
    (87) liveness_property -> . EventuallyTerminates equals property_details
    (89) loop_invariant -> . LoopInvariant equals action_formula
    (90) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (94) spec_definition -> . SPEC equals AND function_conditions
    (95) theorem_definition -> . THEOREM SPEC IMPLIES AND function_conditions
    (57) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    $end            reduce using rule 2 (module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements .)
    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statement                      shift and go to state 41
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 10

    (6) extends -> EXTENDS . names
    (7) names -> . names COMMA attribute
    (8) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 42
    attribute                      shift and go to state 43

state 11

    (10) statements -> statement .

    CONSTANTS       reduce using rule 10 (statements -> statement .)
    VARIABLES       reduce using rule 10 (statements -> statement .)
    ASSUME          reduce using rule 10 (statements -> statement .)
    EventuallyTerminates reduce using rule 10 (statements -> statement .)
    LoopInvariant   reduce using rule 10 (statements -> statement .)
    TerminationHypothesis reduce using rule 10 (statements -> statement .)
    SPEC            reduce using rule 10 (statements -> statement .)
    THEOREM         reduce using rule 10 (statements -> statement .)
    INIT            reduce using rule 10 (statements -> statement .)
    ATTRIBUTE       reduce using rule 10 (statements -> statement .)
    $end            reduce using rule 10 (statements -> statement .)


state 12

    (11) statement -> constants_statement .

    CONSTANTS       reduce using rule 11 (statement -> constants_statement .)
    VARIABLES       reduce using rule 11 (statement -> constants_statement .)
    ASSUME          reduce using rule 11 (statement -> constants_statement .)
    EventuallyTerminates reduce using rule 11 (statement -> constants_statement .)
    LoopInvariant   reduce using rule 11 (statement -> constants_statement .)
    TerminationHypothesis reduce using rule 11 (statement -> constants_statement .)
    SPEC            reduce using rule 11 (statement -> constants_statement .)
    THEOREM         reduce using rule 11 (statement -> constants_statement .)
    INIT            reduce using rule 11 (statement -> constants_statement .)
    ATTRIBUTE       reduce using rule 11 (statement -> constants_statement .)
    $end            reduce using rule 11 (statement -> constants_statement .)


state 13

    (12) statement -> variables_statement .

    CONSTANTS       reduce using rule 12 (statement -> variables_statement .)
    VARIABLES       reduce using rule 12 (statement -> variables_statement .)
    ASSUME          reduce using rule 12 (statement -> variables_statement .)
    EventuallyTerminates reduce using rule 12 (statement -> variables_statement .)
    LoopInvariant   reduce using rule 12 (statement -> variables_statement .)
    TerminationHypothesis reduce using rule 12 (statement -> variables_statement .)
    SPEC            reduce using rule 12 (statement -> variables_statement .)
    THEOREM         reduce using rule 12 (statement -> variables_statement .)
    INIT            reduce using rule 12 (statement -> variables_statement .)
    ATTRIBUTE       reduce using rule 12 (statement -> variables_statement .)
    $end            reduce using rule 12 (statement -> variables_statement .)


state 14

    (13) statement -> assume_statement .

    CONSTANTS       reduce using rule 13 (statement -> assume_statement .)
    VARIABLES       reduce using rule 13 (statement -> assume_statement .)
    ASSUME          reduce using rule 13 (statement -> assume_statement .)
    EventuallyTerminates reduce using rule 13 (statement -> assume_statement .)
    LoopInvariant   reduce using rule 13 (statement -> assume_statement .)
    TerminationHypothesis reduce using rule 13 (statement -> assume_statement .)
    SPEC            reduce using rule 13 (statement -> assume_statement .)
    THEOREM         reduce using rule 13 (statement -> assume_statement .)
    INIT            reduce using rule 13 (statement -> assume_statement .)
    ATTRIBUTE       reduce using rule 13 (statement -> assume_statement .)
    $end            reduce using rule 13 (statement -> assume_statement .)


state 15

    (14) statement -> type_invariant .

    CONSTANTS       reduce using rule 14 (statement -> type_invariant .)
    VARIABLES       reduce using rule 14 (statement -> type_invariant .)
    ASSUME          reduce using rule 14 (statement -> type_invariant .)
    EventuallyTerminates reduce using rule 14 (statement -> type_invariant .)
    LoopInvariant   reduce using rule 14 (statement -> type_invariant .)
    TerminationHypothesis reduce using rule 14 (statement -> type_invariant .)
    SPEC            reduce using rule 14 (statement -> type_invariant .)
    THEOREM         reduce using rule 14 (statement -> type_invariant .)
    INIT            reduce using rule 14 (statement -> type_invariant .)
    ATTRIBUTE       reduce using rule 14 (statement -> type_invariant .)
    $end            reduce using rule 14 (statement -> type_invariant .)


state 16

    (15) statement -> set_definition .

    CONSTANTS       reduce using rule 15 (statement -> set_definition .)
    VARIABLES       reduce using rule 15 (statement -> set_definition .)
    ASSUME          reduce using rule 15 (statement -> set_definition .)
    EventuallyTerminates reduce using rule 15 (statement -> set_definition .)
    LoopInvariant   reduce using rule 15 (statement -> set_definition .)
    TerminationHypothesis reduce using rule 15 (statement -> set_definition .)
    SPEC            reduce using rule 15 (statement -> set_definition .)
    THEOREM         reduce using rule 15 (statement -> set_definition .)
    INIT            reduce using rule 15 (statement -> set_definition .)
    ATTRIBUTE       reduce using rule 15 (statement -> set_definition .)
    $end            reduce using rule 15 (statement -> set_definition .)


state 17

    (16) statement -> bean_value_count .

    CONSTANTS       reduce using rule 16 (statement -> bean_value_count .)
    VARIABLES       reduce using rule 16 (statement -> bean_value_count .)
    ASSUME          reduce using rule 16 (statement -> bean_value_count .)
    EventuallyTerminates reduce using rule 16 (statement -> bean_value_count .)
    LoopInvariant   reduce using rule 16 (statement -> bean_value_count .)
    TerminationHypothesis reduce using rule 16 (statement -> bean_value_count .)
    SPEC            reduce using rule 16 (statement -> bean_value_count .)
    THEOREM         reduce using rule 16 (statement -> bean_value_count .)
    INIT            reduce using rule 16 (statement -> bean_value_count .)
    ATTRIBUTE       reduce using rule 16 (statement -> bean_value_count .)
    $end            reduce using rule 16 (statement -> bean_value_count .)


state 18

    (17) statement -> function_declaration .

    CONSTANTS       reduce using rule 17 (statement -> function_declaration .)
    VARIABLES       reduce using rule 17 (statement -> function_declaration .)
    ASSUME          reduce using rule 17 (statement -> function_declaration .)
    EventuallyTerminates reduce using rule 17 (statement -> function_declaration .)
    LoopInvariant   reduce using rule 17 (statement -> function_declaration .)
    TerminationHypothesis reduce using rule 17 (statement -> function_declaration .)
    SPEC            reduce using rule 17 (statement -> function_declaration .)
    THEOREM         reduce using rule 17 (statement -> function_declaration .)
    INIT            reduce using rule 17 (statement -> function_declaration .)
    ATTRIBUTE       reduce using rule 17 (statement -> function_declaration .)
    $end            reduce using rule 17 (statement -> function_declaration .)


state 19

    (18) statement -> termination_statement .

    CONSTANTS       reduce using rule 18 (statement -> termination_statement .)
    VARIABLES       reduce using rule 18 (statement -> termination_statement .)
    ASSUME          reduce using rule 18 (statement -> termination_statement .)
    EventuallyTerminates reduce using rule 18 (statement -> termination_statement .)
    LoopInvariant   reduce using rule 18 (statement -> termination_statement .)
    TerminationHypothesis reduce using rule 18 (statement -> termination_statement .)
    SPEC            reduce using rule 18 (statement -> termination_statement .)
    THEOREM         reduce using rule 18 (statement -> termination_statement .)
    INIT            reduce using rule 18 (statement -> termination_statement .)
    ATTRIBUTE       reduce using rule 18 (statement -> termination_statement .)
    $end            reduce using rule 18 (statement -> termination_statement .)


state 20

    (19) statement -> next_state_relation .

    CONSTANTS       reduce using rule 19 (statement -> next_state_relation .)
    VARIABLES       reduce using rule 19 (statement -> next_state_relation .)
    ASSUME          reduce using rule 19 (statement -> next_state_relation .)
    EventuallyTerminates reduce using rule 19 (statement -> next_state_relation .)
    LoopInvariant   reduce using rule 19 (statement -> next_state_relation .)
    TerminationHypothesis reduce using rule 19 (statement -> next_state_relation .)
    SPEC            reduce using rule 19 (statement -> next_state_relation .)
    THEOREM         reduce using rule 19 (statement -> next_state_relation .)
    INIT            reduce using rule 19 (statement -> next_state_relation .)
    ATTRIBUTE       reduce using rule 19 (statement -> next_state_relation .)
    $end            reduce using rule 19 (statement -> next_state_relation .)


state 21

    (20) statement -> action_formula_definition .

    CONSTANTS       reduce using rule 20 (statement -> action_formula_definition .)
    VARIABLES       reduce using rule 20 (statement -> action_formula_definition .)
    ASSUME          reduce using rule 20 (statement -> action_formula_definition .)
    EventuallyTerminates reduce using rule 20 (statement -> action_formula_definition .)
    LoopInvariant   reduce using rule 20 (statement -> action_formula_definition .)
    TerminationHypothesis reduce using rule 20 (statement -> action_formula_definition .)
    SPEC            reduce using rule 20 (statement -> action_formula_definition .)
    THEOREM         reduce using rule 20 (statement -> action_formula_definition .)
    INIT            reduce using rule 20 (statement -> action_formula_definition .)
    ATTRIBUTE       reduce using rule 20 (statement -> action_formula_definition .)
    $end            reduce using rule 20 (statement -> action_formula_definition .)


state 22

    (21) statement -> liveness_property .

    CONSTANTS       reduce using rule 21 (statement -> liveness_property .)
    VARIABLES       reduce using rule 21 (statement -> liveness_property .)
    ASSUME          reduce using rule 21 (statement -> liveness_property .)
    EventuallyTerminates reduce using rule 21 (statement -> liveness_property .)
    LoopInvariant   reduce using rule 21 (statement -> liveness_property .)
    TerminationHypothesis reduce using rule 21 (statement -> liveness_property .)
    SPEC            reduce using rule 21 (statement -> liveness_property .)
    THEOREM         reduce using rule 21 (statement -> liveness_property .)
    INIT            reduce using rule 21 (statement -> liveness_property .)
    ATTRIBUTE       reduce using rule 21 (statement -> liveness_property .)
    $end            reduce using rule 21 (statement -> liveness_property .)


state 23

    (22) statement -> loop_invariant .

    CONSTANTS       reduce using rule 22 (statement -> loop_invariant .)
    VARIABLES       reduce using rule 22 (statement -> loop_invariant .)
    ASSUME          reduce using rule 22 (statement -> loop_invariant .)
    EventuallyTerminates reduce using rule 22 (statement -> loop_invariant .)
    LoopInvariant   reduce using rule 22 (statement -> loop_invariant .)
    TerminationHypothesis reduce using rule 22 (statement -> loop_invariant .)
    SPEC            reduce using rule 22 (statement -> loop_invariant .)
    THEOREM         reduce using rule 22 (statement -> loop_invariant .)
    INIT            reduce using rule 22 (statement -> loop_invariant .)
    ATTRIBUTE       reduce using rule 22 (statement -> loop_invariant .)
    $end            reduce using rule 22 (statement -> loop_invariant .)


state 24

    (23) statement -> termination_hypothesis .

    CONSTANTS       reduce using rule 23 (statement -> termination_hypothesis .)
    VARIABLES       reduce using rule 23 (statement -> termination_hypothesis .)
    ASSUME          reduce using rule 23 (statement -> termination_hypothesis .)
    EventuallyTerminates reduce using rule 23 (statement -> termination_hypothesis .)
    LoopInvariant   reduce using rule 23 (statement -> termination_hypothesis .)
    TerminationHypothesis reduce using rule 23 (statement -> termination_hypothesis .)
    SPEC            reduce using rule 23 (statement -> termination_hypothesis .)
    THEOREM         reduce using rule 23 (statement -> termination_hypothesis .)
    INIT            reduce using rule 23 (statement -> termination_hypothesis .)
    ATTRIBUTE       reduce using rule 23 (statement -> termination_hypothesis .)
    $end            reduce using rule 23 (statement -> termination_hypothesis .)


state 25

    (24) statement -> spec_definition .

    CONSTANTS       reduce using rule 24 (statement -> spec_definition .)
    VARIABLES       reduce using rule 24 (statement -> spec_definition .)
    ASSUME          reduce using rule 24 (statement -> spec_definition .)
    EventuallyTerminates reduce using rule 24 (statement -> spec_definition .)
    LoopInvariant   reduce using rule 24 (statement -> spec_definition .)
    TerminationHypothesis reduce using rule 24 (statement -> spec_definition .)
    SPEC            reduce using rule 24 (statement -> spec_definition .)
    THEOREM         reduce using rule 24 (statement -> spec_definition .)
    INIT            reduce using rule 24 (statement -> spec_definition .)
    ATTRIBUTE       reduce using rule 24 (statement -> spec_definition .)
    $end            reduce using rule 24 (statement -> spec_definition .)


state 26

    (25) statement -> theorem_definition .

    CONSTANTS       reduce using rule 25 (statement -> theorem_definition .)
    VARIABLES       reduce using rule 25 (statement -> theorem_definition .)
    ASSUME          reduce using rule 25 (statement -> theorem_definition .)
    EventuallyTerminates reduce using rule 25 (statement -> theorem_definition .)
    LoopInvariant   reduce using rule 25 (statement -> theorem_definition .)
    TerminationHypothesis reduce using rule 25 (statement -> theorem_definition .)
    SPEC            reduce using rule 25 (statement -> theorem_definition .)
    THEOREM         reduce using rule 25 (statement -> theorem_definition .)
    INIT            reduce using rule 25 (statement -> theorem_definition .)
    ATTRIBUTE       reduce using rule 25 (statement -> theorem_definition .)
    $end            reduce using rule 25 (statement -> theorem_definition .)


state 27

    (26) statement -> init .

    CONSTANTS       reduce using rule 26 (statement -> init .)
    VARIABLES       reduce using rule 26 (statement -> init .)
    ASSUME          reduce using rule 26 (statement -> init .)
    EventuallyTerminates reduce using rule 26 (statement -> init .)
    LoopInvariant   reduce using rule 26 (statement -> init .)
    TerminationHypothesis reduce using rule 26 (statement -> init .)
    SPEC            reduce using rule 26 (statement -> init .)
    THEOREM         reduce using rule 26 (statement -> init .)
    INIT            reduce using rule 26 (statement -> init .)
    ATTRIBUTE       reduce using rule 26 (statement -> init .)
    $end            reduce using rule 26 (statement -> init .)


state 28

    (27) constants_statement -> CONSTANTS . names
    (7) names -> . names COMMA attribute
    (8) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 44
    attribute                      shift and go to state 43

state 29

    (28) variables_statement -> VARIABLES . names
    (7) names -> . names COMMA attribute
    (8) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 45
    attribute                      shift and go to state 43

state 30

    (29) assume_statement -> ASSUME . expression AND expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 46
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 31

    (87) liveness_property -> EventuallyTerminates . equals property_details
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 54

state 32

    (89) loop_invariant -> LoopInvariant . equals action_formula
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 55

state 33

    (90) termination_hypothesis -> TerminationHypothesis . equals conditional_statements
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 56

state 34

    (94) spec_definition -> SPEC . equals AND function_conditions
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 57

state 35

    (95) theorem_definition -> THEOREM . SPEC IMPLIES AND function_conditions

    SPEC            shift and go to state 58


state 36

    (57) init -> INIT . equals attribute IN_A_SET init_set_statement
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 59

state 37

    (56) type_invariant -> attribute equals . expression
    (51) set_definition -> attribute equals . LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (61) bean_value_count -> attribute equals . bean_equation
    (63) function_declaration -> attribute equals . AND function_conditions except_section
    (81) termination_statement -> attribute equals . AND function_conditions
    (82) next_state_relation -> attribute equals . OR function_conditions
    (83) action_formula_definition -> attribute equals . action_formula
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (62) bean_equation -> . dot_access PLUS dot_access
    (84) action_formula -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute

    LEFT_SQR_BRACKET shift and go to state 62
    AND             shift and go to state 64
    OR              shift and go to state 65
    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68

    attribute                      shift and go to state 60
    expression                     shift and go to state 61
    bean_equation                  shift and go to state 63
    action_formula                 shift and go to state 66
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    type_invariant_expression      shift and go to state 50
    dot_access                     shift and go to state 67

state 38

    (49) equals -> EQUALS_DEFINITIONS .

    LEFT_SQR_BRACKET reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    AND             reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    OR              reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    NUMBER_LITERAL  reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    STRING_LITERAL  reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    LEFT_PAREN      reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    ATTRIBUTE       reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    NEXT_VALUE_OF_ATTRIBUTE reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    EVENTUALLY      reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    IF              reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)
    AT              reduce using rule 49 (equals -> EQUALS_DEFINITIONS .)


state 39

    (50) equals -> EQUALS_EQUALITY .

    LEFT_SQR_BRACKET reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    AND             reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    OR              reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    NUMBER_LITERAL  reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    STRING_LITERAL  reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    LEFT_PAREN      reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    ATTRIBUTE       reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    NEXT_VALUE_OF_ATTRIBUTE reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    EVENTUALLY      reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    IF              reduce using rule 50 (equals -> EQUALS_EQUALITY .)
    AT              reduce using rule 50 (equals -> EQUALS_EQUALITY .)


state 40

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements .
    (9) statements -> statements . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME expression AND expression
    (56) type_invariant -> . attribute equals expression
    (51) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (61) bean_value_count -> . attribute equals bean_equation
    (63) function_declaration -> . attribute equals AND function_conditions except_section
    (81) termination_statement -> . attribute equals AND function_conditions
    (82) next_state_relation -> . attribute equals OR function_conditions
    (83) action_formula_definition -> . attribute equals action_formula
    (87) liveness_property -> . EventuallyTerminates equals property_details
    (89) loop_invariant -> . LoopInvariant equals action_formula
    (90) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (94) spec_definition -> . SPEC equals AND function_conditions
    (95) theorem_definition -> . THEOREM SPEC IMPLIES AND function_conditions
    (57) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    $end            reduce using rule 1 (module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements .)
    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statement                      shift and go to state 41
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 41

    (9) statements -> statements statement .

    CONSTANTS       reduce using rule 9 (statements -> statements statement .)
    VARIABLES       reduce using rule 9 (statements -> statements statement .)
    ASSUME          reduce using rule 9 (statements -> statements statement .)
    EventuallyTerminates reduce using rule 9 (statements -> statements statement .)
    LoopInvariant   reduce using rule 9 (statements -> statements statement .)
    TerminationHypothesis reduce using rule 9 (statements -> statements statement .)
    SPEC            reduce using rule 9 (statements -> statements statement .)
    THEOREM         reduce using rule 9 (statements -> statements statement .)
    INIT            reduce using rule 9 (statements -> statements statement .)
    ATTRIBUTE       reduce using rule 9 (statements -> statements statement .)
    $end            reduce using rule 9 (statements -> statements statement .)


state 42

    (6) extends -> EXTENDS names .
    (7) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 6 (extends -> EXTENDS names .)
    VARIABLES       reduce using rule 6 (extends -> EXTENDS names .)
    ASSUME          reduce using rule 6 (extends -> EXTENDS names .)
    EventuallyTerminates reduce using rule 6 (extends -> EXTENDS names .)
    LoopInvariant   reduce using rule 6 (extends -> EXTENDS names .)
    TerminationHypothesis reduce using rule 6 (extends -> EXTENDS names .)
    SPEC            reduce using rule 6 (extends -> EXTENDS names .)
    THEOREM         reduce using rule 6 (extends -> EXTENDS names .)
    INIT            reduce using rule 6 (extends -> EXTENDS names .)
    ATTRIBUTE       reduce using rule 6 (extends -> EXTENDS names .)
    COMMA           shift and go to state 69


state 43

    (8) names -> attribute .

    COMMA           reduce using rule 8 (names -> attribute .)
    CONSTANTS       reduce using rule 8 (names -> attribute .)
    VARIABLES       reduce using rule 8 (names -> attribute .)
    ASSUME          reduce using rule 8 (names -> attribute .)
    EventuallyTerminates reduce using rule 8 (names -> attribute .)
    LoopInvariant   reduce using rule 8 (names -> attribute .)
    TerminationHypothesis reduce using rule 8 (names -> attribute .)
    SPEC            reduce using rule 8 (names -> attribute .)
    THEOREM         reduce using rule 8 (names -> attribute .)
    INIT            reduce using rule 8 (names -> attribute .)
    ATTRIBUTE       reduce using rule 8 (names -> attribute .)
    $end            reduce using rule 8 (names -> attribute .)


state 44

    (27) constants_statement -> CONSTANTS names .
    (7) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 27 (constants_statement -> CONSTANTS names .)
    VARIABLES       reduce using rule 27 (constants_statement -> CONSTANTS names .)
    ASSUME          reduce using rule 27 (constants_statement -> CONSTANTS names .)
    EventuallyTerminates reduce using rule 27 (constants_statement -> CONSTANTS names .)
    LoopInvariant   reduce using rule 27 (constants_statement -> CONSTANTS names .)
    TerminationHypothesis reduce using rule 27 (constants_statement -> CONSTANTS names .)
    SPEC            reduce using rule 27 (constants_statement -> CONSTANTS names .)
    THEOREM         reduce using rule 27 (constants_statement -> CONSTANTS names .)
    INIT            reduce using rule 27 (constants_statement -> CONSTANTS names .)
    ATTRIBUTE       reduce using rule 27 (constants_statement -> CONSTANTS names .)
    $end            reduce using rule 27 (constants_statement -> CONSTANTS names .)
    COMMA           shift and go to state 69


state 45

    (28) variables_statement -> VARIABLES names .
    (7) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 28 (variables_statement -> VARIABLES names .)
    VARIABLES       reduce using rule 28 (variables_statement -> VARIABLES names .)
    ASSUME          reduce using rule 28 (variables_statement -> VARIABLES names .)
    EventuallyTerminates reduce using rule 28 (variables_statement -> VARIABLES names .)
    LoopInvariant   reduce using rule 28 (variables_statement -> VARIABLES names .)
    TerminationHypothesis reduce using rule 28 (variables_statement -> VARIABLES names .)
    SPEC            reduce using rule 28 (variables_statement -> VARIABLES names .)
    THEOREM         reduce using rule 28 (variables_statement -> VARIABLES names .)
    INIT            reduce using rule 28 (variables_statement -> VARIABLES names .)
    ATTRIBUTE       reduce using rule 28 (variables_statement -> VARIABLES names .)
    $end            reduce using rule 28 (variables_statement -> VARIABLES names .)
    COMMA           shift and go to state 69


state 46

    (29) assume_statement -> ASSUME expression . AND expression
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    AND             shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74


state 47

    (34) expression -> set_membership .

    AND             reduce using rule 34 (expression -> set_membership .)
    PLUS            reduce using rule 34 (expression -> set_membership .)
    MINUS           reduce using rule 34 (expression -> set_membership .)
    STAR            reduce using rule 34 (expression -> set_membership .)
    DIVIDE          reduce using rule 34 (expression -> set_membership .)
    CONSTANTS       reduce using rule 34 (expression -> set_membership .)
    VARIABLES       reduce using rule 34 (expression -> set_membership .)
    ASSUME          reduce using rule 34 (expression -> set_membership .)
    EventuallyTerminates reduce using rule 34 (expression -> set_membership .)
    LoopInvariant   reduce using rule 34 (expression -> set_membership .)
    TerminationHypothesis reduce using rule 34 (expression -> set_membership .)
    SPEC            reduce using rule 34 (expression -> set_membership .)
    THEOREM         reduce using rule 34 (expression -> set_membership .)
    INIT            reduce using rule 34 (expression -> set_membership .)
    ATTRIBUTE       reduce using rule 34 (expression -> set_membership .)
    $end            reduce using rule 34 (expression -> set_membership .)
    RIGHT_PAREN     reduce using rule 34 (expression -> set_membership .)
    EQUALS_DEFINITIONS reduce using rule 34 (expression -> set_membership .)
    EQUALS_EQUALITY reduce using rule 34 (expression -> set_membership .)


state 48

    (35) expression -> comparison .

    AND             reduce using rule 35 (expression -> comparison .)
    PLUS            reduce using rule 35 (expression -> comparison .)
    MINUS           reduce using rule 35 (expression -> comparison .)
    STAR            reduce using rule 35 (expression -> comparison .)
    DIVIDE          reduce using rule 35 (expression -> comparison .)
    CONSTANTS       reduce using rule 35 (expression -> comparison .)
    VARIABLES       reduce using rule 35 (expression -> comparison .)
    ASSUME          reduce using rule 35 (expression -> comparison .)
    EventuallyTerminates reduce using rule 35 (expression -> comparison .)
    LoopInvariant   reduce using rule 35 (expression -> comparison .)
    TerminationHypothesis reduce using rule 35 (expression -> comparison .)
    SPEC            reduce using rule 35 (expression -> comparison .)
    THEOREM         reduce using rule 35 (expression -> comparison .)
    INIT            reduce using rule 35 (expression -> comparison .)
    ATTRIBUTE       reduce using rule 35 (expression -> comparison .)
    $end            reduce using rule 35 (expression -> comparison .)
    RIGHT_PAREN     reduce using rule 35 (expression -> comparison .)
    EQUALS_DEFINITIONS reduce using rule 35 (expression -> comparison .)
    EQUALS_EQUALITY reduce using rule 35 (expression -> comparison .)


state 49

    (36) expression -> attribute .
    (48) set_membership -> attribute . IN_A_SET Nat
    (42) comparison -> attribute . comparison_rule NUMBER_LITERAL
    (43) comparison -> attribute . comparison_rule attribute
    (40) type_invariant_expression -> attribute . IN_A_SET attribute
    (44) comparison_rule -> . GREATER_OR_EQ
    (45) comparison_rule -> . LESS_OR_EQ
    (46) comparison_rule -> . GREATER_THAN
    (47) comparison_rule -> . LESS_THAN

    AND             reduce using rule 36 (expression -> attribute .)
    PLUS            reduce using rule 36 (expression -> attribute .)
    MINUS           reduce using rule 36 (expression -> attribute .)
    STAR            reduce using rule 36 (expression -> attribute .)
    DIVIDE          reduce using rule 36 (expression -> attribute .)
    RIGHT_PAREN     reduce using rule 36 (expression -> attribute .)
    CONSTANTS       reduce using rule 36 (expression -> attribute .)
    VARIABLES       reduce using rule 36 (expression -> attribute .)
    ASSUME          reduce using rule 36 (expression -> attribute .)
    EventuallyTerminates reduce using rule 36 (expression -> attribute .)
    LoopInvariant   reduce using rule 36 (expression -> attribute .)
    TerminationHypothesis reduce using rule 36 (expression -> attribute .)
    SPEC            reduce using rule 36 (expression -> attribute .)
    THEOREM         reduce using rule 36 (expression -> attribute .)
    INIT            reduce using rule 36 (expression -> attribute .)
    ATTRIBUTE       reduce using rule 36 (expression -> attribute .)
    $end            reduce using rule 36 (expression -> attribute .)
    EQUALS_DEFINITIONS reduce using rule 36 (expression -> attribute .)
    EQUALS_EQUALITY reduce using rule 36 (expression -> attribute .)
    IN_A_SET        shift and go to state 75
    GREATER_OR_EQ   shift and go to state 77
    LESS_OR_EQ      shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_THAN       shift and go to state 80

    comparison_rule                shift and go to state 76

state 50

    (37) expression -> type_invariant_expression .

    AND             reduce using rule 37 (expression -> type_invariant_expression .)
    PLUS            reduce using rule 37 (expression -> type_invariant_expression .)
    MINUS           reduce using rule 37 (expression -> type_invariant_expression .)
    STAR            reduce using rule 37 (expression -> type_invariant_expression .)
    DIVIDE          reduce using rule 37 (expression -> type_invariant_expression .)
    CONSTANTS       reduce using rule 37 (expression -> type_invariant_expression .)
    VARIABLES       reduce using rule 37 (expression -> type_invariant_expression .)
    ASSUME          reduce using rule 37 (expression -> type_invariant_expression .)
    EventuallyTerminates reduce using rule 37 (expression -> type_invariant_expression .)
    LoopInvariant   reduce using rule 37 (expression -> type_invariant_expression .)
    TerminationHypothesis reduce using rule 37 (expression -> type_invariant_expression .)
    SPEC            reduce using rule 37 (expression -> type_invariant_expression .)
    THEOREM         reduce using rule 37 (expression -> type_invariant_expression .)
    INIT            reduce using rule 37 (expression -> type_invariant_expression .)
    ATTRIBUTE       reduce using rule 37 (expression -> type_invariant_expression .)
    $end            reduce using rule 37 (expression -> type_invariant_expression .)
    RIGHT_PAREN     reduce using rule 37 (expression -> type_invariant_expression .)
    EQUALS_DEFINITIONS reduce using rule 37 (expression -> type_invariant_expression .)
    EQUALS_EQUALITY reduce using rule 37 (expression -> type_invariant_expression .)


state 51

    (38) expression -> NUMBER_LITERAL .

    AND             reduce using rule 38 (expression -> NUMBER_LITERAL .)
    PLUS            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    MINUS           reduce using rule 38 (expression -> NUMBER_LITERAL .)
    STAR            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    DIVIDE          reduce using rule 38 (expression -> NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 38 (expression -> NUMBER_LITERAL .)
    VARIABLES       reduce using rule 38 (expression -> NUMBER_LITERAL .)
    ASSUME          reduce using rule 38 (expression -> NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 38 (expression -> NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 38 (expression -> NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 38 (expression -> NUMBER_LITERAL .)
    SPEC            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    THEOREM         reduce using rule 38 (expression -> NUMBER_LITERAL .)
    INIT            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 38 (expression -> NUMBER_LITERAL .)
    $end            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    RIGHT_PAREN     reduce using rule 38 (expression -> NUMBER_LITERAL .)
    EQUALS_DEFINITIONS reduce using rule 38 (expression -> NUMBER_LITERAL .)
    EQUALS_EQUALITY reduce using rule 38 (expression -> NUMBER_LITERAL .)


state 52

    (39) expression -> STRING_LITERAL .

    AND             reduce using rule 39 (expression -> STRING_LITERAL .)
    PLUS            reduce using rule 39 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 39 (expression -> STRING_LITERAL .)
    STAR            reduce using rule 39 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 39 (expression -> STRING_LITERAL .)
    CONSTANTS       reduce using rule 39 (expression -> STRING_LITERAL .)
    VARIABLES       reduce using rule 39 (expression -> STRING_LITERAL .)
    ASSUME          reduce using rule 39 (expression -> STRING_LITERAL .)
    EventuallyTerminates reduce using rule 39 (expression -> STRING_LITERAL .)
    LoopInvariant   reduce using rule 39 (expression -> STRING_LITERAL .)
    TerminationHypothesis reduce using rule 39 (expression -> STRING_LITERAL .)
    SPEC            reduce using rule 39 (expression -> STRING_LITERAL .)
    THEOREM         reduce using rule 39 (expression -> STRING_LITERAL .)
    INIT            reduce using rule 39 (expression -> STRING_LITERAL .)
    ATTRIBUTE       reduce using rule 39 (expression -> STRING_LITERAL .)
    $end            reduce using rule 39 (expression -> STRING_LITERAL .)
    RIGHT_PAREN     reduce using rule 39 (expression -> STRING_LITERAL .)
    EQUALS_DEFINITIONS reduce using rule 39 (expression -> STRING_LITERAL .)
    EQUALS_EQUALITY reduce using rule 39 (expression -> STRING_LITERAL .)


state 53

    (96) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 81
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 54

    (87) liveness_property -> EventuallyTerminates equals . property_details
    (88) property_details -> . EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN

    EVENTUALLY      shift and go to state 83

    property_details               shift and go to state 82

state 55

    (89) loop_invariant -> LoopInvariant equals . action_formula
    (84) action_formula -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 85

    action_formula                 shift and go to state 84

state 56

    (90) termination_hypothesis -> TerminationHypothesis equals . conditional_statements
    (91) conditional_statements -> . IF conditional_statement THEN conditional_statement ELSE conditional_statement

    IF              shift and go to state 87

    conditional_statements         shift and go to state 86

state 57

    (94) spec_definition -> SPEC equals . AND function_conditions

    AND             shift and go to state 88


state 58

    (95) theorem_definition -> THEOREM SPEC . IMPLIES AND function_conditions

    IMPLIES         shift and go to state 89


state 59

    (57) init -> INIT equals . attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 90

state 60

    (36) expression -> attribute .
    (48) set_membership -> attribute . IN_A_SET Nat
    (42) comparison -> attribute . comparison_rule NUMBER_LITERAL
    (43) comparison -> attribute . comparison_rule attribute
    (40) type_invariant_expression -> attribute . IN_A_SET attribute
    (4) dot_access -> attribute . DOT attribute
    (44) comparison_rule -> . GREATER_OR_EQ
    (45) comparison_rule -> . LESS_OR_EQ
    (46) comparison_rule -> . GREATER_THAN
    (47) comparison_rule -> . LESS_THAN

    PLUS            reduce using rule 36 (expression -> attribute .)
    MINUS           reduce using rule 36 (expression -> attribute .)
    STAR            reduce using rule 36 (expression -> attribute .)
    DIVIDE          reduce using rule 36 (expression -> attribute .)
    CONSTANTS       reduce using rule 36 (expression -> attribute .)
    VARIABLES       reduce using rule 36 (expression -> attribute .)
    ASSUME          reduce using rule 36 (expression -> attribute .)
    EventuallyTerminates reduce using rule 36 (expression -> attribute .)
    LoopInvariant   reduce using rule 36 (expression -> attribute .)
    TerminationHypothesis reduce using rule 36 (expression -> attribute .)
    SPEC            reduce using rule 36 (expression -> attribute .)
    THEOREM         reduce using rule 36 (expression -> attribute .)
    INIT            reduce using rule 36 (expression -> attribute .)
    ATTRIBUTE       reduce using rule 36 (expression -> attribute .)
    $end            reduce using rule 36 (expression -> attribute .)
    IN_A_SET        shift and go to state 75
    DOT             shift and go to state 91
    GREATER_OR_EQ   shift and go to state 77
    LESS_OR_EQ      shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_THAN       shift and go to state 80

    comparison_rule                shift and go to state 76

state 61

    (56) type_invariant -> attribute equals expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    CONSTANTS       reduce using rule 56 (type_invariant -> attribute equals expression .)
    VARIABLES       reduce using rule 56 (type_invariant -> attribute equals expression .)
    ASSUME          reduce using rule 56 (type_invariant -> attribute equals expression .)
    EventuallyTerminates reduce using rule 56 (type_invariant -> attribute equals expression .)
    LoopInvariant   reduce using rule 56 (type_invariant -> attribute equals expression .)
    TerminationHypothesis reduce using rule 56 (type_invariant -> attribute equals expression .)
    SPEC            reduce using rule 56 (type_invariant -> attribute equals expression .)
    THEOREM         reduce using rule 56 (type_invariant -> attribute equals expression .)
    INIT            reduce using rule 56 (type_invariant -> attribute equals expression .)
    ATTRIBUTE       reduce using rule 56 (type_invariant -> attribute equals expression .)
    $end            reduce using rule 56 (type_invariant -> attribute equals expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74


state 62

    (51) set_definition -> attribute equals LEFT_SQR_BRACKET . set_info RIGHT_SQR_BRACKET
    (84) action_formula -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (52) set_info -> . set_info COMMA set_individual_info
    (53) set_info -> . set_individual_info
    (54) set_individual_info -> . ATTRIBUTE COLON set_scope

    RIGHT_SQR_BRACKET shift and go to state 93
    ATTRIBUTE       shift and go to state 95

    set_info                       shift and go to state 92
    set_individual_info            shift and go to state 94

state 63

    (61) bean_value_count -> attribute equals bean_equation .

    CONSTANTS       reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    VARIABLES       reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    ASSUME          reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    EventuallyTerminates reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    LoopInvariant   reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    TerminationHypothesis reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    SPEC            reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    THEOREM         reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    INIT            reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    ATTRIBUTE       reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)
    $end            reduce using rule 61 (bean_value_count -> attribute equals bean_equation .)


state 64

    (63) function_declaration -> attribute equals AND . function_conditions except_section
    (81) termination_statement -> attribute equals AND . function_conditions
    (64) function_conditions -> . function_condition
    (65) function_conditions -> . function_conditions AND function_condition
    (66) function_conditions -> . function_conditions OR function_condition
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 96
    function_conditions            shift and go to state 97
    function_condition             shift and go to state 98

state 65

    (82) next_state_relation -> attribute equals OR . function_conditions
    (64) function_conditions -> . function_condition
    (65) function_conditions -> . function_conditions AND function_condition
    (66) function_conditions -> . function_conditions OR function_condition
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 96
    function_conditions            shift and go to state 106
    function_condition             shift and go to state 98

state 66

    (83) action_formula_definition -> attribute equals action_formula .

    CONSTANTS       reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    VARIABLES       reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    ASSUME          reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    EventuallyTerminates reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    LoopInvariant   reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    TerminationHypothesis reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    SPEC            reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    THEOREM         reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    INIT            reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    ATTRIBUTE       reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)
    $end            reduce using rule 83 (action_formula_definition -> attribute equals action_formula .)


state 67

    (62) bean_equation -> dot_access . PLUS dot_access

    PLUS            shift and go to state 107


state 68

    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE . DOT attribute

    DOT             shift and go to state 108


state 69

    (7) names -> names COMMA . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 109

state 70

    (29) assume_statement -> ASSUME expression AND . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 110
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 71

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 111
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 72

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 112
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 73

    (32) expression -> expression STAR . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 113
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 74

    (33) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 114
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 75

    (48) set_membership -> attribute IN_A_SET . Nat
    (40) type_invariant_expression -> attribute IN_A_SET . attribute
    (3) attribute -> . ATTRIBUTE

    Nat             shift and go to state 116
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 115

state 76

    (42) comparison -> attribute comparison_rule . NUMBER_LITERAL
    (43) comparison -> attribute comparison_rule . attribute
    (3) attribute -> . ATTRIBUTE

    NUMBER_LITERAL  shift and go to state 118
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 117

state 77

    (44) comparison_rule -> GREATER_OR_EQ .

    NUMBER_LITERAL  reduce using rule 44 (comparison_rule -> GREATER_OR_EQ .)
    ATTRIBUTE       reduce using rule 44 (comparison_rule -> GREATER_OR_EQ .)


state 78

    (45) comparison_rule -> LESS_OR_EQ .

    NUMBER_LITERAL  reduce using rule 45 (comparison_rule -> LESS_OR_EQ .)
    ATTRIBUTE       reduce using rule 45 (comparison_rule -> LESS_OR_EQ .)


state 79

    (46) comparison_rule -> GREATER_THAN .

    NUMBER_LITERAL  reduce using rule 46 (comparison_rule -> GREATER_THAN .)
    ATTRIBUTE       reduce using rule 46 (comparison_rule -> GREATER_THAN .)


state 80

    (47) comparison_rule -> LESS_THAN .

    NUMBER_LITERAL  reduce using rule 47 (comparison_rule -> LESS_THAN .)
    ATTRIBUTE       reduce using rule 47 (comparison_rule -> LESS_THAN .)


state 81

    (96) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    RIGHT_PAREN     shift and go to state 119
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74


state 82

    (87) liveness_property -> EventuallyTerminates equals property_details .

    CONSTANTS       reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    VARIABLES       reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    ASSUME          reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    EventuallyTerminates reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    LoopInvariant   reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    TerminationHypothesis reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    SPEC            reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    THEOREM         reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    INIT            reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    ATTRIBUTE       reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)
    $end            reduce using rule 87 (liveness_property -> EventuallyTerminates equals property_details .)


state 83

    (88) property_details -> EVENTUALLY . LEFT_PAREN ENABLED attribute RIGHT_PAREN

    LEFT_PAREN      shift and go to state 120


state 84

    (89) loop_invariant -> LoopInvariant equals action_formula .

    CONSTANTS       reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    VARIABLES       reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    ASSUME          reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    EventuallyTerminates reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    LoopInvariant   reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    TerminationHypothesis reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    SPEC            reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    THEOREM         reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    INIT            reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    ATTRIBUTE       reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)
    $end            reduce using rule 89 (loop_invariant -> LoopInvariant equals action_formula .)


state 85

    (84) action_formula -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 93


state 86

    (90) termination_hypothesis -> TerminationHypothesis equals conditional_statements .

    CONSTANTS       reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    VARIABLES       reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    ASSUME          reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    EventuallyTerminates reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    LoopInvariant   reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    TerminationHypothesis reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    SPEC            reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    THEOREM         reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    INIT            reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    ATTRIBUTE       reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    $end            reduce using rule 90 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)


state 87

    (91) conditional_statements -> IF . conditional_statement THEN conditional_statement ELSE conditional_statement
    (92) conditional_statement -> . dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
    (93) conditional_statement -> . EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    EVENTUALLY      shift and go to state 123
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    conditional_statement          shift and go to state 121
    dot_access                     shift and go to state 122
    attribute                      shift and go to state 124

state 88

    (94) spec_definition -> SPEC equals AND . function_conditions
    (64) function_conditions -> . function_condition
    (65) function_conditions -> . function_conditions AND function_condition
    (66) function_conditions -> . function_conditions OR function_condition
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    function_conditions            shift and go to state 125
    function_condition             shift and go to state 98
    attribute                      shift and go to state 96

state 89

    (95) theorem_definition -> THEOREM SPEC IMPLIES . AND function_conditions

    AND             shift and go to state 126


state 90

    (57) init -> INIT equals attribute . IN_A_SET init_set_statement

    IN_A_SET        shift and go to state 127


state 91

    (4) dot_access -> attribute DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 128

state 92

    (51) set_definition -> attribute equals LEFT_SQR_BRACKET set_info . RIGHT_SQR_BRACKET
    (52) set_info -> set_info . COMMA set_individual_info

    RIGHT_SQR_BRACKET shift and go to state 129
    COMMA           shift and go to state 130


state 93

    (84) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET . LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 131


state 94

    (53) set_info -> set_individual_info .

    RIGHT_SQR_BRACKET reduce using rule 53 (set_info -> set_individual_info .)
    COMMA           reduce using rule 53 (set_info -> set_individual_info .)


state 95

    (54) set_individual_info -> ATTRIBUTE . COLON set_scope

    COLON           shift and go to state 132


state 96

    (67) function_condition -> attribute . comparison_rule NUMBER_LITERAL
    (68) function_condition -> attribute . equals NUMBER_LITERAL
    (72) function_condition -> attribute .
    (77) function_condition -> attribute . DOT attribute comparison_rule NUMBER_LITERAL
    (44) comparison_rule -> . GREATER_OR_EQ
    (45) comparison_rule -> . LESS_OR_EQ
    (46) comparison_rule -> . GREATER_THAN
    (47) comparison_rule -> . LESS_THAN
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    AND             reduce using rule 72 (function_condition -> attribute .)
    OR              reduce using rule 72 (function_condition -> attribute .)
    CONSTANTS       reduce using rule 72 (function_condition -> attribute .)
    VARIABLES       reduce using rule 72 (function_condition -> attribute .)
    ASSUME          reduce using rule 72 (function_condition -> attribute .)
    EventuallyTerminates reduce using rule 72 (function_condition -> attribute .)
    LoopInvariant   reduce using rule 72 (function_condition -> attribute .)
    TerminationHypothesis reduce using rule 72 (function_condition -> attribute .)
    SPEC            reduce using rule 72 (function_condition -> attribute .)
    THEOREM         reduce using rule 72 (function_condition -> attribute .)
    INIT            reduce using rule 72 (function_condition -> attribute .)
    ATTRIBUTE       reduce using rule 72 (function_condition -> attribute .)
    $end            reduce using rule 72 (function_condition -> attribute .)
    DOT             shift and go to state 135
    GREATER_OR_EQ   shift and go to state 77
    LESS_OR_EQ      shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_THAN       shift and go to state 80
    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    comparison_rule                shift and go to state 133
    equals                         shift and go to state 134

state 97

    (63) function_declaration -> attribute equals AND function_conditions . except_section
    (81) termination_statement -> attribute equals AND function_conditions .
    (65) function_conditions -> function_conditions . AND function_condition
    (66) function_conditions -> function_conditions . OR function_condition
    (78) except_section -> . AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause

    CONSTANTS       reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    VARIABLES       reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    ASSUME          reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    EventuallyTerminates reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    LoopInvariant   reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    TerminationHypothesis reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    SPEC            reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    THEOREM         reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    INIT            reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    ATTRIBUTE       reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    $end            reduce using rule 81 (termination_statement -> attribute equals AND function_conditions .)
    AND             shift and go to state 136
    OR              shift and go to state 138

    except_section                 shift and go to state 137

state 98

    (64) function_conditions -> function_condition .

    AND             reduce using rule 64 (function_conditions -> function_condition .)
    OR              reduce using rule 64 (function_conditions -> function_condition .)
    CONSTANTS       reduce using rule 64 (function_conditions -> function_condition .)
    VARIABLES       reduce using rule 64 (function_conditions -> function_condition .)
    ASSUME          reduce using rule 64 (function_conditions -> function_condition .)
    EventuallyTerminates reduce using rule 64 (function_conditions -> function_condition .)
    LoopInvariant   reduce using rule 64 (function_conditions -> function_condition .)
    TerminationHypothesis reduce using rule 64 (function_conditions -> function_condition .)
    SPEC            reduce using rule 64 (function_conditions -> function_condition .)
    THEOREM         reduce using rule 64 (function_conditions -> function_condition .)
    INIT            reduce using rule 64 (function_conditions -> function_condition .)
    ATTRIBUTE       reduce using rule 64 (function_conditions -> function_condition .)
    $end            reduce using rule 64 (function_conditions -> function_condition .)


state 99

    (69) function_condition -> UNCHANGED . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 139

state 100

    (70) function_condition -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 140


state 101

    (71) function_condition -> WEAK_FAIRNESS . ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN

    ATTRIBUTE_MAY_CHANGE shift and go to state 141


state 102

    (73) function_condition -> INIT .

    AND             reduce using rule 73 (function_condition -> INIT .)
    OR              reduce using rule 73 (function_condition -> INIT .)
    CONSTANTS       reduce using rule 73 (function_condition -> INIT .)
    VARIABLES       reduce using rule 73 (function_condition -> INIT .)
    ASSUME          reduce using rule 73 (function_condition -> INIT .)
    EventuallyTerminates reduce using rule 73 (function_condition -> INIT .)
    LoopInvariant   reduce using rule 73 (function_condition -> INIT .)
    TerminationHypothesis reduce using rule 73 (function_condition -> INIT .)
    SPEC            reduce using rule 73 (function_condition -> INIT .)
    THEOREM         reduce using rule 73 (function_condition -> INIT .)
    INIT            reduce using rule 73 (function_condition -> INIT .)
    ATTRIBUTE       reduce using rule 73 (function_condition -> INIT .)
    $end            reduce using rule 73 (function_condition -> INIT .)


state 103

    (74) function_condition -> EventuallyTerminates .

    AND             reduce using rule 74 (function_condition -> EventuallyTerminates .)
    OR              reduce using rule 74 (function_condition -> EventuallyTerminates .)
    CONSTANTS       reduce using rule 74 (function_condition -> EventuallyTerminates .)
    VARIABLES       reduce using rule 74 (function_condition -> EventuallyTerminates .)
    ASSUME          reduce using rule 74 (function_condition -> EventuallyTerminates .)
    EventuallyTerminates reduce using rule 74 (function_condition -> EventuallyTerminates .)
    LoopInvariant   reduce using rule 74 (function_condition -> EventuallyTerminates .)
    TerminationHypothesis reduce using rule 74 (function_condition -> EventuallyTerminates .)
    SPEC            reduce using rule 74 (function_condition -> EventuallyTerminates .)
    THEOREM         reduce using rule 74 (function_condition -> EventuallyTerminates .)
    INIT            reduce using rule 74 (function_condition -> EventuallyTerminates .)
    ATTRIBUTE       reduce using rule 74 (function_condition -> EventuallyTerminates .)
    $end            reduce using rule 74 (function_condition -> EventuallyTerminates .)


state 104

    (75) function_condition -> LoopInvariant .

    AND             reduce using rule 75 (function_condition -> LoopInvariant .)
    OR              reduce using rule 75 (function_condition -> LoopInvariant .)
    CONSTANTS       reduce using rule 75 (function_condition -> LoopInvariant .)
    VARIABLES       reduce using rule 75 (function_condition -> LoopInvariant .)
    ASSUME          reduce using rule 75 (function_condition -> LoopInvariant .)
    EventuallyTerminates reduce using rule 75 (function_condition -> LoopInvariant .)
    LoopInvariant   reduce using rule 75 (function_condition -> LoopInvariant .)
    TerminationHypothesis reduce using rule 75 (function_condition -> LoopInvariant .)
    SPEC            reduce using rule 75 (function_condition -> LoopInvariant .)
    THEOREM         reduce using rule 75 (function_condition -> LoopInvariant .)
    INIT            reduce using rule 75 (function_condition -> LoopInvariant .)
    ATTRIBUTE       reduce using rule 75 (function_condition -> LoopInvariant .)
    $end            reduce using rule 75 (function_condition -> LoopInvariant .)


state 105

    (76) function_condition -> TerminationHypothesis .

    AND             reduce using rule 76 (function_condition -> TerminationHypothesis .)
    OR              reduce using rule 76 (function_condition -> TerminationHypothesis .)
    CONSTANTS       reduce using rule 76 (function_condition -> TerminationHypothesis .)
    VARIABLES       reduce using rule 76 (function_condition -> TerminationHypothesis .)
    ASSUME          reduce using rule 76 (function_condition -> TerminationHypothesis .)
    EventuallyTerminates reduce using rule 76 (function_condition -> TerminationHypothesis .)
    LoopInvariant   reduce using rule 76 (function_condition -> TerminationHypothesis .)
    TerminationHypothesis reduce using rule 76 (function_condition -> TerminationHypothesis .)
    SPEC            reduce using rule 76 (function_condition -> TerminationHypothesis .)
    THEOREM         reduce using rule 76 (function_condition -> TerminationHypothesis .)
    INIT            reduce using rule 76 (function_condition -> TerminationHypothesis .)
    ATTRIBUTE       reduce using rule 76 (function_condition -> TerminationHypothesis .)
    $end            reduce using rule 76 (function_condition -> TerminationHypothesis .)


state 106

    (82) next_state_relation -> attribute equals OR function_conditions .
    (65) function_conditions -> function_conditions . AND function_condition
    (66) function_conditions -> function_conditions . OR function_condition

    CONSTANTS       reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    VARIABLES       reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    ASSUME          reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    EventuallyTerminates reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    LoopInvariant   reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    TerminationHypothesis reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    SPEC            reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    THEOREM         reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    INIT            reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    ATTRIBUTE       reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    $end            reduce using rule 82 (next_state_relation -> attribute equals OR function_conditions .)
    AND             shift and go to state 142
    OR              shift and go to state 138


state 107

    (62) bean_equation -> dot_access PLUS . dot_access
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 143
    attribute                      shift and go to state 124

state 108

    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 144

state 109

    (7) names -> names COMMA attribute .

    COMMA           reduce using rule 7 (names -> names COMMA attribute .)
    CONSTANTS       reduce using rule 7 (names -> names COMMA attribute .)
    VARIABLES       reduce using rule 7 (names -> names COMMA attribute .)
    ASSUME          reduce using rule 7 (names -> names COMMA attribute .)
    EventuallyTerminates reduce using rule 7 (names -> names COMMA attribute .)
    LoopInvariant   reduce using rule 7 (names -> names COMMA attribute .)
    TerminationHypothesis reduce using rule 7 (names -> names COMMA attribute .)
    SPEC            reduce using rule 7 (names -> names COMMA attribute .)
    THEOREM         reduce using rule 7 (names -> names COMMA attribute .)
    INIT            reduce using rule 7 (names -> names COMMA attribute .)
    ATTRIBUTE       reduce using rule 7 (names -> names COMMA attribute .)
    $end            reduce using rule 7 (names -> names COMMA attribute .)


state 110

    (29) assume_statement -> ASSUME expression AND expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    CONSTANTS       reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    VARIABLES       reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    ASSUME          reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    EventuallyTerminates reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    LoopInvariant   reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    TerminationHypothesis reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    SPEC            reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    THEOREM         reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    INIT            reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    ATTRIBUTE       reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    $end            reduce using rule 29 (assume_statement -> ASSUME expression AND expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74


state 111

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    CONSTANTS       reduce using rule 30 (expression -> expression PLUS expression .)
    VARIABLES       reduce using rule 30 (expression -> expression PLUS expression .)
    ASSUME          reduce using rule 30 (expression -> expression PLUS expression .)
    EventuallyTerminates reduce using rule 30 (expression -> expression PLUS expression .)
    LoopInvariant   reduce using rule 30 (expression -> expression PLUS expression .)
    TerminationHypothesis reduce using rule 30 (expression -> expression PLUS expression .)
    SPEC            reduce using rule 30 (expression -> expression PLUS expression .)
    THEOREM         reduce using rule 30 (expression -> expression PLUS expression .)
    INIT            reduce using rule 30 (expression -> expression PLUS expression .)
    ATTRIBUTE       reduce using rule 30 (expression -> expression PLUS expression .)
    $end            reduce using rule 30 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 30 (expression -> expression PLUS expression .)
    EQUALS_DEFINITIONS reduce using rule 30 (expression -> expression PLUS expression .)
    EQUALS_EQUALITY reduce using rule 30 (expression -> expression PLUS expression .)
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74

  ! STAR            [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]


state 112

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    CONSTANTS       reduce using rule 31 (expression -> expression MINUS expression .)
    VARIABLES       reduce using rule 31 (expression -> expression MINUS expression .)
    ASSUME          reduce using rule 31 (expression -> expression MINUS expression .)
    EventuallyTerminates reduce using rule 31 (expression -> expression MINUS expression .)
    LoopInvariant   reduce using rule 31 (expression -> expression MINUS expression .)
    TerminationHypothesis reduce using rule 31 (expression -> expression MINUS expression .)
    SPEC            reduce using rule 31 (expression -> expression MINUS expression .)
    THEOREM         reduce using rule 31 (expression -> expression MINUS expression .)
    INIT            reduce using rule 31 (expression -> expression MINUS expression .)
    ATTRIBUTE       reduce using rule 31 (expression -> expression MINUS expression .)
    $end            reduce using rule 31 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 31 (expression -> expression MINUS expression .)
    EQUALS_DEFINITIONS reduce using rule 31 (expression -> expression MINUS expression .)
    EQUALS_EQUALITY reduce using rule 31 (expression -> expression MINUS expression .)
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74

  ! STAR            [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]


state 113

    (32) expression -> expression STAR expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    AND             reduce using rule 32 (expression -> expression STAR expression .)
    PLUS            reduce using rule 32 (expression -> expression STAR expression .)
    MINUS           reduce using rule 32 (expression -> expression STAR expression .)
    STAR            reduce using rule 32 (expression -> expression STAR expression .)
    DIVIDE          reduce using rule 32 (expression -> expression STAR expression .)
    CONSTANTS       reduce using rule 32 (expression -> expression STAR expression .)
    VARIABLES       reduce using rule 32 (expression -> expression STAR expression .)
    ASSUME          reduce using rule 32 (expression -> expression STAR expression .)
    EventuallyTerminates reduce using rule 32 (expression -> expression STAR expression .)
    LoopInvariant   reduce using rule 32 (expression -> expression STAR expression .)
    TerminationHypothesis reduce using rule 32 (expression -> expression STAR expression .)
    SPEC            reduce using rule 32 (expression -> expression STAR expression .)
    THEOREM         reduce using rule 32 (expression -> expression STAR expression .)
    INIT            reduce using rule 32 (expression -> expression STAR expression .)
    ATTRIBUTE       reduce using rule 32 (expression -> expression STAR expression .)
    $end            reduce using rule 32 (expression -> expression STAR expression .)
    RIGHT_PAREN     reduce using rule 32 (expression -> expression STAR expression .)
    EQUALS_DEFINITIONS reduce using rule 32 (expression -> expression STAR expression .)
    EQUALS_EQUALITY reduce using rule 32 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]
  ! STAR            [ shift and go to state 73 ]
  ! DIVIDE          [ shift and go to state 74 ]


state 114

    (33) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    AND             reduce using rule 33 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    STAR            reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    CONSTANTS       reduce using rule 33 (expression -> expression DIVIDE expression .)
    VARIABLES       reduce using rule 33 (expression -> expression DIVIDE expression .)
    ASSUME          reduce using rule 33 (expression -> expression DIVIDE expression .)
    EventuallyTerminates reduce using rule 33 (expression -> expression DIVIDE expression .)
    LoopInvariant   reduce using rule 33 (expression -> expression DIVIDE expression .)
    TerminationHypothesis reduce using rule 33 (expression -> expression DIVIDE expression .)
    SPEC            reduce using rule 33 (expression -> expression DIVIDE expression .)
    THEOREM         reduce using rule 33 (expression -> expression DIVIDE expression .)
    INIT            reduce using rule 33 (expression -> expression DIVIDE expression .)
    ATTRIBUTE       reduce using rule 33 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 33 (expression -> expression DIVIDE expression .)
    RIGHT_PAREN     reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUALS_DEFINITIONS reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUALS_EQUALITY reduce using rule 33 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]
  ! STAR            [ shift and go to state 73 ]
  ! DIVIDE          [ shift and go to state 74 ]


state 115

    (40) type_invariant_expression -> attribute IN_A_SET attribute .

    AND             reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    PLUS            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    MINUS           reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    STAR            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    DIVIDE          reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    CONSTANTS       reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    VARIABLES       reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    ASSUME          reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    EventuallyTerminates reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    LoopInvariant   reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    TerminationHypothesis reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    SPEC            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    THEOREM         reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    INIT            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    ATTRIBUTE       reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    $end            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    RIGHT_PAREN     reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    EQUALS_DEFINITIONS reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    EQUALS_EQUALITY reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)


state 116

    (48) set_membership -> attribute IN_A_SET Nat .

    AND             reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    PLUS            reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    MINUS           reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    STAR            reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    DIVIDE          reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    CONSTANTS       reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    VARIABLES       reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    ASSUME          reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    EventuallyTerminates reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    LoopInvariant   reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    TerminationHypothesis reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    SPEC            reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    THEOREM         reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    INIT            reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    ATTRIBUTE       reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    $end            reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    RIGHT_PAREN     reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    EQUALS_DEFINITIONS reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)
    EQUALS_EQUALITY reduce using rule 48 (set_membership -> attribute IN_A_SET Nat .)


state 117

    (43) comparison -> attribute comparison_rule attribute .

    AND             reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    PLUS            reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    MINUS           reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    STAR            reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    DIVIDE          reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    CONSTANTS       reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    VARIABLES       reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    ASSUME          reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    EventuallyTerminates reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    LoopInvariant   reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    TerminationHypothesis reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    SPEC            reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    THEOREM         reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    INIT            reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    ATTRIBUTE       reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    $end            reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    RIGHT_PAREN     reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    EQUALS_DEFINITIONS reduce using rule 43 (comparison -> attribute comparison_rule attribute .)
    EQUALS_EQUALITY reduce using rule 43 (comparison -> attribute comparison_rule attribute .)


state 118

    (42) comparison -> attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    PLUS            reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    MINUS           reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    STAR            reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    DIVIDE          reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    SPEC            reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    THEOREM         reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    RIGHT_PAREN     reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    EQUALS_DEFINITIONS reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    EQUALS_EQUALITY reduce using rule 42 (comparison -> attribute comparison_rule NUMBER_LITERAL .)


state 119

    (96) expression -> LEFT_PAREN expression RIGHT_PAREN .

    AND             reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STAR            reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIVIDE          reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANTS       reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    VARIABLES       reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ASSUME          reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LoopInvariant   reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SPEC            reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEOREM         reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INIT            reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS_DEFINITIONS reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS_EQUALITY reduce using rule 96 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 120

    (88) property_details -> EVENTUALLY LEFT_PAREN . ENABLED attribute RIGHT_PAREN

    ENABLED         shift and go to state 145


state 121

    (91) conditional_statements -> IF conditional_statement . THEN conditional_statement ELSE conditional_statement

    THEN            shift and go to state 146


state 122

    (92) conditional_statement -> dot_access . MODULUS NUMBER_LITERAL equals NUMBER_LITERAL

    MODULUS         shift and go to state 147


state 123

    (93) conditional_statement -> EVENTUALLY . LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN

    LEFT_PAREN      shift and go to state 148


state 124

    (4) dot_access -> attribute . DOT attribute

    DOT             shift and go to state 91


state 125

    (94) spec_definition -> SPEC equals AND function_conditions .
    (65) function_conditions -> function_conditions . AND function_condition
    (66) function_conditions -> function_conditions . OR function_condition

    CONSTANTS       reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    VARIABLES       reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    ASSUME          reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    EventuallyTerminates reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    LoopInvariant   reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    TerminationHypothesis reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    SPEC            reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    THEOREM         reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    INIT            reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    ATTRIBUTE       reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    $end            reduce using rule 94 (spec_definition -> SPEC equals AND function_conditions .)
    AND             shift and go to state 142
    OR              shift and go to state 138


state 126

    (95) theorem_definition -> THEOREM SPEC IMPLIES AND . function_conditions
    (64) function_conditions -> . function_condition
    (65) function_conditions -> . function_conditions AND function_condition
    (66) function_conditions -> . function_conditions OR function_condition
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    function_conditions            shift and go to state 149
    function_condition             shift and go to state 98
    attribute                      shift and go to state 96

state 127

    (57) init -> INIT equals attribute IN_A_SET . init_set_statement
    (58) init_set_statement -> . LEFT_BRACE attribute IN_A_SET attribute COLON order

    LEFT_BRACE      shift and go to state 151

    init_set_statement             shift and go to state 150

state 128

    (4) dot_access -> attribute DOT attribute .

    PLUS            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    MODULUS         reduce using rule 4 (dot_access -> attribute DOT attribute .)
    CONSTANTS       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    VARIABLES       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    ASSUME          reduce using rule 4 (dot_access -> attribute DOT attribute .)
    EventuallyTerminates reduce using rule 4 (dot_access -> attribute DOT attribute .)
    LoopInvariant   reduce using rule 4 (dot_access -> attribute DOT attribute .)
    TerminationHypothesis reduce using rule 4 (dot_access -> attribute DOT attribute .)
    SPEC            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    THEOREM         reduce using rule 4 (dot_access -> attribute DOT attribute .)
    INIT            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    ATTRIBUTE       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    $end            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    EQUALS_DEFINITIONS reduce using rule 4 (dot_access -> attribute DOT attribute .)
    EQUALS_EQUALITY reduce using rule 4 (dot_access -> attribute DOT attribute .)
    IN_A_SET        reduce using rule 4 (dot_access -> attribute DOT attribute .)


state 129

    (51) set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    EventuallyTerminates reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    LoopInvariant   reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    TerminationHypothesis reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    SPEC            reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    THEOREM         reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    $end            reduce using rule 51 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)


state 130

    (52) set_info -> set_info COMMA . set_individual_info
    (54) set_individual_info -> . ATTRIBUTE COLON set_scope

    ATTRIBUTE       shift and go to state 95

    set_individual_info            shift and go to state 152

state 131

    (84) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET . formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (85) formula_details -> . NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute
    (86) formula_details -> . dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 154
    ATTRIBUTE       shift and go to state 5

    formula_details                shift and go to state 153
    attribute                      shift and go to state 124
    dot_access                     shift and go to state 155

state 132

    (54) set_individual_info -> ATTRIBUTE COLON . set_scope
    (55) set_scope -> . NUMBER_LITERAL DOT DOT attribute

    NUMBER_LITERAL  shift and go to state 157

    set_scope                      shift and go to state 156

state 133

    (67) function_condition -> attribute comparison_rule . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 158


state 134

    (68) function_condition -> attribute equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 159


state 135

    (77) function_condition -> attribute DOT . attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 160

state 136

    (65) function_conditions -> function_conditions AND . function_condition
    (78) except_section -> AND . NEXT_VALUE_OF_ATTRIBUTE equals except_clause
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 162
    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    function_condition             shift and go to state 161
    attribute                      shift and go to state 96

state 137

    (63) function_declaration -> attribute equals AND function_conditions except_section .

    CONSTANTS       reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    VARIABLES       reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    ASSUME          reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    EventuallyTerminates reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    LoopInvariant   reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    TerminationHypothesis reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    SPEC            reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    THEOREM         reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    INIT            reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    ATTRIBUTE       reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)
    $end            reduce using rule 63 (function_declaration -> attribute equals AND function_conditions except_section .)


state 138

    (66) function_conditions -> function_conditions OR . function_condition
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    function_condition             shift and go to state 163
    attribute                      shift and go to state 96

state 139

    (69) function_condition -> UNCHANGED attribute .

    AND             reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    OR              reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    CONSTANTS       reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    VARIABLES       reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    ASSUME          reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    EventuallyTerminates reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    LoopInvariant   reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    TerminationHypothesis reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    SPEC            reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    THEOREM         reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    INIT            reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    ATTRIBUTE       reduce using rule 69 (function_condition -> UNCHANGED attribute .)
    $end            reduce using rule 69 (function_condition -> UNCHANGED attribute .)


state 140

    (70) function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET . LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 164


state 141

    (71) function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE . LEFT_PAREN attribute RIGHT_PAREN

    LEFT_PAREN      shift and go to state 165


state 142

    (65) function_conditions -> function_conditions AND . function_condition
    (67) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (68) function_condition -> . attribute equals NUMBER_LITERAL
    (69) function_condition -> . UNCHANGED attribute
    (70) function_condition -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (71) function_condition -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (72) function_condition -> . attribute
    (73) function_condition -> . INIT
    (74) function_condition -> . EventuallyTerminates
    (75) function_condition -> . LoopInvariant
    (76) function_condition -> . TerminationHypothesis
    (77) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 99
    LEFT_SQR_BRACKET shift and go to state 100
    WEAK_FAIRNESS   shift and go to state 101
    INIT            shift and go to state 102
    EventuallyTerminates shift and go to state 103
    LoopInvariant   shift and go to state 104
    TerminationHypothesis shift and go to state 105
    ATTRIBUTE       shift and go to state 5

    function_condition             shift and go to state 161
    attribute                      shift and go to state 96

state 143

    (62) bean_equation -> dot_access PLUS dot_access .

    CONSTANTS       reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    VARIABLES       reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    ASSUME          reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    EventuallyTerminates reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    LoopInvariant   reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    TerminationHypothesis reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    SPEC            reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    THEOREM         reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    INIT            reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    ATTRIBUTE       reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)
    $end            reduce using rule 62 (bean_equation -> dot_access PLUS dot_access .)


state 144

    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .

    PLUS            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    MODULUS         reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    CONSTANTS       reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    VARIABLES       reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    ASSUME          reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    EventuallyTerminates reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    LoopInvariant   reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    TerminationHypothesis reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    SPEC            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    THEOREM         reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    INIT            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    ATTRIBUTE       reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    $end            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    EQUALS_DEFINITIONS reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    EQUALS_EQUALITY reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    IN_A_SET        reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)


state 145

    (88) property_details -> EVENTUALLY LEFT_PAREN ENABLED . attribute RIGHT_PAREN
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 166

state 146

    (91) conditional_statements -> IF conditional_statement THEN . conditional_statement ELSE conditional_statement
    (92) conditional_statement -> . dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
    (93) conditional_statement -> . EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    EVENTUALLY      shift and go to state 123
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    conditional_statement          shift and go to state 167
    dot_access                     shift and go to state 122
    attribute                      shift and go to state 124

state 147

    (92) conditional_statement -> dot_access MODULUS . NUMBER_LITERAL equals NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 168


state 148

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN . dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 169
    attribute                      shift and go to state 124

state 149

    (95) theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .
    (65) function_conditions -> function_conditions . AND function_condition
    (66) function_conditions -> function_conditions . OR function_condition

    CONSTANTS       reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    VARIABLES       reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    ASSUME          reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    EventuallyTerminates reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    LoopInvariant   reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    TerminationHypothesis reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    SPEC            reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    THEOREM         reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    INIT            reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    ATTRIBUTE       reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    $end            reduce using rule 95 (theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions .)
    AND             shift and go to state 142
    OR              shift and go to state 138


state 150

    (57) init -> INIT equals attribute IN_A_SET init_set_statement .

    CONSTANTS       reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    VARIABLES       reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    ASSUME          reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    EventuallyTerminates reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    LoopInvariant   reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    TerminationHypothesis reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    SPEC            reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    THEOREM         reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    INIT            reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    ATTRIBUTE       reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    $end            reduce using rule 57 (init -> INIT equals attribute IN_A_SET init_set_statement .)


state 151

    (58) init_set_statement -> LEFT_BRACE . attribute IN_A_SET attribute COLON order
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 170

state 152

    (52) set_info -> set_info COMMA set_individual_info .

    RIGHT_SQR_BRACKET reduce using rule 52 (set_info -> set_info COMMA set_individual_info .)
    COMMA           reduce using rule 52 (set_info -> set_info COMMA set_individual_info .)


state 153

    (84) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details . RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 171


state 154

    (85) formula_details -> NEXT_VALUE_OF_ATTRIBUTE . LESS_THAN attribute
    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE . DOT attribute

    LESS_THAN       shift and go to state 172
    DOT             shift and go to state 108


state 155

    (86) formula_details -> dot_access . MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL

    MODULUS         shift and go to state 173


state 156

    (54) set_individual_info -> ATTRIBUTE COLON set_scope .

    RIGHT_SQR_BRACKET reduce using rule 54 (set_individual_info -> ATTRIBUTE COLON set_scope .)
    COMMA           reduce using rule 54 (set_individual_info -> ATTRIBUTE COLON set_scope .)


state 157

    (55) set_scope -> NUMBER_LITERAL . DOT DOT attribute

    DOT             shift and go to state 174


state 158

    (67) function_condition -> attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    OR              reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    SPEC            reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    THEOREM         reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 67 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)


state 159

    (68) function_condition -> attribute equals NUMBER_LITERAL .

    AND             reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    OR              reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    VARIABLES       reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    ASSUME          reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    SPEC            reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    THEOREM         reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    INIT            reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)
    $end            reduce using rule 68 (function_condition -> attribute equals NUMBER_LITERAL .)


state 160

    (77) function_condition -> attribute DOT attribute . comparison_rule NUMBER_LITERAL
    (44) comparison_rule -> . GREATER_OR_EQ
    (45) comparison_rule -> . LESS_OR_EQ
    (46) comparison_rule -> . GREATER_THAN
    (47) comparison_rule -> . LESS_THAN

    GREATER_OR_EQ   shift and go to state 77
    LESS_OR_EQ      shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_THAN       shift and go to state 80

    comparison_rule                shift and go to state 175

state 161

    (65) function_conditions -> function_conditions AND function_condition .

    AND             reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    OR              reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    CONSTANTS       reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    VARIABLES       reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    ASSUME          reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    EventuallyTerminates reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    LoopInvariant   reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    TerminationHypothesis reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    SPEC            reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    THEOREM         reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    INIT            reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    ATTRIBUTE       reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)
    $end            reduce using rule 65 (function_conditions -> function_conditions AND function_condition .)


state 162

    (78) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE . equals except_clause
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 176

state 163

    (66) function_conditions -> function_conditions OR function_condition .

    AND             reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    OR              reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    CONSTANTS       reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    VARIABLES       reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    ASSUME          reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    EventuallyTerminates reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    LoopInvariant   reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    TerminationHypothesis reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    SPEC            reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    THEOREM         reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    INIT            reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    ATTRIBUTE       reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)
    $end            reduce using rule 66 (function_conditions -> function_conditions OR function_condition .)


state 164

    (70) function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET . attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 177

state 165

    (71) function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN . attribute RIGHT_PAREN
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 178

state 166

    (88) property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 179


state 167

    (91) conditional_statements -> IF conditional_statement THEN conditional_statement . ELSE conditional_statement

    ELSE            shift and go to state 180


state 168

    (92) conditional_statement -> dot_access MODULUS NUMBER_LITERAL . equals NUMBER_LITERAL
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 181

state 169

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access . equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 182

state 170

    (58) init_set_statement -> LEFT_BRACE attribute . IN_A_SET attribute COLON order

    IN_A_SET        shift and go to state 183


state 171

    (84) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET . ATTRIBUTE_MAY_CHANGE

    ATTRIBUTE_MAY_CHANGE shift and go to state 184


state 172

    (85) formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 185

state 173

    (86) formula_details -> dot_access MODULUS . expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 186
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 174

    (55) set_scope -> NUMBER_LITERAL DOT . DOT attribute

    DOT             shift and go to state 187


state 175

    (77) function_condition -> attribute DOT attribute comparison_rule . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 188


state 176

    (78) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals . except_clause
    (79) except_clause -> . LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> . LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    LEFT_SQR_BRACKET shift and go to state 190

    except_clause                  shift and go to state 189

state 177

    (70) function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute . RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 191


state 178

    (71) function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 192


state 179

    (88) property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .

    CONSTANTS       reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    VARIABLES       reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    ASSUME          reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    LoopInvariant   reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    SPEC            reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    THEOREM         reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    INIT            reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    $end            reduce using rule 88 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)


state 180

    (91) conditional_statements -> IF conditional_statement THEN conditional_statement ELSE . conditional_statement
    (92) conditional_statement -> . dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
    (93) conditional_statement -> . EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    EVENTUALLY      shift and go to state 123
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    conditional_statement          shift and go to state 193
    dot_access                     shift and go to state 122
    attribute                      shift and go to state 124

state 181

    (92) conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 194


state 182

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals . NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN

    NUMBER_LITERAL  shift and go to state 195


state 183

    (58) init_set_statement -> LEFT_BRACE attribute IN_A_SET . attribute COLON order
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 196

state 184

    (84) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .

    CONSTANTS       reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    VARIABLES       reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ASSUME          reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    EventuallyTerminates reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    LoopInvariant   reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    TerminationHypothesis reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    SPEC            reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    THEOREM         reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    INIT            reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ATTRIBUTE       reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    $end            reduce using rule 84 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)


state 185

    (85) formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute .

    RIGHT_SQR_BRACKET reduce using rule 85 (formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute .)


state 186

    (86) formula_details -> dot_access MODULUS expression . equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74
    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 197

state 187

    (55) set_scope -> NUMBER_LITERAL DOT DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 198

state 188

    (77) function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    OR              reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    SPEC            reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    THEOREM         reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 77 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)


state 189

    (78) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .

    CONSTANTS       reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    VARIABLES       reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    ASSUME          reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    EventuallyTerminates reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    LoopInvariant   reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    TerminationHypothesis reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    SPEC            reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    THEOREM         reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    INIT            reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    ATTRIBUTE       reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    $end            reduce using rule 78 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)


state 190

    (79) except_clause -> LEFT_SQR_BRACKET . attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET . attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 199

state 191

    (70) function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET . ATTRIBUTE_MAY_CHANGE

    ATTRIBUTE_MAY_CHANGE shift and go to state 200


state 192

    (71) function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .

    AND             reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    OR              reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    CONSTANTS       reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    VARIABLES       reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    ASSUME          reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    LoopInvariant   reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    SPEC            reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    THEOREM         reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    INIT            reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    $end            reduce using rule 71 (function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)


state 193

    (91) conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .

    CONSTANTS       reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    VARIABLES       reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    ASSUME          reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    EventuallyTerminates reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    LoopInvariant   reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    TerminationHypothesis reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    SPEC            reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    THEOREM         reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    INIT            reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    ATTRIBUTE       reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    $end            reduce using rule 91 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)


state 194

    (92) conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .

    THEN            reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    ELSE            reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    VARIABLES       reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    ASSUME          reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    SPEC            reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    THEOREM         reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    INIT            reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    $end            reduce using rule 92 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)


state 195

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL . AND dot_access equals NUMBER_LITERAL RIGHT_PAREN

    AND             shift and go to state 201


state 196

    (58) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute . COLON order

    COLON           shift and go to state 202


state 197

    (86) formula_details -> dot_access MODULUS expression equals . NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 203


state 198

    (55) set_scope -> NUMBER_LITERAL DOT DOT attribute .

    RIGHT_SQR_BRACKET reduce using rule 55 (set_scope -> NUMBER_LITERAL DOT DOT attribute .)
    COMMA           reduce using rule 55 (set_scope -> NUMBER_LITERAL DOT DOT attribute .)


state 199

    (79) except_clause -> LEFT_SQR_BRACKET attribute . EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute . EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCEPT          shift and go to state 204


state 200

    (70) function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .

    AND             reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    OR              reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    CONSTANTS       reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    VARIABLES       reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ASSUME          reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    EventuallyTerminates reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    LoopInvariant   reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    TerminationHypothesis reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    SPEC            reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    THEOREM         reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    INIT            reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ATTRIBUTE       reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    $end            reduce using rule 70 (function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)


state 201

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND . dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 205
    attribute                      shift and go to state 124

state 202

    (58) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON . order
    (59) order -> . dot_access PLUS dot_access IN_A_SET range_of_values
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 124
    order                          shift and go to state 206
    dot_access                     shift and go to state 207

state 203

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL . EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL

    EQUIVALENCE_OPERATOR shift and go to state 208


state 204

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT . EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT . EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCLAMATION_MARK shift and go to state 209


state 205

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access . equals NUMBER_LITERAL RIGHT_PAREN
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 210

state 206

    (58) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .

    CONSTANTS       reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    VARIABLES       reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    ASSUME          reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    EventuallyTerminates reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    LoopInvariant   reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    TerminationHypothesis reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    SPEC            reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    THEOREM         reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    INIT            reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    ATTRIBUTE       reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    $end            reduce using rule 58 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)


state 207

    (59) order -> dot_access . PLUS dot_access IN_A_SET range_of_values

    PLUS            shift and go to state 211


state 208

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR . dot_access MODULUS expression equals NUMBER_LITERAL
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 212
    attribute                      shift and go to state 124

state 209

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK . DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK . DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    DOT             shift and go to state 213


state 210

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals . NUMBER_LITERAL RIGHT_PAREN

    NUMBER_LITERAL  shift and go to state 214


state 211

    (59) order -> dot_access PLUS . dot_access IN_A_SET range_of_values
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 68
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 215
    attribute                      shift and go to state 124

state 212

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access . MODULUS expression equals NUMBER_LITERAL

    MODULUS         shift and go to state 216


state 213

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT . attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT . attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 217

state 214

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 218


state 215

    (59) order -> dot_access PLUS dot_access . IN_A_SET range_of_values

    IN_A_SET        shift and go to state 219


state 216

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS . expression equals NUMBER_LITERAL
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (96) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (48) set_membership -> . attribute IN_A_SET Nat
    (42) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (43) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    LEFT_PAREN      shift and go to state 53
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 220
    set_membership                 shift and go to state 47
    comparison                     shift and go to state 48
    attribute                      shift and go to state 49
    type_invariant_expression      shift and go to state 50

state 217

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute . equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute . equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 221

state 218

    (93) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .

    THEN            reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    ELSE            reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    CONSTANTS       reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    VARIABLES       reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    ASSUME          reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    LoopInvariant   reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    SPEC            reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    THEOREM         reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    INIT            reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    $end            reduce using rule 93 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)


state 219

    (59) order -> dot_access PLUS dot_access IN_A_SET . range_of_values
    (60) range_of_values -> . NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE

    NUMBER_LITERAL  shift and go to state 223

    range_of_values                shift and go to state 222

state 220

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression . equals NUMBER_LITERAL
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    STAR            shift and go to state 73
    DIVIDE          shift and go to state 74
    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 224

state 221

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals . AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals . AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    AT              shift and go to state 225


state 222

    (59) order -> dot_access PLUS dot_access IN_A_SET range_of_values .

    CONSTANTS       reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    VARIABLES       reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    ASSUME          reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    EventuallyTerminates reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    LoopInvariant   reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    TerminationHypothesis reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    SPEC            reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    THEOREM         reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    INIT            reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    ATTRIBUTE       reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    $end            reduce using rule 59 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)


state 223

    (60) range_of_values -> NUMBER_LITERAL . DOT DOT attribute RIGHT_BRACE

    DOT             shift and go to state 226


state 224

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 227


state 225

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT . MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT . PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    MINUS           shift and go to state 228
    PLUS            shift and go to state 229


state 226

    (60) range_of_values -> NUMBER_LITERAL DOT . DOT attribute RIGHT_BRACE

    DOT             shift and go to state 230


state 227

    (86) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL .

    RIGHT_SQR_BRACKET reduce using rule 86 (formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL .)


state 228

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS . NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 231


state 229

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS . NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 232


state 230

    (60) range_of_values -> NUMBER_LITERAL DOT DOT . attribute RIGHT_BRACE
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 233

state 231

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 234


state 232

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL . COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    COMMA           shift and go to state 235


state 233

    (60) range_of_values -> NUMBER_LITERAL DOT DOT attribute . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 236


state 234

    (79) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    EventuallyTerminates reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    LoopInvariant   reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    TerminationHypothesis reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    SPEC            reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    THEOREM         reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    $end            reduce using rule 79 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)


state 235

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA . EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCLAMATION_MARK shift and go to state 237


state 236

    (60) range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .

    CONSTANTS       reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    VARIABLES       reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    ASSUME          reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    EventuallyTerminates reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    LoopInvariant   reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    TerminationHypothesis reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    SPEC            reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    THEOREM         reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    INIT            reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    ATTRIBUTE       reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    $end            reduce using rule 60 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)


state 237

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK . DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    DOT             shift and go to state 238


state 238

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT . attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 239

state 239

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute . equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (49) equals -> . EQUALS_DEFINITIONS
    (50) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 240

state 240

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals . AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    AT              shift and go to state 241


state 241

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT . MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    MINUS           shift and go to state 242


state 242

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS . NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 243


state 243

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 244


state 244

    (80) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    EventuallyTerminates reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    LoopInvariant   reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    TerminationHypothesis reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    SPEC            reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    THEOREM         reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    $end            reduce using rule 80 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)

