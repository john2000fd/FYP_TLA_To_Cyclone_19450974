Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    BACK_SLASH
    CHECK
    EDGE
    ELSE
    FORWARD_SLASH
    GOAL
    GRAPH
    IF
    INVARIANT
    MODULUS
    NODE
    NOT_EQUALS
    SEMICOLON
    SINGLE_QUOTE
    SPEC
    THEN
    UNDERSCORE
    VARIABLE_NAME

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements
Rule 2     module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements
Rule 3     attribute -> ATTRIBUTE
Rule 4     dot_access -> attribute DOT attribute
Rule 5     extends -> EXTENDS names
Rule 6     names -> names COMMA attribute
Rule 7     names -> attribute
Rule 8     statements -> statements statement
Rule 9     statements -> statement
Rule 10    statement -> constants_statement
Rule 11    statement -> variables_statement
Rule 12    statement -> assume_statement
Rule 13    statement -> type_invariant
Rule 14    statement -> set_definition
Rule 15    statement -> bean_value_count
Rule 16    statement -> function_declaration
Rule 17    statement -> termination_statement
Rule 18    statement -> next_state_relation
Rule 19    statement -> action_formula_definition
Rule 20    statement -> init
Rule 21    constants_statement -> CONSTANTS names
Rule 22    variables_statement -> VARIABLES names
Rule 23    assume_statement -> ASSUME expression AND expression
Rule 24    expression -> expression PLUS expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression STAR expression
Rule 27    expression -> expression DIVIDE expression
Rule 28    expression -> set_membership
Rule 29    expression -> comparison
Rule 30    expression -> attribute
Rule 31    expression -> type_invariant_expression
Rule 32    expression -> NUMBER_LITERAL
Rule 33    expression -> STRING_LITERAL
Rule 34    type_invariant_expression -> attribute IN_A_SET attribute
Rule 35    init_expression -> <empty>
Rule 36    comparison -> attribute comparison_rule NUMBER_LITERAL
Rule 37    comparison -> attribute comparison_rule attribute
Rule 38    comparison_rule -> GREATER_OR_EQ
Rule 39    comparison_rule -> LESS_OR_EQ
Rule 40    comparison_rule -> GREATER_THAN
Rule 41    comparison_rule -> LESS_THAN
Rule 42    set_membership -> attribute IN_A_SET Nat
Rule 43    equals -> EQUALS_DEFINITIONS
Rule 44    equals -> EQUALS_EQUALITY
Rule 45    set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
Rule 46    set_info -> set_info COMMA set_individual_info
Rule 47    set_info -> set_individual_info
Rule 48    set_individual_info -> ATTRIBUTE COLON set_scope
Rule 49    set_scope -> NUMBER_LITERAL DOT DOT attribute
Rule 50    type_invariant -> attribute equals expression
Rule 51    init -> INIT equals attribute IN_A_SET init_set_statement
Rule 52    init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order
Rule 53    order -> dot_access PLUS dot_access IN_A_SET range_of_values
Rule 54    range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE
Rule 55    bean_value_count -> attribute equals bean_equation
Rule 56    bean_equation -> dot_access PLUS dot_access
Rule 57    function_declaration -> attribute equals AND function_conditions except_section
Rule 58    function_conditions -> function_condition
Rule 59    function_conditions -> function_conditions AND function_condition
Rule 60    function_conditions -> function_conditions OR function_condition
Rule 61    function_condition -> attribute comparison_rule NUMBER_LITERAL
Rule 62    function_condition -> attribute equals NUMBER_LITERAL
Rule 63    function_condition -> UNCHANGED attribute
Rule 64    function_condition -> attribute
Rule 65    function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL
Rule 66    except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause
Rule 67    except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
Rule 68    except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
Rule 69    termination_statement -> attribute equals AND function_conditions
Rule 70    next_state_relation -> attribute equals OR function_conditions
Rule 71    action_formula_definition -> attribute equals action_formula
Rule 72    action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
Rule 73    formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute
Rule 74    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 75    empty -> <empty>

Terminals, with rules where they appear

AND                  : 23 57 59 66 69
ARROW                : 
ASSUME               : 23
AT                   : 67 68 68
ATTRIBUTE            : 3 48
ATTRIBUTE_MAY_CHANGE : 72
BACK_SLASH           : 
CHECK                : 
COLON                : 48 52
COMMA                : 6 46 68
CONSTANTS            : 21
DIVIDE               : 27
DOT                  : 4 49 49 54 54 65 67 68 68
EDGE                 : 
ELSE                 : 
EQUALS_DEFINITIONS   : 43
EQUALS_EQUALITY      : 44
EXCEPT               : 67 68
EXCLAMATION_MARK     : 67 68 68
EXTENDS              : 5
FORWARD_SLASH        : 
GOAL                 : 
GRAPH                : 
GREATER_OR_EQ        : 38
GREATER_THAN         : 40
IF                   : 
INIT                 : 51
INVARIANT            : 
IN_A_SET             : 34 42 51 52 53
LEFT_BRACE           : 52
LEFT_PAREN           : 74
LEFT_SQR_BRACKET     : 45 67 68 72 72
LESS_OR_EQ           : 39
LESS_THAN            : 41 73
MINUS                : 25 67 68
MODULE               : 1 2
MODULE_WRAPPER       : 1 1 2 2
MODULUS              : 
NEXT_VALUE_OF_ATTRIBUTE : 66 73
NODE                 : 
NOT_EQUALS           : 
NUMBER_LITERAL       : 32 36 49 54 61 62 65 67 68 68
Nat                  : 42
OR                   : 60 70
PLUS                 : 24 53 56 68
RIGHT_BRACE          : 54
RIGHT_PAREN          : 74
RIGHT_SQR_BRACKET    : 45 67 68 72 72
SEMICOLON            : 
SINGLE_QUOTE         : 
SPEC                 : 
STAR                 : 26
STRING_LITERAL       : 33
THEN                 : 
UNCHANGED            : 63
UNDERSCORE           : 
VARIABLES            : 22
VARIABLE_NAME        : 
error                : 

Nonterminals, with rules where they appear

action_formula       : 71
action_formula_definition : 19
assume_statement     : 12
attribute            : 1 2 4 4 6 7 30 34 34 36 37 37 42 45 49 50 51 52 52 54 55 57 61 62 63 64 65 65 67 67 68 68 68 69 70 71 73
bean_equation        : 55
bean_value_count     : 15
comparison           : 29
comparison_rule      : 36 37 61 65
constants_statement  : 10
dot_access           : 53 53 56 56
empty                : 
equals               : 45 50 51 55 57 62 66 67 68 68 69 70 71
except_clause        : 66
except_section       : 57
expression           : 23 23 24 24 25 25 26 26 27 27 50 74
extends              : 1
formula_details      : 72
function_condition   : 58 59 60
function_conditions  : 57 59 60 69 70
function_declaration : 16
init                 : 20
init_expression      : 
init_set_statement   : 51
module               : 0
names                : 5 6 21 22
next_state_relation  : 18
order                : 52
range_of_values      : 53
set_definition       : 14
set_individual_info  : 46 47
set_info             : 45 46
set_membership       : 28
set_scope            : 48
statement            : 8 9
statements           : 1 2 8
termination_statement : 17
type_invariant       : 13
type_invariant_expression : 31
variables_statement  : 11

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements
    (2) module -> . MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements

    MODULE_WRAPPER  shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> MODULE_WRAPPER . MODULE attribute MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER . MODULE attribute MODULE_WRAPPER statements

    MODULE          shift and go to state 3


state 3

    (1) module -> MODULE_WRAPPER MODULE . attribute MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER MODULE . attribute MODULE_WRAPPER statements
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 4

state 4

    (1) module -> MODULE_WRAPPER MODULE attribute . MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER MODULE attribute . MODULE_WRAPPER statements

    MODULE_WRAPPER  shift and go to state 6


state 5

    (3) attribute -> ATTRIBUTE .

    MODULE_WRAPPER  reduce using rule 3 (attribute -> ATTRIBUTE .)
    EQUALS_DEFINITIONS reduce using rule 3 (attribute -> ATTRIBUTE .)
    EQUALS_EQUALITY reduce using rule 3 (attribute -> ATTRIBUTE .)
    COMMA           reduce using rule 3 (attribute -> ATTRIBUTE .)
    CONSTANTS       reduce using rule 3 (attribute -> ATTRIBUTE .)
    VARIABLES       reduce using rule 3 (attribute -> ATTRIBUTE .)
    ASSUME          reduce using rule 3 (attribute -> ATTRIBUTE .)
    INIT            reduce using rule 3 (attribute -> ATTRIBUTE .)
    ATTRIBUTE       reduce using rule 3 (attribute -> ATTRIBUTE .)
    $end            reduce using rule 3 (attribute -> ATTRIBUTE .)
    IN_A_SET        reduce using rule 3 (attribute -> ATTRIBUTE .)
    GREATER_OR_EQ   reduce using rule 3 (attribute -> ATTRIBUTE .)
    LESS_OR_EQ      reduce using rule 3 (attribute -> ATTRIBUTE .)
    GREATER_THAN    reduce using rule 3 (attribute -> ATTRIBUTE .)
    LESS_THAN       reduce using rule 3 (attribute -> ATTRIBUTE .)
    AND             reduce using rule 3 (attribute -> ATTRIBUTE .)
    PLUS            reduce using rule 3 (attribute -> ATTRIBUTE .)
    MINUS           reduce using rule 3 (attribute -> ATTRIBUTE .)
    STAR            reduce using rule 3 (attribute -> ATTRIBUTE .)
    DIVIDE          reduce using rule 3 (attribute -> ATTRIBUTE .)
    DOT             reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_PAREN     reduce using rule 3 (attribute -> ATTRIBUTE .)
    OR              reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_SQR_BRACKET reduce using rule 3 (attribute -> ATTRIBUTE .)
    COLON           reduce using rule 3 (attribute -> ATTRIBUTE .)
    EXCEPT          reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_BRACE     reduce using rule 3 (attribute -> ATTRIBUTE .)


state 6

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER . extends statements
    (2) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER . statements
    (5) extends -> . EXTENDS names
    (8) statements -> . statements statement
    (9) statements -> . statement
    (10) statement -> . constants_statement
    (11) statement -> . variables_statement
    (12) statement -> . assume_statement
    (13) statement -> . type_invariant
    (14) statement -> . set_definition
    (15) statement -> . bean_value_count
    (16) statement -> . function_declaration
    (17) statement -> . termination_statement
    (18) statement -> . next_state_relation
    (19) statement -> . action_formula_definition
    (20) statement -> . init
    (21) constants_statement -> . CONSTANTS names
    (22) variables_statement -> . VARIABLES names
    (23) assume_statement -> . ASSUME expression AND expression
    (50) type_invariant -> . attribute equals expression
    (45) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (55) bean_value_count -> . attribute equals bean_equation
    (57) function_declaration -> . attribute equals AND function_conditions except_section
    (69) termination_statement -> . attribute equals AND function_conditions
    (70) next_state_relation -> . attribute equals OR function_conditions
    (71) action_formula_definition -> . attribute equals action_formula
    (51) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    EXTENDS         shift and go to state 10
    CONSTANTS       shift and go to state 23
    VARIABLES       shift and go to state 24
    ASSUME          shift and go to state 25
    INIT            shift and go to state 26
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    extends                        shift and go to state 8
    statements                     shift and go to state 9
    statement                      shift and go to state 11
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    init                           shift and go to state 22

state 7

    (50) type_invariant -> attribute . equals expression
    (45) set_definition -> attribute . equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (55) bean_value_count -> attribute . equals bean_equation
    (57) function_declaration -> attribute . equals AND function_conditions except_section
    (69) termination_statement -> attribute . equals AND function_conditions
    (70) next_state_relation -> attribute . equals OR function_conditions
    (71) action_formula_definition -> attribute . equals action_formula
    (43) equals -> . EQUALS_DEFINITIONS
    (44) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 28
    EQUALS_EQUALITY shift and go to state 29

    equals                         shift and go to state 27

state 8

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends . statements
    (8) statements -> . statements statement
    (9) statements -> . statement
    (10) statement -> . constants_statement
    (11) statement -> . variables_statement
    (12) statement -> . assume_statement
    (13) statement -> . type_invariant
    (14) statement -> . set_definition
    (15) statement -> . bean_value_count
    (16) statement -> . function_declaration
    (17) statement -> . termination_statement
    (18) statement -> . next_state_relation
    (19) statement -> . action_formula_definition
    (20) statement -> . init
    (21) constants_statement -> . CONSTANTS names
    (22) variables_statement -> . VARIABLES names
    (23) assume_statement -> . ASSUME expression AND expression
    (50) type_invariant -> . attribute equals expression
    (45) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (55) bean_value_count -> . attribute equals bean_equation
    (57) function_declaration -> . attribute equals AND function_conditions except_section
    (69) termination_statement -> . attribute equals AND function_conditions
    (70) next_state_relation -> . attribute equals OR function_conditions
    (71) action_formula_definition -> . attribute equals action_formula
    (51) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    CONSTANTS       shift and go to state 23
    VARIABLES       shift and go to state 24
    ASSUME          shift and go to state 25
    INIT            shift and go to state 26
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statements                     shift and go to state 30
    statement                      shift and go to state 11
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    init                           shift and go to state 22

state 9

    (2) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements .
    (8) statements -> statements . statement
    (10) statement -> . constants_statement
    (11) statement -> . variables_statement
    (12) statement -> . assume_statement
    (13) statement -> . type_invariant
    (14) statement -> . set_definition
    (15) statement -> . bean_value_count
    (16) statement -> . function_declaration
    (17) statement -> . termination_statement
    (18) statement -> . next_state_relation
    (19) statement -> . action_formula_definition
    (20) statement -> . init
    (21) constants_statement -> . CONSTANTS names
    (22) variables_statement -> . VARIABLES names
    (23) assume_statement -> . ASSUME expression AND expression
    (50) type_invariant -> . attribute equals expression
    (45) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (55) bean_value_count -> . attribute equals bean_equation
    (57) function_declaration -> . attribute equals AND function_conditions except_section
    (69) termination_statement -> . attribute equals AND function_conditions
    (70) next_state_relation -> . attribute equals OR function_conditions
    (71) action_formula_definition -> . attribute equals action_formula
    (51) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    $end            reduce using rule 2 (module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements .)
    CONSTANTS       shift and go to state 23
    VARIABLES       shift and go to state 24
    ASSUME          shift and go to state 25
    INIT            shift and go to state 26
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statement                      shift and go to state 31
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    init                           shift and go to state 22

state 10

    (5) extends -> EXTENDS . names
    (6) names -> . names COMMA attribute
    (7) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 32
    attribute                      shift and go to state 33

state 11

    (9) statements -> statement .

    CONSTANTS       reduce using rule 9 (statements -> statement .)
    VARIABLES       reduce using rule 9 (statements -> statement .)
    ASSUME          reduce using rule 9 (statements -> statement .)
    INIT            reduce using rule 9 (statements -> statement .)
    ATTRIBUTE       reduce using rule 9 (statements -> statement .)
    $end            reduce using rule 9 (statements -> statement .)


state 12

    (10) statement -> constants_statement .

    CONSTANTS       reduce using rule 10 (statement -> constants_statement .)
    VARIABLES       reduce using rule 10 (statement -> constants_statement .)
    ASSUME          reduce using rule 10 (statement -> constants_statement .)
    INIT            reduce using rule 10 (statement -> constants_statement .)
    ATTRIBUTE       reduce using rule 10 (statement -> constants_statement .)
    $end            reduce using rule 10 (statement -> constants_statement .)


state 13

    (11) statement -> variables_statement .

    CONSTANTS       reduce using rule 11 (statement -> variables_statement .)
    VARIABLES       reduce using rule 11 (statement -> variables_statement .)
    ASSUME          reduce using rule 11 (statement -> variables_statement .)
    INIT            reduce using rule 11 (statement -> variables_statement .)
    ATTRIBUTE       reduce using rule 11 (statement -> variables_statement .)
    $end            reduce using rule 11 (statement -> variables_statement .)


state 14

    (12) statement -> assume_statement .

    CONSTANTS       reduce using rule 12 (statement -> assume_statement .)
    VARIABLES       reduce using rule 12 (statement -> assume_statement .)
    ASSUME          reduce using rule 12 (statement -> assume_statement .)
    INIT            reduce using rule 12 (statement -> assume_statement .)
    ATTRIBUTE       reduce using rule 12 (statement -> assume_statement .)
    $end            reduce using rule 12 (statement -> assume_statement .)


state 15

    (13) statement -> type_invariant .

    CONSTANTS       reduce using rule 13 (statement -> type_invariant .)
    VARIABLES       reduce using rule 13 (statement -> type_invariant .)
    ASSUME          reduce using rule 13 (statement -> type_invariant .)
    INIT            reduce using rule 13 (statement -> type_invariant .)
    ATTRIBUTE       reduce using rule 13 (statement -> type_invariant .)
    $end            reduce using rule 13 (statement -> type_invariant .)


state 16

    (14) statement -> set_definition .

    CONSTANTS       reduce using rule 14 (statement -> set_definition .)
    VARIABLES       reduce using rule 14 (statement -> set_definition .)
    ASSUME          reduce using rule 14 (statement -> set_definition .)
    INIT            reduce using rule 14 (statement -> set_definition .)
    ATTRIBUTE       reduce using rule 14 (statement -> set_definition .)
    $end            reduce using rule 14 (statement -> set_definition .)


state 17

    (15) statement -> bean_value_count .

    CONSTANTS       reduce using rule 15 (statement -> bean_value_count .)
    VARIABLES       reduce using rule 15 (statement -> bean_value_count .)
    ASSUME          reduce using rule 15 (statement -> bean_value_count .)
    INIT            reduce using rule 15 (statement -> bean_value_count .)
    ATTRIBUTE       reduce using rule 15 (statement -> bean_value_count .)
    $end            reduce using rule 15 (statement -> bean_value_count .)


state 18

    (16) statement -> function_declaration .

    CONSTANTS       reduce using rule 16 (statement -> function_declaration .)
    VARIABLES       reduce using rule 16 (statement -> function_declaration .)
    ASSUME          reduce using rule 16 (statement -> function_declaration .)
    INIT            reduce using rule 16 (statement -> function_declaration .)
    ATTRIBUTE       reduce using rule 16 (statement -> function_declaration .)
    $end            reduce using rule 16 (statement -> function_declaration .)


state 19

    (17) statement -> termination_statement .

    CONSTANTS       reduce using rule 17 (statement -> termination_statement .)
    VARIABLES       reduce using rule 17 (statement -> termination_statement .)
    ASSUME          reduce using rule 17 (statement -> termination_statement .)
    INIT            reduce using rule 17 (statement -> termination_statement .)
    ATTRIBUTE       reduce using rule 17 (statement -> termination_statement .)
    $end            reduce using rule 17 (statement -> termination_statement .)


state 20

    (18) statement -> next_state_relation .

    CONSTANTS       reduce using rule 18 (statement -> next_state_relation .)
    VARIABLES       reduce using rule 18 (statement -> next_state_relation .)
    ASSUME          reduce using rule 18 (statement -> next_state_relation .)
    INIT            reduce using rule 18 (statement -> next_state_relation .)
    ATTRIBUTE       reduce using rule 18 (statement -> next_state_relation .)
    $end            reduce using rule 18 (statement -> next_state_relation .)


state 21

    (19) statement -> action_formula_definition .

    CONSTANTS       reduce using rule 19 (statement -> action_formula_definition .)
    VARIABLES       reduce using rule 19 (statement -> action_formula_definition .)
    ASSUME          reduce using rule 19 (statement -> action_formula_definition .)
    INIT            reduce using rule 19 (statement -> action_formula_definition .)
    ATTRIBUTE       reduce using rule 19 (statement -> action_formula_definition .)
    $end            reduce using rule 19 (statement -> action_formula_definition .)


state 22

    (20) statement -> init .

    CONSTANTS       reduce using rule 20 (statement -> init .)
    VARIABLES       reduce using rule 20 (statement -> init .)
    ASSUME          reduce using rule 20 (statement -> init .)
    INIT            reduce using rule 20 (statement -> init .)
    ATTRIBUTE       reduce using rule 20 (statement -> init .)
    $end            reduce using rule 20 (statement -> init .)


state 23

    (21) constants_statement -> CONSTANTS . names
    (6) names -> . names COMMA attribute
    (7) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 34
    attribute                      shift and go to state 33

state 24

    (22) variables_statement -> VARIABLES . names
    (6) names -> . names COMMA attribute
    (7) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 35
    attribute                      shift and go to state 33

state 25

    (23) assume_statement -> ASSUME . expression AND expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 36
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 26

    (51) init -> INIT . equals attribute IN_A_SET init_set_statement
    (43) equals -> . EQUALS_DEFINITIONS
    (44) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 28
    EQUALS_EQUALITY shift and go to state 29

    equals                         shift and go to state 44

state 27

    (50) type_invariant -> attribute equals . expression
    (45) set_definition -> attribute equals . LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (55) bean_value_count -> attribute equals . bean_equation
    (57) function_declaration -> attribute equals . AND function_conditions except_section
    (69) termination_statement -> attribute equals . AND function_conditions
    (70) next_state_relation -> attribute equals . OR function_conditions
    (71) action_formula_definition -> attribute equals . action_formula
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (56) bean_equation -> . dot_access PLUS dot_access
    (72) action_formula -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute
    (4) dot_access -> . attribute DOT attribute

    LEFT_SQR_BRACKET shift and go to state 47
    AND             shift and go to state 49
    OR              shift and go to state 50
    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 45
    expression                     shift and go to state 46
    bean_equation                  shift and go to state 48
    action_formula                 shift and go to state 51
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    type_invariant_expression      shift and go to state 40
    dot_access                     shift and go to state 52

state 28

    (43) equals -> EQUALS_DEFINITIONS .

    LEFT_SQR_BRACKET reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    AND             reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    OR              reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    NUMBER_LITERAL  reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    STRING_LITERAL  reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    LEFT_PAREN      reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    ATTRIBUTE       reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)
    AT              reduce using rule 43 (equals -> EQUALS_DEFINITIONS .)


state 29

    (44) equals -> EQUALS_EQUALITY .

    LEFT_SQR_BRACKET reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    AND             reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    OR              reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    NUMBER_LITERAL  reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    STRING_LITERAL  reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    LEFT_PAREN      reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    ATTRIBUTE       reduce using rule 44 (equals -> EQUALS_EQUALITY .)
    AT              reduce using rule 44 (equals -> EQUALS_EQUALITY .)


state 30

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements .
    (8) statements -> statements . statement
    (10) statement -> . constants_statement
    (11) statement -> . variables_statement
    (12) statement -> . assume_statement
    (13) statement -> . type_invariant
    (14) statement -> . set_definition
    (15) statement -> . bean_value_count
    (16) statement -> . function_declaration
    (17) statement -> . termination_statement
    (18) statement -> . next_state_relation
    (19) statement -> . action_formula_definition
    (20) statement -> . init
    (21) constants_statement -> . CONSTANTS names
    (22) variables_statement -> . VARIABLES names
    (23) assume_statement -> . ASSUME expression AND expression
    (50) type_invariant -> . attribute equals expression
    (45) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (55) bean_value_count -> . attribute equals bean_equation
    (57) function_declaration -> . attribute equals AND function_conditions except_section
    (69) termination_statement -> . attribute equals AND function_conditions
    (70) next_state_relation -> . attribute equals OR function_conditions
    (71) action_formula_definition -> . attribute equals action_formula
    (51) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    $end            reduce using rule 1 (module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements .)
    CONSTANTS       shift and go to state 23
    VARIABLES       shift and go to state 24
    ASSUME          shift and go to state 25
    INIT            shift and go to state 26
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statement                      shift and go to state 31
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    init                           shift and go to state 22

state 31

    (8) statements -> statements statement .

    CONSTANTS       reduce using rule 8 (statements -> statements statement .)
    VARIABLES       reduce using rule 8 (statements -> statements statement .)
    ASSUME          reduce using rule 8 (statements -> statements statement .)
    INIT            reduce using rule 8 (statements -> statements statement .)
    ATTRIBUTE       reduce using rule 8 (statements -> statements statement .)
    $end            reduce using rule 8 (statements -> statements statement .)


state 32

    (5) extends -> EXTENDS names .
    (6) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 5 (extends -> EXTENDS names .)
    VARIABLES       reduce using rule 5 (extends -> EXTENDS names .)
    ASSUME          reduce using rule 5 (extends -> EXTENDS names .)
    INIT            reduce using rule 5 (extends -> EXTENDS names .)
    ATTRIBUTE       reduce using rule 5 (extends -> EXTENDS names .)
    COMMA           shift and go to state 53


state 33

    (7) names -> attribute .

    COMMA           reduce using rule 7 (names -> attribute .)
    CONSTANTS       reduce using rule 7 (names -> attribute .)
    VARIABLES       reduce using rule 7 (names -> attribute .)
    ASSUME          reduce using rule 7 (names -> attribute .)
    INIT            reduce using rule 7 (names -> attribute .)
    ATTRIBUTE       reduce using rule 7 (names -> attribute .)
    $end            reduce using rule 7 (names -> attribute .)


state 34

    (21) constants_statement -> CONSTANTS names .
    (6) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 21 (constants_statement -> CONSTANTS names .)
    VARIABLES       reduce using rule 21 (constants_statement -> CONSTANTS names .)
    ASSUME          reduce using rule 21 (constants_statement -> CONSTANTS names .)
    INIT            reduce using rule 21 (constants_statement -> CONSTANTS names .)
    ATTRIBUTE       reduce using rule 21 (constants_statement -> CONSTANTS names .)
    $end            reduce using rule 21 (constants_statement -> CONSTANTS names .)
    COMMA           shift and go to state 53


state 35

    (22) variables_statement -> VARIABLES names .
    (6) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 22 (variables_statement -> VARIABLES names .)
    VARIABLES       reduce using rule 22 (variables_statement -> VARIABLES names .)
    ASSUME          reduce using rule 22 (variables_statement -> VARIABLES names .)
    INIT            reduce using rule 22 (variables_statement -> VARIABLES names .)
    ATTRIBUTE       reduce using rule 22 (variables_statement -> VARIABLES names .)
    $end            reduce using rule 22 (variables_statement -> VARIABLES names .)
    COMMA           shift and go to state 53


state 36

    (23) assume_statement -> ASSUME expression . AND expression
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    AND             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    STAR            shift and go to state 57
    DIVIDE          shift and go to state 58


state 37

    (28) expression -> set_membership .

    AND             reduce using rule 28 (expression -> set_membership .)
    PLUS            reduce using rule 28 (expression -> set_membership .)
    MINUS           reduce using rule 28 (expression -> set_membership .)
    STAR            reduce using rule 28 (expression -> set_membership .)
    DIVIDE          reduce using rule 28 (expression -> set_membership .)
    CONSTANTS       reduce using rule 28 (expression -> set_membership .)
    VARIABLES       reduce using rule 28 (expression -> set_membership .)
    ASSUME          reduce using rule 28 (expression -> set_membership .)
    INIT            reduce using rule 28 (expression -> set_membership .)
    ATTRIBUTE       reduce using rule 28 (expression -> set_membership .)
    $end            reduce using rule 28 (expression -> set_membership .)
    RIGHT_PAREN     reduce using rule 28 (expression -> set_membership .)


state 38

    (29) expression -> comparison .

    AND             reduce using rule 29 (expression -> comparison .)
    PLUS            reduce using rule 29 (expression -> comparison .)
    MINUS           reduce using rule 29 (expression -> comparison .)
    STAR            reduce using rule 29 (expression -> comparison .)
    DIVIDE          reduce using rule 29 (expression -> comparison .)
    CONSTANTS       reduce using rule 29 (expression -> comparison .)
    VARIABLES       reduce using rule 29 (expression -> comparison .)
    ASSUME          reduce using rule 29 (expression -> comparison .)
    INIT            reduce using rule 29 (expression -> comparison .)
    ATTRIBUTE       reduce using rule 29 (expression -> comparison .)
    $end            reduce using rule 29 (expression -> comparison .)
    RIGHT_PAREN     reduce using rule 29 (expression -> comparison .)


state 39

    (30) expression -> attribute .
    (42) set_membership -> attribute . IN_A_SET Nat
    (36) comparison -> attribute . comparison_rule NUMBER_LITERAL
    (37) comparison -> attribute . comparison_rule attribute
    (34) type_invariant_expression -> attribute . IN_A_SET attribute
    (38) comparison_rule -> . GREATER_OR_EQ
    (39) comparison_rule -> . LESS_OR_EQ
    (40) comparison_rule -> . GREATER_THAN
    (41) comparison_rule -> . LESS_THAN

    AND             reduce using rule 30 (expression -> attribute .)
    PLUS            reduce using rule 30 (expression -> attribute .)
    MINUS           reduce using rule 30 (expression -> attribute .)
    STAR            reduce using rule 30 (expression -> attribute .)
    DIVIDE          reduce using rule 30 (expression -> attribute .)
    RIGHT_PAREN     reduce using rule 30 (expression -> attribute .)
    CONSTANTS       reduce using rule 30 (expression -> attribute .)
    VARIABLES       reduce using rule 30 (expression -> attribute .)
    ASSUME          reduce using rule 30 (expression -> attribute .)
    INIT            reduce using rule 30 (expression -> attribute .)
    ATTRIBUTE       reduce using rule 30 (expression -> attribute .)
    $end            reduce using rule 30 (expression -> attribute .)
    IN_A_SET        shift and go to state 59
    GREATER_OR_EQ   shift and go to state 61
    LESS_OR_EQ      shift and go to state 62
    GREATER_THAN    shift and go to state 63
    LESS_THAN       shift and go to state 64

    comparison_rule                shift and go to state 60

state 40

    (31) expression -> type_invariant_expression .

    AND             reduce using rule 31 (expression -> type_invariant_expression .)
    PLUS            reduce using rule 31 (expression -> type_invariant_expression .)
    MINUS           reduce using rule 31 (expression -> type_invariant_expression .)
    STAR            reduce using rule 31 (expression -> type_invariant_expression .)
    DIVIDE          reduce using rule 31 (expression -> type_invariant_expression .)
    CONSTANTS       reduce using rule 31 (expression -> type_invariant_expression .)
    VARIABLES       reduce using rule 31 (expression -> type_invariant_expression .)
    ASSUME          reduce using rule 31 (expression -> type_invariant_expression .)
    INIT            reduce using rule 31 (expression -> type_invariant_expression .)
    ATTRIBUTE       reduce using rule 31 (expression -> type_invariant_expression .)
    $end            reduce using rule 31 (expression -> type_invariant_expression .)
    RIGHT_PAREN     reduce using rule 31 (expression -> type_invariant_expression .)


state 41

    (32) expression -> NUMBER_LITERAL .

    AND             reduce using rule 32 (expression -> NUMBER_LITERAL .)
    PLUS            reduce using rule 32 (expression -> NUMBER_LITERAL .)
    MINUS           reduce using rule 32 (expression -> NUMBER_LITERAL .)
    STAR            reduce using rule 32 (expression -> NUMBER_LITERAL .)
    DIVIDE          reduce using rule 32 (expression -> NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 32 (expression -> NUMBER_LITERAL .)
    VARIABLES       reduce using rule 32 (expression -> NUMBER_LITERAL .)
    ASSUME          reduce using rule 32 (expression -> NUMBER_LITERAL .)
    INIT            reduce using rule 32 (expression -> NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 32 (expression -> NUMBER_LITERAL .)
    $end            reduce using rule 32 (expression -> NUMBER_LITERAL .)
    RIGHT_PAREN     reduce using rule 32 (expression -> NUMBER_LITERAL .)


state 42

    (33) expression -> STRING_LITERAL .

    AND             reduce using rule 33 (expression -> STRING_LITERAL .)
    PLUS            reduce using rule 33 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 33 (expression -> STRING_LITERAL .)
    STAR            reduce using rule 33 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 33 (expression -> STRING_LITERAL .)
    CONSTANTS       reduce using rule 33 (expression -> STRING_LITERAL .)
    VARIABLES       reduce using rule 33 (expression -> STRING_LITERAL .)
    ASSUME          reduce using rule 33 (expression -> STRING_LITERAL .)
    INIT            reduce using rule 33 (expression -> STRING_LITERAL .)
    ATTRIBUTE       reduce using rule 33 (expression -> STRING_LITERAL .)
    $end            reduce using rule 33 (expression -> STRING_LITERAL .)
    RIGHT_PAREN     reduce using rule 33 (expression -> STRING_LITERAL .)


state 43

    (74) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 65
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 44

    (51) init -> INIT equals . attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 66

state 45

    (30) expression -> attribute .
    (42) set_membership -> attribute . IN_A_SET Nat
    (36) comparison -> attribute . comparison_rule NUMBER_LITERAL
    (37) comparison -> attribute . comparison_rule attribute
    (34) type_invariant_expression -> attribute . IN_A_SET attribute
    (4) dot_access -> attribute . DOT attribute
    (38) comparison_rule -> . GREATER_OR_EQ
    (39) comparison_rule -> . LESS_OR_EQ
    (40) comparison_rule -> . GREATER_THAN
    (41) comparison_rule -> . LESS_THAN

    PLUS            reduce using rule 30 (expression -> attribute .)
    MINUS           reduce using rule 30 (expression -> attribute .)
    STAR            reduce using rule 30 (expression -> attribute .)
    DIVIDE          reduce using rule 30 (expression -> attribute .)
    CONSTANTS       reduce using rule 30 (expression -> attribute .)
    VARIABLES       reduce using rule 30 (expression -> attribute .)
    ASSUME          reduce using rule 30 (expression -> attribute .)
    INIT            reduce using rule 30 (expression -> attribute .)
    ATTRIBUTE       reduce using rule 30 (expression -> attribute .)
    $end            reduce using rule 30 (expression -> attribute .)
    IN_A_SET        shift and go to state 59
    DOT             shift and go to state 67
    GREATER_OR_EQ   shift and go to state 61
    LESS_OR_EQ      shift and go to state 62
    GREATER_THAN    shift and go to state 63
    LESS_THAN       shift and go to state 64

    comparison_rule                shift and go to state 60

state 46

    (50) type_invariant -> attribute equals expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    CONSTANTS       reduce using rule 50 (type_invariant -> attribute equals expression .)
    VARIABLES       reduce using rule 50 (type_invariant -> attribute equals expression .)
    ASSUME          reduce using rule 50 (type_invariant -> attribute equals expression .)
    INIT            reduce using rule 50 (type_invariant -> attribute equals expression .)
    ATTRIBUTE       reduce using rule 50 (type_invariant -> attribute equals expression .)
    $end            reduce using rule 50 (type_invariant -> attribute equals expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    STAR            shift and go to state 57
    DIVIDE          shift and go to state 58


state 47

    (45) set_definition -> attribute equals LEFT_SQR_BRACKET . set_info RIGHT_SQR_BRACKET
    (72) action_formula -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (46) set_info -> . set_info COMMA set_individual_info
    (47) set_info -> . set_individual_info
    (48) set_individual_info -> . ATTRIBUTE COLON set_scope

    RIGHT_SQR_BRACKET shift and go to state 69
    ATTRIBUTE       shift and go to state 71

    set_info                       shift and go to state 68
    set_individual_info            shift and go to state 70

state 48

    (55) bean_value_count -> attribute equals bean_equation .

    CONSTANTS       reduce using rule 55 (bean_value_count -> attribute equals bean_equation .)
    VARIABLES       reduce using rule 55 (bean_value_count -> attribute equals bean_equation .)
    ASSUME          reduce using rule 55 (bean_value_count -> attribute equals bean_equation .)
    INIT            reduce using rule 55 (bean_value_count -> attribute equals bean_equation .)
    ATTRIBUTE       reduce using rule 55 (bean_value_count -> attribute equals bean_equation .)
    $end            reduce using rule 55 (bean_value_count -> attribute equals bean_equation .)


state 49

    (57) function_declaration -> attribute equals AND . function_conditions except_section
    (69) termination_statement -> attribute equals AND . function_conditions
    (58) function_conditions -> . function_condition
    (59) function_conditions -> . function_conditions AND function_condition
    (60) function_conditions -> . function_conditions OR function_condition
    (61) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (62) function_condition -> . attribute equals NUMBER_LITERAL
    (63) function_condition -> . UNCHANGED attribute
    (64) function_condition -> . attribute
    (65) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 75
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 72
    function_conditions            shift and go to state 73
    function_condition             shift and go to state 74

state 50

    (70) next_state_relation -> attribute equals OR . function_conditions
    (58) function_conditions -> . function_condition
    (59) function_conditions -> . function_conditions AND function_condition
    (60) function_conditions -> . function_conditions OR function_condition
    (61) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (62) function_condition -> . attribute equals NUMBER_LITERAL
    (63) function_condition -> . UNCHANGED attribute
    (64) function_condition -> . attribute
    (65) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 75
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 72
    function_conditions            shift and go to state 76
    function_condition             shift and go to state 74

state 51

    (71) action_formula_definition -> attribute equals action_formula .

    CONSTANTS       reduce using rule 71 (action_formula_definition -> attribute equals action_formula .)
    VARIABLES       reduce using rule 71 (action_formula_definition -> attribute equals action_formula .)
    ASSUME          reduce using rule 71 (action_formula_definition -> attribute equals action_formula .)
    INIT            reduce using rule 71 (action_formula_definition -> attribute equals action_formula .)
    ATTRIBUTE       reduce using rule 71 (action_formula_definition -> attribute equals action_formula .)
    $end            reduce using rule 71 (action_formula_definition -> attribute equals action_formula .)


state 52

    (56) bean_equation -> dot_access . PLUS dot_access

    PLUS            shift and go to state 77


state 53

    (6) names -> names COMMA . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 78

state 54

    (23) assume_statement -> ASSUME expression AND . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 79
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 55

    (24) expression -> expression PLUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 80
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 56

    (25) expression -> expression MINUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 81
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 57

    (26) expression -> expression STAR . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 82
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 58

    (27) expression -> expression DIVIDE . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression STAR expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . set_membership
    (29) expression -> . comparison
    (30) expression -> . attribute
    (31) expression -> . type_invariant_expression
    (32) expression -> . NUMBER_LITERAL
    (33) expression -> . STRING_LITERAL
    (74) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (42) set_membership -> . attribute IN_A_SET Nat
    (36) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (37) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (34) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 41
    STRING_LITERAL  shift and go to state 42
    LEFT_PAREN      shift and go to state 43
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 83
    set_membership                 shift and go to state 37
    comparison                     shift and go to state 38
    attribute                      shift and go to state 39
    type_invariant_expression      shift and go to state 40

state 59

    (42) set_membership -> attribute IN_A_SET . Nat
    (34) type_invariant_expression -> attribute IN_A_SET . attribute
    (3) attribute -> . ATTRIBUTE

    Nat             shift and go to state 85
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 84

state 60

    (36) comparison -> attribute comparison_rule . NUMBER_LITERAL
    (37) comparison -> attribute comparison_rule . attribute
    (3) attribute -> . ATTRIBUTE

    NUMBER_LITERAL  shift and go to state 87
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 86

state 61

    (38) comparison_rule -> GREATER_OR_EQ .

    NUMBER_LITERAL  reduce using rule 38 (comparison_rule -> GREATER_OR_EQ .)
    ATTRIBUTE       reduce using rule 38 (comparison_rule -> GREATER_OR_EQ .)


state 62

    (39) comparison_rule -> LESS_OR_EQ .

    NUMBER_LITERAL  reduce using rule 39 (comparison_rule -> LESS_OR_EQ .)
    ATTRIBUTE       reduce using rule 39 (comparison_rule -> LESS_OR_EQ .)


state 63

    (40) comparison_rule -> GREATER_THAN .

    NUMBER_LITERAL  reduce using rule 40 (comparison_rule -> GREATER_THAN .)
    ATTRIBUTE       reduce using rule 40 (comparison_rule -> GREATER_THAN .)


state 64

    (41) comparison_rule -> LESS_THAN .

    NUMBER_LITERAL  reduce using rule 41 (comparison_rule -> LESS_THAN .)
    ATTRIBUTE       reduce using rule 41 (comparison_rule -> LESS_THAN .)


state 65

    (74) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    RIGHT_PAREN     shift and go to state 88
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    STAR            shift and go to state 57
    DIVIDE          shift and go to state 58


state 66

    (51) init -> INIT equals attribute . IN_A_SET init_set_statement

    IN_A_SET        shift and go to state 89


state 67

    (4) dot_access -> attribute DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 90

state 68

    (45) set_definition -> attribute equals LEFT_SQR_BRACKET set_info . RIGHT_SQR_BRACKET
    (46) set_info -> set_info . COMMA set_individual_info

    RIGHT_SQR_BRACKET shift and go to state 91
    COMMA           shift and go to state 92


state 69

    (72) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET . LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 93


state 70

    (47) set_info -> set_individual_info .

    RIGHT_SQR_BRACKET reduce using rule 47 (set_info -> set_individual_info .)
    COMMA           reduce using rule 47 (set_info -> set_individual_info .)


state 71

    (48) set_individual_info -> ATTRIBUTE . COLON set_scope

    COLON           shift and go to state 94


state 72

    (61) function_condition -> attribute . comparison_rule NUMBER_LITERAL
    (62) function_condition -> attribute . equals NUMBER_LITERAL
    (64) function_condition -> attribute .
    (65) function_condition -> attribute . DOT attribute comparison_rule NUMBER_LITERAL
    (38) comparison_rule -> . GREATER_OR_EQ
    (39) comparison_rule -> . LESS_OR_EQ
    (40) comparison_rule -> . GREATER_THAN
    (41) comparison_rule -> . LESS_THAN
    (43) equals -> . EQUALS_DEFINITIONS
    (44) equals -> . EQUALS_EQUALITY

    AND             reduce using rule 64 (function_condition -> attribute .)
    OR              reduce using rule 64 (function_condition -> attribute .)
    CONSTANTS       reduce using rule 64 (function_condition -> attribute .)
    VARIABLES       reduce using rule 64 (function_condition -> attribute .)
    ASSUME          reduce using rule 64 (function_condition -> attribute .)
    INIT            reduce using rule 64 (function_condition -> attribute .)
    ATTRIBUTE       reduce using rule 64 (function_condition -> attribute .)
    $end            reduce using rule 64 (function_condition -> attribute .)
    DOT             shift and go to state 97
    GREATER_OR_EQ   shift and go to state 61
    LESS_OR_EQ      shift and go to state 62
    GREATER_THAN    shift and go to state 63
    LESS_THAN       shift and go to state 64
    EQUALS_DEFINITIONS shift and go to state 28
    EQUALS_EQUALITY shift and go to state 29

    comparison_rule                shift and go to state 95
    equals                         shift and go to state 96

state 73

    (57) function_declaration -> attribute equals AND function_conditions . except_section
    (69) termination_statement -> attribute equals AND function_conditions .
    (59) function_conditions -> function_conditions . AND function_condition
    (60) function_conditions -> function_conditions . OR function_condition
    (66) except_section -> . AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause

    CONSTANTS       reduce using rule 69 (termination_statement -> attribute equals AND function_conditions .)
    VARIABLES       reduce using rule 69 (termination_statement -> attribute equals AND function_conditions .)
    ASSUME          reduce using rule 69 (termination_statement -> attribute equals AND function_conditions .)
    INIT            reduce using rule 69 (termination_statement -> attribute equals AND function_conditions .)
    ATTRIBUTE       reduce using rule 69 (termination_statement -> attribute equals AND function_conditions .)
    $end            reduce using rule 69 (termination_statement -> attribute equals AND function_conditions .)
    AND             shift and go to state 98
    OR              shift and go to state 100

    except_section                 shift and go to state 99

state 74

    (58) function_conditions -> function_condition .

    AND             reduce using rule 58 (function_conditions -> function_condition .)
    OR              reduce using rule 58 (function_conditions -> function_condition .)
    CONSTANTS       reduce using rule 58 (function_conditions -> function_condition .)
    VARIABLES       reduce using rule 58 (function_conditions -> function_condition .)
    ASSUME          reduce using rule 58 (function_conditions -> function_condition .)
    INIT            reduce using rule 58 (function_conditions -> function_condition .)
    ATTRIBUTE       reduce using rule 58 (function_conditions -> function_condition .)
    $end            reduce using rule 58 (function_conditions -> function_condition .)


state 75

    (63) function_condition -> UNCHANGED . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 101

state 76

    (70) next_state_relation -> attribute equals OR function_conditions .
    (59) function_conditions -> function_conditions . AND function_condition
    (60) function_conditions -> function_conditions . OR function_condition

    CONSTANTS       reduce using rule 70 (next_state_relation -> attribute equals OR function_conditions .)
    VARIABLES       reduce using rule 70 (next_state_relation -> attribute equals OR function_conditions .)
    ASSUME          reduce using rule 70 (next_state_relation -> attribute equals OR function_conditions .)
    INIT            reduce using rule 70 (next_state_relation -> attribute equals OR function_conditions .)
    ATTRIBUTE       reduce using rule 70 (next_state_relation -> attribute equals OR function_conditions .)
    $end            reduce using rule 70 (next_state_relation -> attribute equals OR function_conditions .)
    AND             shift and go to state 102
    OR              shift and go to state 100


state 77

    (56) bean_equation -> dot_access PLUS . dot_access
    (4) dot_access -> . attribute DOT attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 103
    attribute                      shift and go to state 104

state 78

    (6) names -> names COMMA attribute .

    COMMA           reduce using rule 6 (names -> names COMMA attribute .)
    CONSTANTS       reduce using rule 6 (names -> names COMMA attribute .)
    VARIABLES       reduce using rule 6 (names -> names COMMA attribute .)
    ASSUME          reduce using rule 6 (names -> names COMMA attribute .)
    INIT            reduce using rule 6 (names -> names COMMA attribute .)
    ATTRIBUTE       reduce using rule 6 (names -> names COMMA attribute .)
    $end            reduce using rule 6 (names -> names COMMA attribute .)


state 79

    (23) assume_statement -> ASSUME expression AND expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    CONSTANTS       reduce using rule 23 (assume_statement -> ASSUME expression AND expression .)
    VARIABLES       reduce using rule 23 (assume_statement -> ASSUME expression AND expression .)
    ASSUME          reduce using rule 23 (assume_statement -> ASSUME expression AND expression .)
    INIT            reduce using rule 23 (assume_statement -> ASSUME expression AND expression .)
    ATTRIBUTE       reduce using rule 23 (assume_statement -> ASSUME expression AND expression .)
    $end            reduce using rule 23 (assume_statement -> ASSUME expression AND expression .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    STAR            shift and go to state 57
    DIVIDE          shift and go to state 58


state 80

    (24) expression -> expression PLUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    AND             reduce using rule 24 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 24 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 24 (expression -> expression PLUS expression .)
    CONSTANTS       reduce using rule 24 (expression -> expression PLUS expression .)
    VARIABLES       reduce using rule 24 (expression -> expression PLUS expression .)
    ASSUME          reduce using rule 24 (expression -> expression PLUS expression .)
    INIT            reduce using rule 24 (expression -> expression PLUS expression .)
    ATTRIBUTE       reduce using rule 24 (expression -> expression PLUS expression .)
    $end            reduce using rule 24 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 24 (expression -> expression PLUS expression .)
    STAR            shift and go to state 57
    DIVIDE          shift and go to state 58

  ! STAR            [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]


state 81

    (25) expression -> expression MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    AND             reduce using rule 25 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    CONSTANTS       reduce using rule 25 (expression -> expression MINUS expression .)
    VARIABLES       reduce using rule 25 (expression -> expression MINUS expression .)
    ASSUME          reduce using rule 25 (expression -> expression MINUS expression .)
    INIT            reduce using rule 25 (expression -> expression MINUS expression .)
    ATTRIBUTE       reduce using rule 25 (expression -> expression MINUS expression .)
    $end            reduce using rule 25 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 25 (expression -> expression MINUS expression .)
    STAR            shift and go to state 57
    DIVIDE          shift and go to state 58

  ! STAR            [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]


state 82

    (26) expression -> expression STAR expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    AND             reduce using rule 26 (expression -> expression STAR expression .)
    PLUS            reduce using rule 26 (expression -> expression STAR expression .)
    MINUS           reduce using rule 26 (expression -> expression STAR expression .)
    STAR            reduce using rule 26 (expression -> expression STAR expression .)
    DIVIDE          reduce using rule 26 (expression -> expression STAR expression .)
    CONSTANTS       reduce using rule 26 (expression -> expression STAR expression .)
    VARIABLES       reduce using rule 26 (expression -> expression STAR expression .)
    ASSUME          reduce using rule 26 (expression -> expression STAR expression .)
    INIT            reduce using rule 26 (expression -> expression STAR expression .)
    ATTRIBUTE       reduce using rule 26 (expression -> expression STAR expression .)
    $end            reduce using rule 26 (expression -> expression STAR expression .)
    RIGHT_PAREN     reduce using rule 26 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! STAR            [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]


state 83

    (27) expression -> expression DIVIDE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . STAR expression
    (27) expression -> expression . DIVIDE expression

    AND             reduce using rule 27 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 27 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 27 (expression -> expression DIVIDE expression .)
    STAR            reduce using rule 27 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 27 (expression -> expression DIVIDE expression .)
    CONSTANTS       reduce using rule 27 (expression -> expression DIVIDE expression .)
    VARIABLES       reduce using rule 27 (expression -> expression DIVIDE expression .)
    ASSUME          reduce using rule 27 (expression -> expression DIVIDE expression .)
    INIT            reduce using rule 27 (expression -> expression DIVIDE expression .)
    ATTRIBUTE       reduce using rule 27 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 27 (expression -> expression DIVIDE expression .)
    RIGHT_PAREN     reduce using rule 27 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! STAR            [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]


state 84

    (34) type_invariant_expression -> attribute IN_A_SET attribute .

    AND             reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    PLUS            reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    MINUS           reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    STAR            reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    DIVIDE          reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    CONSTANTS       reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    VARIABLES       reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    ASSUME          reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    INIT            reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    ATTRIBUTE       reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    $end            reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)
    RIGHT_PAREN     reduce using rule 34 (type_invariant_expression -> attribute IN_A_SET attribute .)


state 85

    (42) set_membership -> attribute IN_A_SET Nat .

    AND             reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    PLUS            reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    MINUS           reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    STAR            reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    DIVIDE          reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    CONSTANTS       reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    VARIABLES       reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    ASSUME          reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    INIT            reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    ATTRIBUTE       reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    $end            reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)
    RIGHT_PAREN     reduce using rule 42 (set_membership -> attribute IN_A_SET Nat .)


state 86

    (37) comparison -> attribute comparison_rule attribute .

    AND             reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    PLUS            reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    MINUS           reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    STAR            reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    DIVIDE          reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    CONSTANTS       reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    VARIABLES       reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    ASSUME          reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    INIT            reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    ATTRIBUTE       reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    $end            reduce using rule 37 (comparison -> attribute comparison_rule attribute .)
    RIGHT_PAREN     reduce using rule 37 (comparison -> attribute comparison_rule attribute .)


state 87

    (36) comparison -> attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    PLUS            reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    MINUS           reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    STAR            reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    DIVIDE          reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    RIGHT_PAREN     reduce using rule 36 (comparison -> attribute comparison_rule NUMBER_LITERAL .)


state 88

    (74) expression -> LEFT_PAREN expression RIGHT_PAREN .

    AND             reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STAR            reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIVIDE          reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANTS       reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    VARIABLES       reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ASSUME          reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INIT            reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 74 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 89

    (51) init -> INIT equals attribute IN_A_SET . init_set_statement
    (52) init_set_statement -> . LEFT_BRACE attribute IN_A_SET attribute COLON order

    LEFT_BRACE      shift and go to state 106

    init_set_statement             shift and go to state 105

state 90

    (4) dot_access -> attribute DOT attribute .

    PLUS            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    CONSTANTS       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    VARIABLES       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    ASSUME          reduce using rule 4 (dot_access -> attribute DOT attribute .)
    INIT            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    ATTRIBUTE       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    $end            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    IN_A_SET        reduce using rule 4 (dot_access -> attribute DOT attribute .)


state 91

    (45) set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 45 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 45 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 45 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 45 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 45 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    $end            reduce using rule 45 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)


state 92

    (46) set_info -> set_info COMMA . set_individual_info
    (48) set_individual_info -> . ATTRIBUTE COLON set_scope

    ATTRIBUTE       shift and go to state 71

    set_individual_info            shift and go to state 107

state 93

    (72) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET . formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (73) formula_details -> . NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 109

    formula_details                shift and go to state 108

state 94

    (48) set_individual_info -> ATTRIBUTE COLON . set_scope
    (49) set_scope -> . NUMBER_LITERAL DOT DOT attribute

    NUMBER_LITERAL  shift and go to state 111

    set_scope                      shift and go to state 110

state 95

    (61) function_condition -> attribute comparison_rule . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 112


state 96

    (62) function_condition -> attribute equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 113


state 97

    (65) function_condition -> attribute DOT . attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 114

state 98

    (59) function_conditions -> function_conditions AND . function_condition
    (66) except_section -> AND . NEXT_VALUE_OF_ATTRIBUTE equals except_clause
    (61) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (62) function_condition -> . attribute equals NUMBER_LITERAL
    (63) function_condition -> . UNCHANGED attribute
    (64) function_condition -> . attribute
    (65) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 116
    UNCHANGED       shift and go to state 75
    ATTRIBUTE       shift and go to state 5

    function_condition             shift and go to state 115
    attribute                      shift and go to state 72

state 99

    (57) function_declaration -> attribute equals AND function_conditions except_section .

    CONSTANTS       reduce using rule 57 (function_declaration -> attribute equals AND function_conditions except_section .)
    VARIABLES       reduce using rule 57 (function_declaration -> attribute equals AND function_conditions except_section .)
    ASSUME          reduce using rule 57 (function_declaration -> attribute equals AND function_conditions except_section .)
    INIT            reduce using rule 57 (function_declaration -> attribute equals AND function_conditions except_section .)
    ATTRIBUTE       reduce using rule 57 (function_declaration -> attribute equals AND function_conditions except_section .)
    $end            reduce using rule 57 (function_declaration -> attribute equals AND function_conditions except_section .)


state 100

    (60) function_conditions -> function_conditions OR . function_condition
    (61) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (62) function_condition -> . attribute equals NUMBER_LITERAL
    (63) function_condition -> . UNCHANGED attribute
    (64) function_condition -> . attribute
    (65) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 75
    ATTRIBUTE       shift and go to state 5

    function_condition             shift and go to state 117
    attribute                      shift and go to state 72

state 101

    (63) function_condition -> UNCHANGED attribute .

    AND             reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    OR              reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    CONSTANTS       reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    VARIABLES       reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    ASSUME          reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    INIT            reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    ATTRIBUTE       reduce using rule 63 (function_condition -> UNCHANGED attribute .)
    $end            reduce using rule 63 (function_condition -> UNCHANGED attribute .)


state 102

    (59) function_conditions -> function_conditions AND . function_condition
    (61) function_condition -> . attribute comparison_rule NUMBER_LITERAL
    (62) function_condition -> . attribute equals NUMBER_LITERAL
    (63) function_condition -> . UNCHANGED attribute
    (64) function_condition -> . attribute
    (65) function_condition -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 75
    ATTRIBUTE       shift and go to state 5

    function_condition             shift and go to state 115
    attribute                      shift and go to state 72

state 103

    (56) bean_equation -> dot_access PLUS dot_access .

    CONSTANTS       reduce using rule 56 (bean_equation -> dot_access PLUS dot_access .)
    VARIABLES       reduce using rule 56 (bean_equation -> dot_access PLUS dot_access .)
    ASSUME          reduce using rule 56 (bean_equation -> dot_access PLUS dot_access .)
    INIT            reduce using rule 56 (bean_equation -> dot_access PLUS dot_access .)
    ATTRIBUTE       reduce using rule 56 (bean_equation -> dot_access PLUS dot_access .)
    $end            reduce using rule 56 (bean_equation -> dot_access PLUS dot_access .)


state 104

    (4) dot_access -> attribute . DOT attribute

    DOT             shift and go to state 67


state 105

    (51) init -> INIT equals attribute IN_A_SET init_set_statement .

    CONSTANTS       reduce using rule 51 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    VARIABLES       reduce using rule 51 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    ASSUME          reduce using rule 51 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    INIT            reduce using rule 51 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    ATTRIBUTE       reduce using rule 51 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    $end            reduce using rule 51 (init -> INIT equals attribute IN_A_SET init_set_statement .)


state 106

    (52) init_set_statement -> LEFT_BRACE . attribute IN_A_SET attribute COLON order
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 118

state 107

    (46) set_info -> set_info COMMA set_individual_info .

    RIGHT_SQR_BRACKET reduce using rule 46 (set_info -> set_info COMMA set_individual_info .)
    COMMA           reduce using rule 46 (set_info -> set_info COMMA set_individual_info .)


state 108

    (72) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details . RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 119


state 109

    (73) formula_details -> NEXT_VALUE_OF_ATTRIBUTE . LESS_THAN attribute

    LESS_THAN       shift and go to state 120


state 110

    (48) set_individual_info -> ATTRIBUTE COLON set_scope .

    RIGHT_SQR_BRACKET reduce using rule 48 (set_individual_info -> ATTRIBUTE COLON set_scope .)
    COMMA           reduce using rule 48 (set_individual_info -> ATTRIBUTE COLON set_scope .)


state 111

    (49) set_scope -> NUMBER_LITERAL . DOT DOT attribute

    DOT             shift and go to state 121


state 112

    (61) function_condition -> attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    OR              reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 61 (function_condition -> attribute comparison_rule NUMBER_LITERAL .)


state 113

    (62) function_condition -> attribute equals NUMBER_LITERAL .

    AND             reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    OR              reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    VARIABLES       reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    ASSUME          reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    INIT            reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)
    $end            reduce using rule 62 (function_condition -> attribute equals NUMBER_LITERAL .)


state 114

    (65) function_condition -> attribute DOT attribute . comparison_rule NUMBER_LITERAL
    (38) comparison_rule -> . GREATER_OR_EQ
    (39) comparison_rule -> . LESS_OR_EQ
    (40) comparison_rule -> . GREATER_THAN
    (41) comparison_rule -> . LESS_THAN

    GREATER_OR_EQ   shift and go to state 61
    LESS_OR_EQ      shift and go to state 62
    GREATER_THAN    shift and go to state 63
    LESS_THAN       shift and go to state 64

    comparison_rule                shift and go to state 122

state 115

    (59) function_conditions -> function_conditions AND function_condition .

    AND             reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    OR              reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    CONSTANTS       reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    VARIABLES       reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    ASSUME          reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    INIT            reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    ATTRIBUTE       reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)
    $end            reduce using rule 59 (function_conditions -> function_conditions AND function_condition .)


state 116

    (66) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE . equals except_clause
    (43) equals -> . EQUALS_DEFINITIONS
    (44) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 28
    EQUALS_EQUALITY shift and go to state 29

    equals                         shift and go to state 123

state 117

    (60) function_conditions -> function_conditions OR function_condition .

    AND             reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    OR              reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    CONSTANTS       reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    VARIABLES       reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    ASSUME          reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    INIT            reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    ATTRIBUTE       reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)
    $end            reduce using rule 60 (function_conditions -> function_conditions OR function_condition .)


state 118

    (52) init_set_statement -> LEFT_BRACE attribute . IN_A_SET attribute COLON order

    IN_A_SET        shift and go to state 124


state 119

    (72) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET . ATTRIBUTE_MAY_CHANGE

    ATTRIBUTE_MAY_CHANGE shift and go to state 125


state 120

    (73) formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 126

state 121

    (49) set_scope -> NUMBER_LITERAL DOT . DOT attribute

    DOT             shift and go to state 127


state 122

    (65) function_condition -> attribute DOT attribute comparison_rule . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 128


state 123

    (66) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals . except_clause
    (67) except_clause -> . LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> . LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    LEFT_SQR_BRACKET shift and go to state 130

    except_clause                  shift and go to state 129

state 124

    (52) init_set_statement -> LEFT_BRACE attribute IN_A_SET . attribute COLON order
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 131

state 125

    (72) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .

    CONSTANTS       reduce using rule 72 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    VARIABLES       reduce using rule 72 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ASSUME          reduce using rule 72 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    INIT            reduce using rule 72 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ATTRIBUTE       reduce using rule 72 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    $end            reduce using rule 72 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)


state 126

    (73) formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute .

    RIGHT_SQR_BRACKET reduce using rule 73 (formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute .)


state 127

    (49) set_scope -> NUMBER_LITERAL DOT DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 132

state 128

    (65) function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    OR              reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 65 (function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)


state 129

    (66) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .

    CONSTANTS       reduce using rule 66 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    VARIABLES       reduce using rule 66 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    ASSUME          reduce using rule 66 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    INIT            reduce using rule 66 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    ATTRIBUTE       reduce using rule 66 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    $end            reduce using rule 66 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)


state 130

    (67) except_clause -> LEFT_SQR_BRACKET . attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET . attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 133

state 131

    (52) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute . COLON order

    COLON           shift and go to state 134


state 132

    (49) set_scope -> NUMBER_LITERAL DOT DOT attribute .

    RIGHT_SQR_BRACKET reduce using rule 49 (set_scope -> NUMBER_LITERAL DOT DOT attribute .)
    COMMA           reduce using rule 49 (set_scope -> NUMBER_LITERAL DOT DOT attribute .)


state 133

    (67) except_clause -> LEFT_SQR_BRACKET attribute . EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute . EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCEPT          shift and go to state 135


state 134

    (52) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON . order
    (53) order -> . dot_access PLUS dot_access IN_A_SET range_of_values
    (4) dot_access -> . attribute DOT attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 104
    order                          shift and go to state 136
    dot_access                     shift and go to state 137

state 135

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT . EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT . EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCLAMATION_MARK shift and go to state 138


state 136

    (52) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .

    CONSTANTS       reduce using rule 52 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    VARIABLES       reduce using rule 52 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    ASSUME          reduce using rule 52 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    INIT            reduce using rule 52 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    ATTRIBUTE       reduce using rule 52 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    $end            reduce using rule 52 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)


state 137

    (53) order -> dot_access . PLUS dot_access IN_A_SET range_of_values

    PLUS            shift and go to state 139


state 138

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK . DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK . DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    DOT             shift and go to state 140


state 139

    (53) order -> dot_access PLUS . dot_access IN_A_SET range_of_values
    (4) dot_access -> . attribute DOT attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 141
    attribute                      shift and go to state 104

state 140

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT . attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT . attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 142

state 141

    (53) order -> dot_access PLUS dot_access . IN_A_SET range_of_values

    IN_A_SET        shift and go to state 143


state 142

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute . equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute . equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (43) equals -> . EQUALS_DEFINITIONS
    (44) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 28
    EQUALS_EQUALITY shift and go to state 29

    equals                         shift and go to state 144

state 143

    (53) order -> dot_access PLUS dot_access IN_A_SET . range_of_values
    (54) range_of_values -> . NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE

    NUMBER_LITERAL  shift and go to state 146

    range_of_values                shift and go to state 145

state 144

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals . AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals . AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    AT              shift and go to state 147


state 145

    (53) order -> dot_access PLUS dot_access IN_A_SET range_of_values .

    CONSTANTS       reduce using rule 53 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    VARIABLES       reduce using rule 53 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    ASSUME          reduce using rule 53 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    INIT            reduce using rule 53 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    ATTRIBUTE       reduce using rule 53 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    $end            reduce using rule 53 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)


state 146

    (54) range_of_values -> NUMBER_LITERAL . DOT DOT attribute RIGHT_BRACE

    DOT             shift and go to state 148


state 147

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT . MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT . PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    MINUS           shift and go to state 149
    PLUS            shift and go to state 150


state 148

    (54) range_of_values -> NUMBER_LITERAL DOT . DOT attribute RIGHT_BRACE

    DOT             shift and go to state 151


state 149

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS . NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 152


state 150

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS . NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 153


state 151

    (54) range_of_values -> NUMBER_LITERAL DOT DOT . attribute RIGHT_BRACE
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 154

state 152

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 155


state 153

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL . COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    COMMA           shift and go to state 156


state 154

    (54) range_of_values -> NUMBER_LITERAL DOT DOT attribute . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 157


state 155

    (67) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 67 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 67 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 67 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 67 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 67 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    $end            reduce using rule 67 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)


state 156

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA . EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCLAMATION_MARK shift and go to state 158


state 157

    (54) range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .

    CONSTANTS       reduce using rule 54 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    VARIABLES       reduce using rule 54 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    ASSUME          reduce using rule 54 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    INIT            reduce using rule 54 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    ATTRIBUTE       reduce using rule 54 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    $end            reduce using rule 54 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)


state 158

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK . DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    DOT             shift and go to state 159


state 159

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT . attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 160

state 160

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute . equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (43) equals -> . EQUALS_DEFINITIONS
    (44) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 28
    EQUALS_EQUALITY shift and go to state 29

    equals                         shift and go to state 161

state 161

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals . AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    AT              shift and go to state 162


state 162

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT . MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    MINUS           shift and go to state 163


state 163

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS . NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 164


state 164

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 165


state 165

    (68) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 68 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 68 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 68 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 68 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 68 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    $end            reduce using rule 68 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)

