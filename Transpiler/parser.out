Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BACK_SLASH
    CHECK
    COLON
    FORWARD_SLASH
    GREATER_OR_EQ
    GREATER_THAN
    LEFT_BRACE
    LEFT_SQR_BRACKET
    LESS_OR_EQ
    LESS_THAN
    MODULE_NAME
    MODULUS
    NEXT
    NOT_EQUALS
    OR
    RIGHT_BRACE
    RIGHT_SQR_BRACKET
    SEMICOLON
    SINGLE_QUOTE
    SPEC
    UNDERSCORE
    VARIABLE_NAME

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULE_WRAPPER MODULE IDENTIFIER MODULE_WRAPPER extends declarations
Rule 2     module -> MODULE_WRAPPER MODULE IDENTIFIER MODULE_WRAPPER declarations
Rule 3     extends -> EXTENDS identifier_list
Rule 4     identifier_list -> identifier_list COMMA IDENTIFIER
Rule 5     identifier_list -> IDENTIFIER
Rule 6     declarations -> declarations declaration
Rule 7     declarations -> declaration
Rule 8     declaration -> constants_declaration
Rule 9     declaration -> variables_declaration
Rule 10    declaration -> assignment_statement
Rule 11    constants_declaration -> CONSTANTS identifier_list
Rule 12    variables_declaration -> VARIABLE identifier_list
Rule 13    graph_declaration -> GRAPH IDENTIFIER graph_body
Rule 14    graph_body -> graph_body graph_statement
Rule 15    graph_body -> graph_statement
Rule 16    graph_statement -> node_declaration
Rule 17    graph_statement -> edge_declaration
Rule 18    node_declaration -> NODE IDENTIFIER
Rule 19    edge_declaration -> EDGE IDENTIFIER ARROW IDENTIFIER
Rule 20    invariant_declaration -> INVARIANT expression
Rule 21    property_goal_declaration -> GOAL expression
Rule 22    assignment_statement -> IDENTIFIER EQUALS_ASSIGNMENT expression
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression STAR expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> IDENTIFIER
Rule 28    expression -> NUMBER_LITERAL
Rule 29    expression -> STRING_LITERAL
Rule 30    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 31    init_declaration -> INIT EQUALS_DEFINITIONS expression
Rule 32    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARROW                : 19
BACK_SLASH           : 
CHECK                : 
COLON                : 
COMMA                : 4
CONSTANTS            : 11
DIVIDE               : 26
EDGE                 : 19
EQUALS_ASSIGNMENT    : 22
EQUALS_DEFINITIONS   : 31
EXTENDS              : 3
FORWARD_SLASH        : 
GOAL                 : 21
GRAPH                : 13
GREATER_OR_EQ        : 
GREATER_THAN         : 
IDENTIFIER           : 1 2 4 5 13 18 19 19 22 27
INIT                 : 31
INVARIANT            : 20
LEFT_BRACE           : 
LEFT_PAREN           : 30
LEFT_SQR_BRACKET     : 
LESS_OR_EQ           : 
LESS_THAN            : 
MINUS                : 24
MODULE               : 1 2
MODULE_NAME          : 
MODULE_WRAPPER       : 1 1 2 2
MODULUS              : 
NEXT                 : 
NODE                 : 18
NOT_EQUALS           : 
NUMBER_LITERAL       : 28
OR                   : 
PLUS                 : 23
RIGHT_BRACE          : 
RIGHT_PAREN          : 30
RIGHT_SQR_BRACKET    : 
SEMICOLON            : 
SINGLE_QUOTE         : 
SPEC                 : 
STAR                 : 25
STRING_LITERAL       : 29
UNDERSCORE           : 
VARIABLE             : 12
VARIABLE_NAME        : 
error                : 

Nonterminals, with rules where they appear

assignment_statement : 10
constants_declaration : 8
declaration          : 6 7
declarations         : 1 2 6
edge_declaration     : 17
empty                : 
expression           : 20 21 22 23 23 24 24 25 25 26 26 30 31
extends              : 1
graph_body           : 13 14
graph_declaration    : 
graph_statement      : 14 15
identifier_list      : 3 4 11 12
init_declaration     : 
invariant_declaration : 
module               : 0
node_declaration     : 16
property_goal_declaration : 
variables_declaration : 9

