Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    BACK_SLASH
    CHECK
    EDGE
    FORWARD_SLASH
    GOAL
    GRAPH
    INVARIANT
    NODE
    NOT_EQUALS
    SEMICOLON
    SINGLE_QUOTE
    UNDERSCORE
    VARIABLE_NAME

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements
Rule 2     module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements
Rule 3     attribute -> ATTRIBUTE
Rule 4     dot_access -> attribute DOT attribute
Rule 5     dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute
Rule 6     extends -> EXTENDS names
Rule 7     names -> names COMMA attribute
Rule 8     names -> attribute
Rule 9     statements -> statements statement
Rule 10    statements -> statement
Rule 11    statement -> constants_statement
Rule 12    statement -> variables_statement
Rule 13    statement -> assume_statement
Rule 14    statement -> type_invariant
Rule 15    statement -> set_definition
Rule 16    statement -> bean_value_count
Rule 17    statement -> function_declaration
Rule 18    statement -> termination_statement
Rule 19    statement -> next_state_relation
Rule 20    statement -> action_formula_definition
Rule 21    statement -> liveness_property
Rule 22    statement -> loop_invariant
Rule 23    statement -> termination_hypothesis
Rule 24    statement -> spec_definition
Rule 25    statement -> theorem_definition
Rule 26    statement -> init
Rule 27    constants_statement -> CONSTANTS names
Rule 28    variables_statement -> VARIABLES names
Rule 29    assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression STAR expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> set_membership
Rule 35    expression -> comparison
Rule 36    expression -> attribute
Rule 37    expression -> type_invariant_expression
Rule 38    expression -> NUMBER_LITERAL
Rule 39    expression -> STRING_LITERAL
Rule 40    type_invariant_expression -> attribute IN_A_SET attribute
Rule 41    comparison -> attribute comparison_rule NUMBER_LITERAL
Rule 42    comparison -> attribute comparison_rule attribute
Rule 43    comparison_rule -> GREATER_OR_EQ
Rule 44    comparison_rule -> LESS_OR_EQ
Rule 45    comparison_rule -> GREATER_THAN
Rule 46    comparison_rule -> LESS_THAN
Rule 47    set_membership -> attribute IN_A_SET Nat
Rule 48    equals -> EQUALS_DEFINITIONS
Rule 49    equals -> EQUALS_EQUALITY
Rule 50    set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
Rule 51    set_info -> set_info COMMA set_individual_info
Rule 52    set_info -> set_individual_info
Rule 53    set_individual_info -> ATTRIBUTE COLON set_scope
Rule 54    set_scope -> NUMBER_LITERAL DOT DOT attribute
Rule 55    type_invariant -> attribute equals expression
Rule 56    init -> INIT equals attribute IN_A_SET init_set_statement
Rule 57    init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order
Rule 58    order -> dot_access PLUS dot_access IN_A_SET range_of_values
Rule 59    range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE
Rule 60    bean_value_count -> attribute equals bean_equation
Rule 61    bean_equation -> dot_access PLUS dot_access
Rule 62    function_declaration -> attribute equals AND function_info AND function_info except_section
Rule 63    function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section
Rule 64    function_info -> attribute DOT attribute comparison_rule NUMBER_LITERAL
Rule 65    function_info -> attribute comparison_rule NUMBER_LITERAL
Rule 66    function_conditions -> function_condition
Rule 67    function_conditions -> function_conditions AND function_condition
Rule 68    function_conditions -> function_conditions OR function_condition
Rule 69    function_condition -> attribute comparison_rule NUMBER_LITERAL
Rule 70    function_condition -> attribute equals NUMBER_LITERAL
Rule 71    function_condition -> UNCHANGED attribute
Rule 72    function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
Rule 73    function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
Rule 74    function_condition -> attribute
Rule 75    function_condition -> INIT
Rule 76    function_condition -> EventuallyTerminates
Rule 77    function_condition -> LoopInvariant
Rule 78    function_condition -> TerminationHypothesis
Rule 79    function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL
Rule 80    except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause
Rule 81    except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
Rule 82    except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
Rule 83    termination_statement -> attribute equals AND termination_info AND termination_info
Rule 84    termination_info -> attribute equals NUMBER_LITERAL
Rule 85    termination_info -> UNCHANGED attribute
Rule 86    next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info
Rule 87    next_state_info -> attribute
Rule 88    action_formula_definition -> attribute equals action_formula
Rule 89    action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
Rule 90    formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute
Rule 91    formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
Rule 92    liveness_property -> EventuallyTerminates equals property_details
Rule 93    property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN
Rule 94    loop_invariant -> LoopInvariant equals action_formula
Rule 95    termination_hypothesis -> TerminationHypothesis equals conditional_statements
Rule 96    conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement
Rule 97    conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
Rule 98    conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
Rule 99    spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info
Rule 100   spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
Rule 101   spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
Rule 102   spec_info -> INIT
Rule 103   theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info
Rule 104   theorem_info -> EventuallyTerminates
Rule 105   theorem_info -> attribute
Rule 106   theorem_info -> LoopInvariant
Rule 107   theorem_info -> TerminationHypothesis
Rule 108   expression -> LEFT_PAREN expression RIGHT_PAREN

Terminals, with rules where they appear

AND                  : 29 62 62 63 63 63 67 80 83 83 98 99 99 99 103 103 103 103 103
ARROW                : 
ASSUME               : 29
AT                   : 81 82 82
ATTRIBUTE            : 3 53
ATTRIBUTE_MAY_CHANGE : 72 73 89 100 101
BACK_SLASH           : 
CHECK                : 
COLON                : 53 57
COMMA                : 7 51 82
CONSTANTS            : 27
DIVIDE               : 33
DOT                  : 4 5 54 54 59 59 64 79 81 82 82
EDGE                 : 
ELSE                 : 96
ENABLED              : 93
EQUALS_DEFINITIONS   : 48
EQUALS_EQUALITY      : 49
EQUIVALENCE_OPERATOR : 91
EVENTUALLY           : 93 98
EXCEPT               : 81 82
EXCLAMATION_MARK     : 81 82 82
EXTENDS              : 6
EventuallyTerminates : 76 92 104
FORWARD_SLASH        : 
GOAL                 : 
GRAPH                : 
GREATER_OR_EQ        : 29 43
GREATER_THAN         : 45
IF                   : 96
IMPLIES              : 103
INIT                 : 56 75 102
INVARIANT            : 
IN_A_SET             : 29 40 47 56 57 58
LEFT_BRACE           : 57
LEFT_PAREN           : 73 93 98 101 108
LEFT_SQR_BRACKET     : 50 72 72 81 82 89 89 100 100
LESS_OR_EQ           : 44
LESS_THAN            : 46 90
LoopInvariant        : 77 94 106
MINUS                : 31 81 82
MODULE               : 1 2
MODULE_WRAPPER       : 1 1 2 2
MODULUS              : 91 91 97
NEXT_VALUE_OF_ATTRIBUTE : 5 80 90
NODE                 : 
NOT_EQUALS           : 
NUMBER_LITERAL       : 29 38 41 54 59 64 65 69 70 79 81 82 82 84 91 91 97 97 98 98
Nat                  : 29 47
OR                   : 68 86 86 86 86
PLUS                 : 30 58 61 82
RIGHT_BRACE          : 59
RIGHT_PAREN          : 73 93 98 101 108
RIGHT_SQR_BRACKET    : 50 72 72 81 82 89 89 100 100
SEMICOLON            : 
SINGLE_QUOTE         : 
SPEC                 : 99 103
STAR                 : 32
STRING_LITERAL       : 39
THEN                 : 96
THEOREM              : 103
TerminationHypothesis : 78 95 107
UNCHANGED            : 71 85
UNDERSCORE           : 
VARIABLES            : 28
VARIABLE_NAME        : 
WEAK_FAIRNESS        : 73 101
error                : 

Nonterminals, with rules where they appear

action_formula       : 88 94
action_formula_definition : 20
assume_statement     : 13
attribute            : 1 2 4 4 5 7 8 29 29 36 40 40 41 42 42 47 50 54 55 56 57 57 59 60 62 63 64 64 65 69 70 71 72 73 74 79 79 81 81 82 82 82 83 84 85 86 87 88 90 93 100 101 105
bean_equation        : 60
bean_value_count     : 16
comparison           : 35
comparison_rule      : 41 42 64 65 69 79
conditional_statement : 96 96 96
conditional_statements : 95
constants_statement  : 11
dot_access           : 58 58 61 61 91 91 97 98 98
equals               : 50 55 56 60 62 63 70 80 81 82 82 83 84 86 88 91 91 92 94 95 97 98 98 99
except_clause        : 80
except_section       : 62 63
expression           : 30 30 31 31 32 32 33 33 55 91 91 108
extends              : 1
formula_details      : 89
function_condition   : 66 67 68
function_conditions  : 67 68
function_declaration : 17
function_info        : 62 62 63 63 63
init                 : 26
init_set_statement   : 56
liveness_property    : 21
loop_invariant       : 22
module               : 0
names                : 6 7 27 28
next_state_info      : 86 86 86 86
next_state_relation  : 19
order                : 57
property_details     : 92
range_of_values      : 58
set_definition       : 15
set_individual_info  : 51 52
set_info             : 50 51
set_membership       : 34
set_scope            : 53
spec_definition      : 24
spec_info            : 99 99 99
statement            : 9 10
statements           : 1 2 9
termination_hypothesis : 23
termination_info     : 83 83
termination_statement : 18
theorem_definition   : 25
theorem_info         : 103 103 103 103 103
type_invariant       : 14
type_invariant_expression : 37
variables_statement  : 12

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements
    (2) module -> . MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements

    MODULE_WRAPPER  shift and go to state 2

    module                         shift and go to state 1

state 1

    (0) S' -> module .



state 2

    (1) module -> MODULE_WRAPPER . MODULE attribute MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER . MODULE attribute MODULE_WRAPPER statements

    MODULE          shift and go to state 3


state 3

    (1) module -> MODULE_WRAPPER MODULE . attribute MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER MODULE . attribute MODULE_WRAPPER statements
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 4

state 4

    (1) module -> MODULE_WRAPPER MODULE attribute . MODULE_WRAPPER extends statements
    (2) module -> MODULE_WRAPPER MODULE attribute . MODULE_WRAPPER statements

    MODULE_WRAPPER  shift and go to state 6


state 5

    (3) attribute -> ATTRIBUTE .

    MODULE_WRAPPER  reduce using rule 3 (attribute -> ATTRIBUTE .)
    EQUALS_DEFINITIONS reduce using rule 3 (attribute -> ATTRIBUTE .)
    EQUALS_EQUALITY reduce using rule 3 (attribute -> ATTRIBUTE .)
    COMMA           reduce using rule 3 (attribute -> ATTRIBUTE .)
    CONSTANTS       reduce using rule 3 (attribute -> ATTRIBUTE .)
    VARIABLES       reduce using rule 3 (attribute -> ATTRIBUTE .)
    ASSUME          reduce using rule 3 (attribute -> ATTRIBUTE .)
    EventuallyTerminates reduce using rule 3 (attribute -> ATTRIBUTE .)
    LoopInvariant   reduce using rule 3 (attribute -> ATTRIBUTE .)
    TerminationHypothesis reduce using rule 3 (attribute -> ATTRIBUTE .)
    SPEC            reduce using rule 3 (attribute -> ATTRIBUTE .)
    THEOREM         reduce using rule 3 (attribute -> ATTRIBUTE .)
    INIT            reduce using rule 3 (attribute -> ATTRIBUTE .)
    ATTRIBUTE       reduce using rule 3 (attribute -> ATTRIBUTE .)
    $end            reduce using rule 3 (attribute -> ATTRIBUTE .)
    IN_A_SET        reduce using rule 3 (attribute -> ATTRIBUTE .)
    DOT             reduce using rule 3 (attribute -> ATTRIBUTE .)
    GREATER_OR_EQ   reduce using rule 3 (attribute -> ATTRIBUTE .)
    LESS_OR_EQ      reduce using rule 3 (attribute -> ATTRIBUTE .)
    GREATER_THAN    reduce using rule 3 (attribute -> ATTRIBUTE .)
    LESS_THAN       reduce using rule 3 (attribute -> ATTRIBUTE .)
    PLUS            reduce using rule 3 (attribute -> ATTRIBUTE .)
    MINUS           reduce using rule 3 (attribute -> ATTRIBUTE .)
    STAR            reduce using rule 3 (attribute -> ATTRIBUTE .)
    DIVIDE          reduce using rule 3 (attribute -> ATTRIBUTE .)
    OR              reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_PAREN     reduce using rule 3 (attribute -> ATTRIBUTE .)
    MODULUS         reduce using rule 3 (attribute -> ATTRIBUTE .)
    AND             reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_SQR_BRACKET reduce using rule 3 (attribute -> ATTRIBUTE .)
    COLON           reduce using rule 3 (attribute -> ATTRIBUTE .)
    EXCEPT          reduce using rule 3 (attribute -> ATTRIBUTE .)
    RIGHT_BRACE     reduce using rule 3 (attribute -> ATTRIBUTE .)


state 6

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER . extends statements
    (2) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER . statements
    (6) extends -> . EXTENDS names
    (9) statements -> . statements statement
    (10) statements -> . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL
    (55) type_invariant -> . attribute equals expression
    (50) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (60) bean_value_count -> . attribute equals bean_equation
    (62) function_declaration -> . attribute equals AND function_info AND function_info except_section
    (63) function_declaration -> . attribute equals AND function_info AND function_info AND function_info except_section
    (83) termination_statement -> . attribute equals AND termination_info AND termination_info
    (86) next_state_relation -> . attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info
    (88) action_formula_definition -> . attribute equals action_formula
    (92) liveness_property -> . EventuallyTerminates equals property_details
    (94) loop_invariant -> . LoopInvariant equals action_formula
    (95) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (99) spec_definition -> . SPEC equals AND spec_info AND spec_info AND spec_info
    (103) theorem_definition -> . THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info
    (56) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    EXTENDS         shift and go to state 10
    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    extends                        shift and go to state 8
    statements                     shift and go to state 9
    statement                      shift and go to state 11
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 7

    (55) type_invariant -> attribute . equals expression
    (50) set_definition -> attribute . equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (60) bean_value_count -> attribute . equals bean_equation
    (62) function_declaration -> attribute . equals AND function_info AND function_info except_section
    (63) function_declaration -> attribute . equals AND function_info AND function_info AND function_info except_section
    (83) termination_statement -> attribute . equals AND termination_info AND termination_info
    (86) next_state_relation -> attribute . equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info
    (88) action_formula_definition -> attribute . equals action_formula
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 37

state 8

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends . statements
    (9) statements -> . statements statement
    (10) statements -> . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL
    (55) type_invariant -> . attribute equals expression
    (50) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (60) bean_value_count -> . attribute equals bean_equation
    (62) function_declaration -> . attribute equals AND function_info AND function_info except_section
    (63) function_declaration -> . attribute equals AND function_info AND function_info AND function_info except_section
    (83) termination_statement -> . attribute equals AND termination_info AND termination_info
    (86) next_state_relation -> . attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info
    (88) action_formula_definition -> . attribute equals action_formula
    (92) liveness_property -> . EventuallyTerminates equals property_details
    (94) loop_invariant -> . LoopInvariant equals action_formula
    (95) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (99) spec_definition -> . SPEC equals AND spec_info AND spec_info AND spec_info
    (103) theorem_definition -> . THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info
    (56) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statements                     shift and go to state 40
    statement                      shift and go to state 11
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 9

    (2) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements .
    (9) statements -> statements . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL
    (55) type_invariant -> . attribute equals expression
    (50) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (60) bean_value_count -> . attribute equals bean_equation
    (62) function_declaration -> . attribute equals AND function_info AND function_info except_section
    (63) function_declaration -> . attribute equals AND function_info AND function_info AND function_info except_section
    (83) termination_statement -> . attribute equals AND termination_info AND termination_info
    (86) next_state_relation -> . attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info
    (88) action_formula_definition -> . attribute equals action_formula
    (92) liveness_property -> . EventuallyTerminates equals property_details
    (94) loop_invariant -> . LoopInvariant equals action_formula
    (95) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (99) spec_definition -> . SPEC equals AND spec_info AND spec_info AND spec_info
    (103) theorem_definition -> . THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info
    (56) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    $end            reduce using rule 2 (module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements .)
    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statement                      shift and go to state 41
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 10

    (6) extends -> EXTENDS . names
    (7) names -> . names COMMA attribute
    (8) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 42
    attribute                      shift and go to state 43

state 11

    (10) statements -> statement .

    CONSTANTS       reduce using rule 10 (statements -> statement .)
    VARIABLES       reduce using rule 10 (statements -> statement .)
    ASSUME          reduce using rule 10 (statements -> statement .)
    EventuallyTerminates reduce using rule 10 (statements -> statement .)
    LoopInvariant   reduce using rule 10 (statements -> statement .)
    TerminationHypothesis reduce using rule 10 (statements -> statement .)
    SPEC            reduce using rule 10 (statements -> statement .)
    THEOREM         reduce using rule 10 (statements -> statement .)
    INIT            reduce using rule 10 (statements -> statement .)
    ATTRIBUTE       reduce using rule 10 (statements -> statement .)
    $end            reduce using rule 10 (statements -> statement .)


state 12

    (11) statement -> constants_statement .

    CONSTANTS       reduce using rule 11 (statement -> constants_statement .)
    VARIABLES       reduce using rule 11 (statement -> constants_statement .)
    ASSUME          reduce using rule 11 (statement -> constants_statement .)
    EventuallyTerminates reduce using rule 11 (statement -> constants_statement .)
    LoopInvariant   reduce using rule 11 (statement -> constants_statement .)
    TerminationHypothesis reduce using rule 11 (statement -> constants_statement .)
    SPEC            reduce using rule 11 (statement -> constants_statement .)
    THEOREM         reduce using rule 11 (statement -> constants_statement .)
    INIT            reduce using rule 11 (statement -> constants_statement .)
    ATTRIBUTE       reduce using rule 11 (statement -> constants_statement .)
    $end            reduce using rule 11 (statement -> constants_statement .)


state 13

    (12) statement -> variables_statement .

    CONSTANTS       reduce using rule 12 (statement -> variables_statement .)
    VARIABLES       reduce using rule 12 (statement -> variables_statement .)
    ASSUME          reduce using rule 12 (statement -> variables_statement .)
    EventuallyTerminates reduce using rule 12 (statement -> variables_statement .)
    LoopInvariant   reduce using rule 12 (statement -> variables_statement .)
    TerminationHypothesis reduce using rule 12 (statement -> variables_statement .)
    SPEC            reduce using rule 12 (statement -> variables_statement .)
    THEOREM         reduce using rule 12 (statement -> variables_statement .)
    INIT            reduce using rule 12 (statement -> variables_statement .)
    ATTRIBUTE       reduce using rule 12 (statement -> variables_statement .)
    $end            reduce using rule 12 (statement -> variables_statement .)


state 14

    (13) statement -> assume_statement .

    CONSTANTS       reduce using rule 13 (statement -> assume_statement .)
    VARIABLES       reduce using rule 13 (statement -> assume_statement .)
    ASSUME          reduce using rule 13 (statement -> assume_statement .)
    EventuallyTerminates reduce using rule 13 (statement -> assume_statement .)
    LoopInvariant   reduce using rule 13 (statement -> assume_statement .)
    TerminationHypothesis reduce using rule 13 (statement -> assume_statement .)
    SPEC            reduce using rule 13 (statement -> assume_statement .)
    THEOREM         reduce using rule 13 (statement -> assume_statement .)
    INIT            reduce using rule 13 (statement -> assume_statement .)
    ATTRIBUTE       reduce using rule 13 (statement -> assume_statement .)
    $end            reduce using rule 13 (statement -> assume_statement .)


state 15

    (14) statement -> type_invariant .

    CONSTANTS       reduce using rule 14 (statement -> type_invariant .)
    VARIABLES       reduce using rule 14 (statement -> type_invariant .)
    ASSUME          reduce using rule 14 (statement -> type_invariant .)
    EventuallyTerminates reduce using rule 14 (statement -> type_invariant .)
    LoopInvariant   reduce using rule 14 (statement -> type_invariant .)
    TerminationHypothesis reduce using rule 14 (statement -> type_invariant .)
    SPEC            reduce using rule 14 (statement -> type_invariant .)
    THEOREM         reduce using rule 14 (statement -> type_invariant .)
    INIT            reduce using rule 14 (statement -> type_invariant .)
    ATTRIBUTE       reduce using rule 14 (statement -> type_invariant .)
    $end            reduce using rule 14 (statement -> type_invariant .)


state 16

    (15) statement -> set_definition .

    CONSTANTS       reduce using rule 15 (statement -> set_definition .)
    VARIABLES       reduce using rule 15 (statement -> set_definition .)
    ASSUME          reduce using rule 15 (statement -> set_definition .)
    EventuallyTerminates reduce using rule 15 (statement -> set_definition .)
    LoopInvariant   reduce using rule 15 (statement -> set_definition .)
    TerminationHypothesis reduce using rule 15 (statement -> set_definition .)
    SPEC            reduce using rule 15 (statement -> set_definition .)
    THEOREM         reduce using rule 15 (statement -> set_definition .)
    INIT            reduce using rule 15 (statement -> set_definition .)
    ATTRIBUTE       reduce using rule 15 (statement -> set_definition .)
    $end            reduce using rule 15 (statement -> set_definition .)


state 17

    (16) statement -> bean_value_count .

    CONSTANTS       reduce using rule 16 (statement -> bean_value_count .)
    VARIABLES       reduce using rule 16 (statement -> bean_value_count .)
    ASSUME          reduce using rule 16 (statement -> bean_value_count .)
    EventuallyTerminates reduce using rule 16 (statement -> bean_value_count .)
    LoopInvariant   reduce using rule 16 (statement -> bean_value_count .)
    TerminationHypothesis reduce using rule 16 (statement -> bean_value_count .)
    SPEC            reduce using rule 16 (statement -> bean_value_count .)
    THEOREM         reduce using rule 16 (statement -> bean_value_count .)
    INIT            reduce using rule 16 (statement -> bean_value_count .)
    ATTRIBUTE       reduce using rule 16 (statement -> bean_value_count .)
    $end            reduce using rule 16 (statement -> bean_value_count .)


state 18

    (17) statement -> function_declaration .

    CONSTANTS       reduce using rule 17 (statement -> function_declaration .)
    VARIABLES       reduce using rule 17 (statement -> function_declaration .)
    ASSUME          reduce using rule 17 (statement -> function_declaration .)
    EventuallyTerminates reduce using rule 17 (statement -> function_declaration .)
    LoopInvariant   reduce using rule 17 (statement -> function_declaration .)
    TerminationHypothesis reduce using rule 17 (statement -> function_declaration .)
    SPEC            reduce using rule 17 (statement -> function_declaration .)
    THEOREM         reduce using rule 17 (statement -> function_declaration .)
    INIT            reduce using rule 17 (statement -> function_declaration .)
    ATTRIBUTE       reduce using rule 17 (statement -> function_declaration .)
    $end            reduce using rule 17 (statement -> function_declaration .)


state 19

    (18) statement -> termination_statement .

    CONSTANTS       reduce using rule 18 (statement -> termination_statement .)
    VARIABLES       reduce using rule 18 (statement -> termination_statement .)
    ASSUME          reduce using rule 18 (statement -> termination_statement .)
    EventuallyTerminates reduce using rule 18 (statement -> termination_statement .)
    LoopInvariant   reduce using rule 18 (statement -> termination_statement .)
    TerminationHypothesis reduce using rule 18 (statement -> termination_statement .)
    SPEC            reduce using rule 18 (statement -> termination_statement .)
    THEOREM         reduce using rule 18 (statement -> termination_statement .)
    INIT            reduce using rule 18 (statement -> termination_statement .)
    ATTRIBUTE       reduce using rule 18 (statement -> termination_statement .)
    $end            reduce using rule 18 (statement -> termination_statement .)


state 20

    (19) statement -> next_state_relation .

    CONSTANTS       reduce using rule 19 (statement -> next_state_relation .)
    VARIABLES       reduce using rule 19 (statement -> next_state_relation .)
    ASSUME          reduce using rule 19 (statement -> next_state_relation .)
    EventuallyTerminates reduce using rule 19 (statement -> next_state_relation .)
    LoopInvariant   reduce using rule 19 (statement -> next_state_relation .)
    TerminationHypothesis reduce using rule 19 (statement -> next_state_relation .)
    SPEC            reduce using rule 19 (statement -> next_state_relation .)
    THEOREM         reduce using rule 19 (statement -> next_state_relation .)
    INIT            reduce using rule 19 (statement -> next_state_relation .)
    ATTRIBUTE       reduce using rule 19 (statement -> next_state_relation .)
    $end            reduce using rule 19 (statement -> next_state_relation .)


state 21

    (20) statement -> action_formula_definition .

    CONSTANTS       reduce using rule 20 (statement -> action_formula_definition .)
    VARIABLES       reduce using rule 20 (statement -> action_formula_definition .)
    ASSUME          reduce using rule 20 (statement -> action_formula_definition .)
    EventuallyTerminates reduce using rule 20 (statement -> action_formula_definition .)
    LoopInvariant   reduce using rule 20 (statement -> action_formula_definition .)
    TerminationHypothesis reduce using rule 20 (statement -> action_formula_definition .)
    SPEC            reduce using rule 20 (statement -> action_formula_definition .)
    THEOREM         reduce using rule 20 (statement -> action_formula_definition .)
    INIT            reduce using rule 20 (statement -> action_formula_definition .)
    ATTRIBUTE       reduce using rule 20 (statement -> action_formula_definition .)
    $end            reduce using rule 20 (statement -> action_formula_definition .)


state 22

    (21) statement -> liveness_property .

    CONSTANTS       reduce using rule 21 (statement -> liveness_property .)
    VARIABLES       reduce using rule 21 (statement -> liveness_property .)
    ASSUME          reduce using rule 21 (statement -> liveness_property .)
    EventuallyTerminates reduce using rule 21 (statement -> liveness_property .)
    LoopInvariant   reduce using rule 21 (statement -> liveness_property .)
    TerminationHypothesis reduce using rule 21 (statement -> liveness_property .)
    SPEC            reduce using rule 21 (statement -> liveness_property .)
    THEOREM         reduce using rule 21 (statement -> liveness_property .)
    INIT            reduce using rule 21 (statement -> liveness_property .)
    ATTRIBUTE       reduce using rule 21 (statement -> liveness_property .)
    $end            reduce using rule 21 (statement -> liveness_property .)


state 23

    (22) statement -> loop_invariant .

    CONSTANTS       reduce using rule 22 (statement -> loop_invariant .)
    VARIABLES       reduce using rule 22 (statement -> loop_invariant .)
    ASSUME          reduce using rule 22 (statement -> loop_invariant .)
    EventuallyTerminates reduce using rule 22 (statement -> loop_invariant .)
    LoopInvariant   reduce using rule 22 (statement -> loop_invariant .)
    TerminationHypothesis reduce using rule 22 (statement -> loop_invariant .)
    SPEC            reduce using rule 22 (statement -> loop_invariant .)
    THEOREM         reduce using rule 22 (statement -> loop_invariant .)
    INIT            reduce using rule 22 (statement -> loop_invariant .)
    ATTRIBUTE       reduce using rule 22 (statement -> loop_invariant .)
    $end            reduce using rule 22 (statement -> loop_invariant .)


state 24

    (23) statement -> termination_hypothesis .

    CONSTANTS       reduce using rule 23 (statement -> termination_hypothesis .)
    VARIABLES       reduce using rule 23 (statement -> termination_hypothesis .)
    ASSUME          reduce using rule 23 (statement -> termination_hypothesis .)
    EventuallyTerminates reduce using rule 23 (statement -> termination_hypothesis .)
    LoopInvariant   reduce using rule 23 (statement -> termination_hypothesis .)
    TerminationHypothesis reduce using rule 23 (statement -> termination_hypothesis .)
    SPEC            reduce using rule 23 (statement -> termination_hypothesis .)
    THEOREM         reduce using rule 23 (statement -> termination_hypothesis .)
    INIT            reduce using rule 23 (statement -> termination_hypothesis .)
    ATTRIBUTE       reduce using rule 23 (statement -> termination_hypothesis .)
    $end            reduce using rule 23 (statement -> termination_hypothesis .)


state 25

    (24) statement -> spec_definition .

    CONSTANTS       reduce using rule 24 (statement -> spec_definition .)
    VARIABLES       reduce using rule 24 (statement -> spec_definition .)
    ASSUME          reduce using rule 24 (statement -> spec_definition .)
    EventuallyTerminates reduce using rule 24 (statement -> spec_definition .)
    LoopInvariant   reduce using rule 24 (statement -> spec_definition .)
    TerminationHypothesis reduce using rule 24 (statement -> spec_definition .)
    SPEC            reduce using rule 24 (statement -> spec_definition .)
    THEOREM         reduce using rule 24 (statement -> spec_definition .)
    INIT            reduce using rule 24 (statement -> spec_definition .)
    ATTRIBUTE       reduce using rule 24 (statement -> spec_definition .)
    $end            reduce using rule 24 (statement -> spec_definition .)


state 26

    (25) statement -> theorem_definition .

    CONSTANTS       reduce using rule 25 (statement -> theorem_definition .)
    VARIABLES       reduce using rule 25 (statement -> theorem_definition .)
    ASSUME          reduce using rule 25 (statement -> theorem_definition .)
    EventuallyTerminates reduce using rule 25 (statement -> theorem_definition .)
    LoopInvariant   reduce using rule 25 (statement -> theorem_definition .)
    TerminationHypothesis reduce using rule 25 (statement -> theorem_definition .)
    SPEC            reduce using rule 25 (statement -> theorem_definition .)
    THEOREM         reduce using rule 25 (statement -> theorem_definition .)
    INIT            reduce using rule 25 (statement -> theorem_definition .)
    ATTRIBUTE       reduce using rule 25 (statement -> theorem_definition .)
    $end            reduce using rule 25 (statement -> theorem_definition .)


state 27

    (26) statement -> init .

    CONSTANTS       reduce using rule 26 (statement -> init .)
    VARIABLES       reduce using rule 26 (statement -> init .)
    ASSUME          reduce using rule 26 (statement -> init .)
    EventuallyTerminates reduce using rule 26 (statement -> init .)
    LoopInvariant   reduce using rule 26 (statement -> init .)
    TerminationHypothesis reduce using rule 26 (statement -> init .)
    SPEC            reduce using rule 26 (statement -> init .)
    THEOREM         reduce using rule 26 (statement -> init .)
    INIT            reduce using rule 26 (statement -> init .)
    ATTRIBUTE       reduce using rule 26 (statement -> init .)
    $end            reduce using rule 26 (statement -> init .)


state 28

    (27) constants_statement -> CONSTANTS . names
    (7) names -> . names COMMA attribute
    (8) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 44
    attribute                      shift and go to state 43

state 29

    (28) variables_statement -> VARIABLES . names
    (7) names -> . names COMMA attribute
    (8) names -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    names                          shift and go to state 45
    attribute                      shift and go to state 43

state 30

    (29) assume_statement -> ASSUME . attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 46

state 31

    (92) liveness_property -> EventuallyTerminates . equals property_details
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 47

state 32

    (94) loop_invariant -> LoopInvariant . equals action_formula
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 48

state 33

    (95) termination_hypothesis -> TerminationHypothesis . equals conditional_statements
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 49

state 34

    (99) spec_definition -> SPEC . equals AND spec_info AND spec_info AND spec_info
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 50

state 35

    (103) theorem_definition -> THEOREM . SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info

    SPEC            shift and go to state 51


state 36

    (56) init -> INIT . equals attribute IN_A_SET init_set_statement
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 52

state 37

    (55) type_invariant -> attribute equals . expression
    (50) set_definition -> attribute equals . LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (60) bean_value_count -> attribute equals . bean_equation
    (62) function_declaration -> attribute equals . AND function_info AND function_info except_section
    (63) function_declaration -> attribute equals . AND function_info AND function_info AND function_info except_section
    (83) termination_statement -> attribute equals . AND termination_info AND termination_info
    (86) next_state_relation -> attribute equals . OR next_state_info OR next_state_info OR next_state_info OR next_state_info
    (88) action_formula_definition -> attribute equals . action_formula
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (61) bean_equation -> . dot_access PLUS dot_access
    (89) action_formula -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute

    LEFT_SQR_BRACKET shift and go to state 55
    AND             shift and go to state 57
    OR              shift and go to state 58
    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67

    attribute                      shift and go to state 53
    expression                     shift and go to state 54
    bean_equation                  shift and go to state 56
    action_formula                 shift and go to state 59
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    type_invariant_expression      shift and go to state 62
    dot_access                     shift and go to state 66

state 38

    (48) equals -> EQUALS_DEFINITIONS .

    LEFT_SQR_BRACKET reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    AND             reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    OR              reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    NUMBER_LITERAL  reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    STRING_LITERAL  reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    LEFT_PAREN      reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    ATTRIBUTE       reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    NEXT_VALUE_OF_ATTRIBUTE reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    EVENTUALLY      reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    IF              reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)
    AT              reduce using rule 48 (equals -> EQUALS_DEFINITIONS .)


state 39

    (49) equals -> EQUALS_EQUALITY .

    LEFT_SQR_BRACKET reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    AND             reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    OR              reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    NUMBER_LITERAL  reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    STRING_LITERAL  reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    LEFT_PAREN      reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    ATTRIBUTE       reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    NEXT_VALUE_OF_ATTRIBUTE reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    EVENTUALLY      reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    IF              reduce using rule 49 (equals -> EQUALS_EQUALITY .)
    AT              reduce using rule 49 (equals -> EQUALS_EQUALITY .)


state 40

    (1) module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements .
    (9) statements -> statements . statement
    (11) statement -> . constants_statement
    (12) statement -> . variables_statement
    (13) statement -> . assume_statement
    (14) statement -> . type_invariant
    (15) statement -> . set_definition
    (16) statement -> . bean_value_count
    (17) statement -> . function_declaration
    (18) statement -> . termination_statement
    (19) statement -> . next_state_relation
    (20) statement -> . action_formula_definition
    (21) statement -> . liveness_property
    (22) statement -> . loop_invariant
    (23) statement -> . termination_hypothesis
    (24) statement -> . spec_definition
    (25) statement -> . theorem_definition
    (26) statement -> . init
    (27) constants_statement -> . CONSTANTS names
    (28) variables_statement -> . VARIABLES names
    (29) assume_statement -> . ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL
    (55) type_invariant -> . attribute equals expression
    (50) set_definition -> . attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET
    (60) bean_value_count -> . attribute equals bean_equation
    (62) function_declaration -> . attribute equals AND function_info AND function_info except_section
    (63) function_declaration -> . attribute equals AND function_info AND function_info AND function_info except_section
    (83) termination_statement -> . attribute equals AND termination_info AND termination_info
    (86) next_state_relation -> . attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info
    (88) action_formula_definition -> . attribute equals action_formula
    (92) liveness_property -> . EventuallyTerminates equals property_details
    (94) loop_invariant -> . LoopInvariant equals action_formula
    (95) termination_hypothesis -> . TerminationHypothesis equals conditional_statements
    (99) spec_definition -> . SPEC equals AND spec_info AND spec_info AND spec_info
    (103) theorem_definition -> . THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info
    (56) init -> . INIT equals attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    $end            reduce using rule 1 (module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements .)
    CONSTANTS       shift and go to state 28
    VARIABLES       shift and go to state 29
    ASSUME          shift and go to state 30
    EventuallyTerminates shift and go to state 31
    LoopInvariant   shift and go to state 32
    TerminationHypothesis shift and go to state 33
    SPEC            shift and go to state 34
    THEOREM         shift and go to state 35
    INIT            shift and go to state 36
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 7
    statement                      shift and go to state 41
    constants_statement            shift and go to state 12
    variables_statement            shift and go to state 13
    assume_statement               shift and go to state 14
    type_invariant                 shift and go to state 15
    set_definition                 shift and go to state 16
    bean_value_count               shift and go to state 17
    function_declaration           shift and go to state 18
    termination_statement          shift and go to state 19
    next_state_relation            shift and go to state 20
    action_formula_definition      shift and go to state 21
    liveness_property              shift and go to state 22
    loop_invariant                 shift and go to state 23
    termination_hypothesis         shift and go to state 24
    spec_definition                shift and go to state 25
    theorem_definition             shift and go to state 26
    init                           shift and go to state 27

state 41

    (9) statements -> statements statement .

    CONSTANTS       reduce using rule 9 (statements -> statements statement .)
    VARIABLES       reduce using rule 9 (statements -> statements statement .)
    ASSUME          reduce using rule 9 (statements -> statements statement .)
    EventuallyTerminates reduce using rule 9 (statements -> statements statement .)
    LoopInvariant   reduce using rule 9 (statements -> statements statement .)
    TerminationHypothesis reduce using rule 9 (statements -> statements statement .)
    SPEC            reduce using rule 9 (statements -> statements statement .)
    THEOREM         reduce using rule 9 (statements -> statements statement .)
    INIT            reduce using rule 9 (statements -> statements statement .)
    ATTRIBUTE       reduce using rule 9 (statements -> statements statement .)
    $end            reduce using rule 9 (statements -> statements statement .)


state 42

    (6) extends -> EXTENDS names .
    (7) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 6 (extends -> EXTENDS names .)
    VARIABLES       reduce using rule 6 (extends -> EXTENDS names .)
    ASSUME          reduce using rule 6 (extends -> EXTENDS names .)
    EventuallyTerminates reduce using rule 6 (extends -> EXTENDS names .)
    LoopInvariant   reduce using rule 6 (extends -> EXTENDS names .)
    TerminationHypothesis reduce using rule 6 (extends -> EXTENDS names .)
    SPEC            reduce using rule 6 (extends -> EXTENDS names .)
    THEOREM         reduce using rule 6 (extends -> EXTENDS names .)
    INIT            reduce using rule 6 (extends -> EXTENDS names .)
    ATTRIBUTE       reduce using rule 6 (extends -> EXTENDS names .)
    COMMA           shift and go to state 68


state 43

    (8) names -> attribute .

    COMMA           reduce using rule 8 (names -> attribute .)
    CONSTANTS       reduce using rule 8 (names -> attribute .)
    VARIABLES       reduce using rule 8 (names -> attribute .)
    ASSUME          reduce using rule 8 (names -> attribute .)
    EventuallyTerminates reduce using rule 8 (names -> attribute .)
    LoopInvariant   reduce using rule 8 (names -> attribute .)
    TerminationHypothesis reduce using rule 8 (names -> attribute .)
    SPEC            reduce using rule 8 (names -> attribute .)
    THEOREM         reduce using rule 8 (names -> attribute .)
    INIT            reduce using rule 8 (names -> attribute .)
    ATTRIBUTE       reduce using rule 8 (names -> attribute .)
    $end            reduce using rule 8 (names -> attribute .)


state 44

    (27) constants_statement -> CONSTANTS names .
    (7) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 27 (constants_statement -> CONSTANTS names .)
    VARIABLES       reduce using rule 27 (constants_statement -> CONSTANTS names .)
    ASSUME          reduce using rule 27 (constants_statement -> CONSTANTS names .)
    EventuallyTerminates reduce using rule 27 (constants_statement -> CONSTANTS names .)
    LoopInvariant   reduce using rule 27 (constants_statement -> CONSTANTS names .)
    TerminationHypothesis reduce using rule 27 (constants_statement -> CONSTANTS names .)
    SPEC            reduce using rule 27 (constants_statement -> CONSTANTS names .)
    THEOREM         reduce using rule 27 (constants_statement -> CONSTANTS names .)
    INIT            reduce using rule 27 (constants_statement -> CONSTANTS names .)
    ATTRIBUTE       reduce using rule 27 (constants_statement -> CONSTANTS names .)
    $end            reduce using rule 27 (constants_statement -> CONSTANTS names .)
    COMMA           shift and go to state 68


state 45

    (28) variables_statement -> VARIABLES names .
    (7) names -> names . COMMA attribute

    CONSTANTS       reduce using rule 28 (variables_statement -> VARIABLES names .)
    VARIABLES       reduce using rule 28 (variables_statement -> VARIABLES names .)
    ASSUME          reduce using rule 28 (variables_statement -> VARIABLES names .)
    EventuallyTerminates reduce using rule 28 (variables_statement -> VARIABLES names .)
    LoopInvariant   reduce using rule 28 (variables_statement -> VARIABLES names .)
    TerminationHypothesis reduce using rule 28 (variables_statement -> VARIABLES names .)
    SPEC            reduce using rule 28 (variables_statement -> VARIABLES names .)
    THEOREM         reduce using rule 28 (variables_statement -> VARIABLES names .)
    INIT            reduce using rule 28 (variables_statement -> VARIABLES names .)
    ATTRIBUTE       reduce using rule 28 (variables_statement -> VARIABLES names .)
    $end            reduce using rule 28 (variables_statement -> VARIABLES names .)
    COMMA           shift and go to state 68


state 46

    (29) assume_statement -> ASSUME attribute . IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL

    IN_A_SET        shift and go to state 69


state 47

    (92) liveness_property -> EventuallyTerminates equals . property_details
    (93) property_details -> . EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN

    EVENTUALLY      shift and go to state 71

    property_details               shift and go to state 70

state 48

    (94) loop_invariant -> LoopInvariant equals . action_formula
    (89) action_formula -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 73

    action_formula                 shift and go to state 72

state 49

    (95) termination_hypothesis -> TerminationHypothesis equals . conditional_statements
    (96) conditional_statements -> . IF conditional_statement THEN conditional_statement ELSE conditional_statement

    IF              shift and go to state 75

    conditional_statements         shift and go to state 74

state 50

    (99) spec_definition -> SPEC equals . AND spec_info AND spec_info AND spec_info

    AND             shift and go to state 76


state 51

    (103) theorem_definition -> THEOREM SPEC . IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info

    IMPLIES         shift and go to state 77


state 52

    (56) init -> INIT equals . attribute IN_A_SET init_set_statement
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 78

state 53

    (36) expression -> attribute .
    (47) set_membership -> attribute . IN_A_SET Nat
    (41) comparison -> attribute . comparison_rule NUMBER_LITERAL
    (42) comparison -> attribute . comparison_rule attribute
    (40) type_invariant_expression -> attribute . IN_A_SET attribute
    (4) dot_access -> attribute . DOT attribute
    (43) comparison_rule -> . GREATER_OR_EQ
    (44) comparison_rule -> . LESS_OR_EQ
    (45) comparison_rule -> . GREATER_THAN
    (46) comparison_rule -> . LESS_THAN

    PLUS            reduce using rule 36 (expression -> attribute .)
    MINUS           reduce using rule 36 (expression -> attribute .)
    STAR            reduce using rule 36 (expression -> attribute .)
    DIVIDE          reduce using rule 36 (expression -> attribute .)
    CONSTANTS       reduce using rule 36 (expression -> attribute .)
    VARIABLES       reduce using rule 36 (expression -> attribute .)
    ASSUME          reduce using rule 36 (expression -> attribute .)
    EventuallyTerminates reduce using rule 36 (expression -> attribute .)
    LoopInvariant   reduce using rule 36 (expression -> attribute .)
    TerminationHypothesis reduce using rule 36 (expression -> attribute .)
    SPEC            reduce using rule 36 (expression -> attribute .)
    THEOREM         reduce using rule 36 (expression -> attribute .)
    INIT            reduce using rule 36 (expression -> attribute .)
    ATTRIBUTE       reduce using rule 36 (expression -> attribute .)
    $end            reduce using rule 36 (expression -> attribute .)
    IN_A_SET        shift and go to state 79
    DOT             shift and go to state 81
    GREATER_OR_EQ   shift and go to state 82
    LESS_OR_EQ      shift and go to state 83
    GREATER_THAN    shift and go to state 84
    LESS_THAN       shift and go to state 85

    comparison_rule                shift and go to state 80

state 54

    (55) type_invariant -> attribute equals expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    CONSTANTS       reduce using rule 55 (type_invariant -> attribute equals expression .)
    VARIABLES       reduce using rule 55 (type_invariant -> attribute equals expression .)
    ASSUME          reduce using rule 55 (type_invariant -> attribute equals expression .)
    EventuallyTerminates reduce using rule 55 (type_invariant -> attribute equals expression .)
    LoopInvariant   reduce using rule 55 (type_invariant -> attribute equals expression .)
    TerminationHypothesis reduce using rule 55 (type_invariant -> attribute equals expression .)
    SPEC            reduce using rule 55 (type_invariant -> attribute equals expression .)
    THEOREM         reduce using rule 55 (type_invariant -> attribute equals expression .)
    INIT            reduce using rule 55 (type_invariant -> attribute equals expression .)
    ATTRIBUTE       reduce using rule 55 (type_invariant -> attribute equals expression .)
    $end            reduce using rule 55 (type_invariant -> attribute equals expression .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    STAR            shift and go to state 88
    DIVIDE          shift and go to state 89


state 55

    (50) set_definition -> attribute equals LEFT_SQR_BRACKET . set_info RIGHT_SQR_BRACKET
    (89) action_formula -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (51) set_info -> . set_info COMMA set_individual_info
    (52) set_info -> . set_individual_info
    (53) set_individual_info -> . ATTRIBUTE COLON set_scope

    RIGHT_SQR_BRACKET shift and go to state 91
    ATTRIBUTE       shift and go to state 93

    set_info                       shift and go to state 90
    set_individual_info            shift and go to state 92

state 56

    (60) bean_value_count -> attribute equals bean_equation .

    CONSTANTS       reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    VARIABLES       reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    ASSUME          reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    EventuallyTerminates reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    LoopInvariant   reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    TerminationHypothesis reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    SPEC            reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    THEOREM         reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    INIT            reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    ATTRIBUTE       reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)
    $end            reduce using rule 60 (bean_value_count -> attribute equals bean_equation .)


state 57

    (62) function_declaration -> attribute equals AND . function_info AND function_info except_section
    (63) function_declaration -> attribute equals AND . function_info AND function_info AND function_info except_section
    (83) termination_statement -> attribute equals AND . termination_info AND termination_info
    (64) function_info -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (65) function_info -> . attribute comparison_rule NUMBER_LITERAL
    (84) termination_info -> . attribute equals NUMBER_LITERAL
    (85) termination_info -> . UNCHANGED attribute
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 97
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 94
    function_info                  shift and go to state 95
    termination_info               shift and go to state 96

state 58

    (86) next_state_relation -> attribute equals OR . next_state_info OR next_state_info OR next_state_info OR next_state_info
    (87) next_state_info -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 98
    next_state_info                shift and go to state 99

state 59

    (88) action_formula_definition -> attribute equals action_formula .

    CONSTANTS       reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    VARIABLES       reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    ASSUME          reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    EventuallyTerminates reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    LoopInvariant   reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    TerminationHypothesis reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    SPEC            reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    THEOREM         reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    INIT            reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    ATTRIBUTE       reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)
    $end            reduce using rule 88 (action_formula_definition -> attribute equals action_formula .)


state 60

    (34) expression -> set_membership .

    PLUS            reduce using rule 34 (expression -> set_membership .)
    MINUS           reduce using rule 34 (expression -> set_membership .)
    STAR            reduce using rule 34 (expression -> set_membership .)
    DIVIDE          reduce using rule 34 (expression -> set_membership .)
    CONSTANTS       reduce using rule 34 (expression -> set_membership .)
    VARIABLES       reduce using rule 34 (expression -> set_membership .)
    ASSUME          reduce using rule 34 (expression -> set_membership .)
    EventuallyTerminates reduce using rule 34 (expression -> set_membership .)
    LoopInvariant   reduce using rule 34 (expression -> set_membership .)
    TerminationHypothesis reduce using rule 34 (expression -> set_membership .)
    SPEC            reduce using rule 34 (expression -> set_membership .)
    THEOREM         reduce using rule 34 (expression -> set_membership .)
    INIT            reduce using rule 34 (expression -> set_membership .)
    ATTRIBUTE       reduce using rule 34 (expression -> set_membership .)
    $end            reduce using rule 34 (expression -> set_membership .)
    RIGHT_PAREN     reduce using rule 34 (expression -> set_membership .)
    EQUALS_DEFINITIONS reduce using rule 34 (expression -> set_membership .)
    EQUALS_EQUALITY reduce using rule 34 (expression -> set_membership .)


state 61

    (35) expression -> comparison .

    PLUS            reduce using rule 35 (expression -> comparison .)
    MINUS           reduce using rule 35 (expression -> comparison .)
    STAR            reduce using rule 35 (expression -> comparison .)
    DIVIDE          reduce using rule 35 (expression -> comparison .)
    CONSTANTS       reduce using rule 35 (expression -> comparison .)
    VARIABLES       reduce using rule 35 (expression -> comparison .)
    ASSUME          reduce using rule 35 (expression -> comparison .)
    EventuallyTerminates reduce using rule 35 (expression -> comparison .)
    LoopInvariant   reduce using rule 35 (expression -> comparison .)
    TerminationHypothesis reduce using rule 35 (expression -> comparison .)
    SPEC            reduce using rule 35 (expression -> comparison .)
    THEOREM         reduce using rule 35 (expression -> comparison .)
    INIT            reduce using rule 35 (expression -> comparison .)
    ATTRIBUTE       reduce using rule 35 (expression -> comparison .)
    $end            reduce using rule 35 (expression -> comparison .)
    RIGHT_PAREN     reduce using rule 35 (expression -> comparison .)
    EQUALS_DEFINITIONS reduce using rule 35 (expression -> comparison .)
    EQUALS_EQUALITY reduce using rule 35 (expression -> comparison .)


state 62

    (37) expression -> type_invariant_expression .

    PLUS            reduce using rule 37 (expression -> type_invariant_expression .)
    MINUS           reduce using rule 37 (expression -> type_invariant_expression .)
    STAR            reduce using rule 37 (expression -> type_invariant_expression .)
    DIVIDE          reduce using rule 37 (expression -> type_invariant_expression .)
    CONSTANTS       reduce using rule 37 (expression -> type_invariant_expression .)
    VARIABLES       reduce using rule 37 (expression -> type_invariant_expression .)
    ASSUME          reduce using rule 37 (expression -> type_invariant_expression .)
    EventuallyTerminates reduce using rule 37 (expression -> type_invariant_expression .)
    LoopInvariant   reduce using rule 37 (expression -> type_invariant_expression .)
    TerminationHypothesis reduce using rule 37 (expression -> type_invariant_expression .)
    SPEC            reduce using rule 37 (expression -> type_invariant_expression .)
    THEOREM         reduce using rule 37 (expression -> type_invariant_expression .)
    INIT            reduce using rule 37 (expression -> type_invariant_expression .)
    ATTRIBUTE       reduce using rule 37 (expression -> type_invariant_expression .)
    $end            reduce using rule 37 (expression -> type_invariant_expression .)
    RIGHT_PAREN     reduce using rule 37 (expression -> type_invariant_expression .)
    EQUALS_DEFINITIONS reduce using rule 37 (expression -> type_invariant_expression .)
    EQUALS_EQUALITY reduce using rule 37 (expression -> type_invariant_expression .)


state 63

    (38) expression -> NUMBER_LITERAL .

    PLUS            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    MINUS           reduce using rule 38 (expression -> NUMBER_LITERAL .)
    STAR            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    DIVIDE          reduce using rule 38 (expression -> NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 38 (expression -> NUMBER_LITERAL .)
    VARIABLES       reduce using rule 38 (expression -> NUMBER_LITERAL .)
    ASSUME          reduce using rule 38 (expression -> NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 38 (expression -> NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 38 (expression -> NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 38 (expression -> NUMBER_LITERAL .)
    SPEC            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    THEOREM         reduce using rule 38 (expression -> NUMBER_LITERAL .)
    INIT            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 38 (expression -> NUMBER_LITERAL .)
    $end            reduce using rule 38 (expression -> NUMBER_LITERAL .)
    RIGHT_PAREN     reduce using rule 38 (expression -> NUMBER_LITERAL .)
    EQUALS_DEFINITIONS reduce using rule 38 (expression -> NUMBER_LITERAL .)
    EQUALS_EQUALITY reduce using rule 38 (expression -> NUMBER_LITERAL .)


state 64

    (39) expression -> STRING_LITERAL .

    PLUS            reduce using rule 39 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 39 (expression -> STRING_LITERAL .)
    STAR            reduce using rule 39 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 39 (expression -> STRING_LITERAL .)
    CONSTANTS       reduce using rule 39 (expression -> STRING_LITERAL .)
    VARIABLES       reduce using rule 39 (expression -> STRING_LITERAL .)
    ASSUME          reduce using rule 39 (expression -> STRING_LITERAL .)
    EventuallyTerminates reduce using rule 39 (expression -> STRING_LITERAL .)
    LoopInvariant   reduce using rule 39 (expression -> STRING_LITERAL .)
    TerminationHypothesis reduce using rule 39 (expression -> STRING_LITERAL .)
    SPEC            reduce using rule 39 (expression -> STRING_LITERAL .)
    THEOREM         reduce using rule 39 (expression -> STRING_LITERAL .)
    INIT            reduce using rule 39 (expression -> STRING_LITERAL .)
    ATTRIBUTE       reduce using rule 39 (expression -> STRING_LITERAL .)
    $end            reduce using rule 39 (expression -> STRING_LITERAL .)
    RIGHT_PAREN     reduce using rule 39 (expression -> STRING_LITERAL .)
    EQUALS_DEFINITIONS reduce using rule 39 (expression -> STRING_LITERAL .)
    EQUALS_EQUALITY reduce using rule 39 (expression -> STRING_LITERAL .)


state 65

    (108) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 100
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 66

    (61) bean_equation -> dot_access . PLUS dot_access

    PLUS            shift and go to state 102


state 67

    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE . DOT attribute

    DOT             shift and go to state 103


state 68

    (7) names -> names COMMA . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 104

state 69

    (29) assume_statement -> ASSUME attribute IN_A_SET . Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL

    Nat             shift and go to state 105


state 70

    (92) liveness_property -> EventuallyTerminates equals property_details .

    CONSTANTS       reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    VARIABLES       reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    ASSUME          reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    EventuallyTerminates reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    LoopInvariant   reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    TerminationHypothesis reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    SPEC            reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    THEOREM         reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    INIT            reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    ATTRIBUTE       reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)
    $end            reduce using rule 92 (liveness_property -> EventuallyTerminates equals property_details .)


state 71

    (93) property_details -> EVENTUALLY . LEFT_PAREN ENABLED attribute RIGHT_PAREN

    LEFT_PAREN      shift and go to state 106


state 72

    (94) loop_invariant -> LoopInvariant equals action_formula .

    CONSTANTS       reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    VARIABLES       reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    ASSUME          reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    EventuallyTerminates reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    LoopInvariant   reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    TerminationHypothesis reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    SPEC            reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    THEOREM         reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    INIT            reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    ATTRIBUTE       reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)
    $end            reduce using rule 94 (loop_invariant -> LoopInvariant equals action_formula .)


state 73

    (89) action_formula -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 91


state 74

    (95) termination_hypothesis -> TerminationHypothesis equals conditional_statements .

    CONSTANTS       reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    VARIABLES       reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    ASSUME          reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    EventuallyTerminates reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    LoopInvariant   reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    TerminationHypothesis reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    SPEC            reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    THEOREM         reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    INIT            reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    ATTRIBUTE       reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)
    $end            reduce using rule 95 (termination_hypothesis -> TerminationHypothesis equals conditional_statements .)


state 75

    (96) conditional_statements -> IF . conditional_statement THEN conditional_statement ELSE conditional_statement
    (97) conditional_statement -> . dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
    (98) conditional_statement -> . EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    EVENTUALLY      shift and go to state 109
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    conditional_statement          shift and go to state 107
    dot_access                     shift and go to state 108
    attribute                      shift and go to state 110

state 76

    (99) spec_definition -> SPEC equals AND . spec_info AND spec_info AND spec_info
    (100) spec_info -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (101) spec_info -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (102) spec_info -> . INIT

    LEFT_SQR_BRACKET shift and go to state 112
    WEAK_FAIRNESS   shift and go to state 113
    INIT            shift and go to state 114

    spec_info                      shift and go to state 111

state 77

    (103) theorem_definition -> THEOREM SPEC IMPLIES . AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info

    AND             shift and go to state 115


state 78

    (56) init -> INIT equals attribute . IN_A_SET init_set_statement

    IN_A_SET        shift and go to state 116


state 79

    (47) set_membership -> attribute IN_A_SET . Nat
    (40) type_invariant_expression -> attribute IN_A_SET . attribute
    (3) attribute -> . ATTRIBUTE

    Nat             shift and go to state 118
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 117

state 80

    (41) comparison -> attribute comparison_rule . NUMBER_LITERAL
    (42) comparison -> attribute comparison_rule . attribute
    (3) attribute -> . ATTRIBUTE

    NUMBER_LITERAL  shift and go to state 120
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 119

state 81

    (4) dot_access -> attribute DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 121

state 82

    (43) comparison_rule -> GREATER_OR_EQ .

    NUMBER_LITERAL  reduce using rule 43 (comparison_rule -> GREATER_OR_EQ .)
    ATTRIBUTE       reduce using rule 43 (comparison_rule -> GREATER_OR_EQ .)


state 83

    (44) comparison_rule -> LESS_OR_EQ .

    NUMBER_LITERAL  reduce using rule 44 (comparison_rule -> LESS_OR_EQ .)
    ATTRIBUTE       reduce using rule 44 (comparison_rule -> LESS_OR_EQ .)


state 84

    (45) comparison_rule -> GREATER_THAN .

    NUMBER_LITERAL  reduce using rule 45 (comparison_rule -> GREATER_THAN .)
    ATTRIBUTE       reduce using rule 45 (comparison_rule -> GREATER_THAN .)


state 85

    (46) comparison_rule -> LESS_THAN .

    NUMBER_LITERAL  reduce using rule 46 (comparison_rule -> LESS_THAN .)
    ATTRIBUTE       reduce using rule 46 (comparison_rule -> LESS_THAN .)


state 86

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 122
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 87

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 123
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 88

    (32) expression -> expression STAR . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 124
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 89

    (33) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 125
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 90

    (50) set_definition -> attribute equals LEFT_SQR_BRACKET set_info . RIGHT_SQR_BRACKET
    (51) set_info -> set_info . COMMA set_individual_info

    RIGHT_SQR_BRACKET shift and go to state 126
    COMMA           shift and go to state 127


state 91

    (89) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET . LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 128


state 92

    (52) set_info -> set_individual_info .

    RIGHT_SQR_BRACKET reduce using rule 52 (set_info -> set_individual_info .)
    COMMA           reduce using rule 52 (set_info -> set_individual_info .)


state 93

    (53) set_individual_info -> ATTRIBUTE . COLON set_scope

    COLON           shift and go to state 129


state 94

    (64) function_info -> attribute . DOT attribute comparison_rule NUMBER_LITERAL
    (65) function_info -> attribute . comparison_rule NUMBER_LITERAL
    (84) termination_info -> attribute . equals NUMBER_LITERAL
    (43) comparison_rule -> . GREATER_OR_EQ
    (44) comparison_rule -> . LESS_OR_EQ
    (45) comparison_rule -> . GREATER_THAN
    (46) comparison_rule -> . LESS_THAN
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    DOT             shift and go to state 130
    GREATER_OR_EQ   shift and go to state 82
    LESS_OR_EQ      shift and go to state 83
    GREATER_THAN    shift and go to state 84
    LESS_THAN       shift and go to state 85
    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    comparison_rule                shift and go to state 131
    equals                         shift and go to state 132

state 95

    (62) function_declaration -> attribute equals AND function_info . AND function_info except_section
    (63) function_declaration -> attribute equals AND function_info . AND function_info AND function_info except_section

    AND             shift and go to state 133


state 96

    (83) termination_statement -> attribute equals AND termination_info . AND termination_info

    AND             shift and go to state 134


state 97

    (85) termination_info -> UNCHANGED . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 135

state 98

    (87) next_state_info -> attribute .

    OR              reduce using rule 87 (next_state_info -> attribute .)
    CONSTANTS       reduce using rule 87 (next_state_info -> attribute .)
    VARIABLES       reduce using rule 87 (next_state_info -> attribute .)
    ASSUME          reduce using rule 87 (next_state_info -> attribute .)
    EventuallyTerminates reduce using rule 87 (next_state_info -> attribute .)
    LoopInvariant   reduce using rule 87 (next_state_info -> attribute .)
    TerminationHypothesis reduce using rule 87 (next_state_info -> attribute .)
    SPEC            reduce using rule 87 (next_state_info -> attribute .)
    THEOREM         reduce using rule 87 (next_state_info -> attribute .)
    INIT            reduce using rule 87 (next_state_info -> attribute .)
    ATTRIBUTE       reduce using rule 87 (next_state_info -> attribute .)
    $end            reduce using rule 87 (next_state_info -> attribute .)


state 99

    (86) next_state_relation -> attribute equals OR next_state_info . OR next_state_info OR next_state_info OR next_state_info

    OR              shift and go to state 136


state 100

    (108) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    RIGHT_PAREN     shift and go to state 137
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    STAR            shift and go to state 88
    DIVIDE          shift and go to state 89


state 101

    (36) expression -> attribute .
    (47) set_membership -> attribute . IN_A_SET Nat
    (41) comparison -> attribute . comparison_rule NUMBER_LITERAL
    (42) comparison -> attribute . comparison_rule attribute
    (40) type_invariant_expression -> attribute . IN_A_SET attribute
    (43) comparison_rule -> . GREATER_OR_EQ
    (44) comparison_rule -> . LESS_OR_EQ
    (45) comparison_rule -> . GREATER_THAN
    (46) comparison_rule -> . LESS_THAN

    RIGHT_PAREN     reduce using rule 36 (expression -> attribute .)
    PLUS            reduce using rule 36 (expression -> attribute .)
    MINUS           reduce using rule 36 (expression -> attribute .)
    STAR            reduce using rule 36 (expression -> attribute .)
    DIVIDE          reduce using rule 36 (expression -> attribute .)
    CONSTANTS       reduce using rule 36 (expression -> attribute .)
    VARIABLES       reduce using rule 36 (expression -> attribute .)
    ASSUME          reduce using rule 36 (expression -> attribute .)
    EventuallyTerminates reduce using rule 36 (expression -> attribute .)
    LoopInvariant   reduce using rule 36 (expression -> attribute .)
    TerminationHypothesis reduce using rule 36 (expression -> attribute .)
    SPEC            reduce using rule 36 (expression -> attribute .)
    THEOREM         reduce using rule 36 (expression -> attribute .)
    INIT            reduce using rule 36 (expression -> attribute .)
    ATTRIBUTE       reduce using rule 36 (expression -> attribute .)
    $end            reduce using rule 36 (expression -> attribute .)
    EQUALS_DEFINITIONS reduce using rule 36 (expression -> attribute .)
    EQUALS_EQUALITY reduce using rule 36 (expression -> attribute .)
    IN_A_SET        shift and go to state 79
    GREATER_OR_EQ   shift and go to state 82
    LESS_OR_EQ      shift and go to state 83
    GREATER_THAN    shift and go to state 84
    LESS_THAN       shift and go to state 85

    comparison_rule                shift and go to state 80

state 102

    (61) bean_equation -> dot_access PLUS . dot_access
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 138
    attribute                      shift and go to state 110

state 103

    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 139

state 104

    (7) names -> names COMMA attribute .

    COMMA           reduce using rule 7 (names -> names COMMA attribute .)
    CONSTANTS       reduce using rule 7 (names -> names COMMA attribute .)
    VARIABLES       reduce using rule 7 (names -> names COMMA attribute .)
    ASSUME          reduce using rule 7 (names -> names COMMA attribute .)
    EventuallyTerminates reduce using rule 7 (names -> names COMMA attribute .)
    LoopInvariant   reduce using rule 7 (names -> names COMMA attribute .)
    TerminationHypothesis reduce using rule 7 (names -> names COMMA attribute .)
    SPEC            reduce using rule 7 (names -> names COMMA attribute .)
    THEOREM         reduce using rule 7 (names -> names COMMA attribute .)
    INIT            reduce using rule 7 (names -> names COMMA attribute .)
    ATTRIBUTE       reduce using rule 7 (names -> names COMMA attribute .)
    $end            reduce using rule 7 (names -> names COMMA attribute .)


state 105

    (29) assume_statement -> ASSUME attribute IN_A_SET Nat . AND attribute GREATER_OR_EQ NUMBER_LITERAL

    AND             shift and go to state 140


state 106

    (93) property_details -> EVENTUALLY LEFT_PAREN . ENABLED attribute RIGHT_PAREN

    ENABLED         shift and go to state 141


state 107

    (96) conditional_statements -> IF conditional_statement . THEN conditional_statement ELSE conditional_statement

    THEN            shift and go to state 142


state 108

    (97) conditional_statement -> dot_access . MODULUS NUMBER_LITERAL equals NUMBER_LITERAL

    MODULUS         shift and go to state 143


state 109

    (98) conditional_statement -> EVENTUALLY . LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN

    LEFT_PAREN      shift and go to state 144


state 110

    (4) dot_access -> attribute . DOT attribute

    DOT             shift and go to state 81


state 111

    (99) spec_definition -> SPEC equals AND spec_info . AND spec_info AND spec_info

    AND             shift and go to state 145


state 112

    (100) spec_info -> LEFT_SQR_BRACKET . RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 146


state 113

    (101) spec_info -> WEAK_FAIRNESS . ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN

    ATTRIBUTE_MAY_CHANGE shift and go to state 147


state 114

    (102) spec_info -> INIT .

    AND             reduce using rule 102 (spec_info -> INIT .)
    CONSTANTS       reduce using rule 102 (spec_info -> INIT .)
    VARIABLES       reduce using rule 102 (spec_info -> INIT .)
    ASSUME          reduce using rule 102 (spec_info -> INIT .)
    EventuallyTerminates reduce using rule 102 (spec_info -> INIT .)
    LoopInvariant   reduce using rule 102 (spec_info -> INIT .)
    TerminationHypothesis reduce using rule 102 (spec_info -> INIT .)
    SPEC            reduce using rule 102 (spec_info -> INIT .)
    THEOREM         reduce using rule 102 (spec_info -> INIT .)
    INIT            reduce using rule 102 (spec_info -> INIT .)
    ATTRIBUTE       reduce using rule 102 (spec_info -> INIT .)
    $end            reduce using rule 102 (spec_info -> INIT .)


state 115

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND . theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info
    (104) theorem_info -> . EventuallyTerminates
    (105) theorem_info -> . attribute
    (106) theorem_info -> . LoopInvariant
    (107) theorem_info -> . TerminationHypothesis
    (3) attribute -> . ATTRIBUTE

    EventuallyTerminates shift and go to state 149
    LoopInvariant   shift and go to state 151
    TerminationHypothesis shift and go to state 152
    ATTRIBUTE       shift and go to state 5

    theorem_info                   shift and go to state 148
    attribute                      shift and go to state 150

state 116

    (56) init -> INIT equals attribute IN_A_SET . init_set_statement
    (57) init_set_statement -> . LEFT_BRACE attribute IN_A_SET attribute COLON order

    LEFT_BRACE      shift and go to state 154

    init_set_statement             shift and go to state 153

state 117

    (40) type_invariant_expression -> attribute IN_A_SET attribute .

    PLUS            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    MINUS           reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    STAR            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    DIVIDE          reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    CONSTANTS       reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    VARIABLES       reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    ASSUME          reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    EventuallyTerminates reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    LoopInvariant   reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    TerminationHypothesis reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    SPEC            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    THEOREM         reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    INIT            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    ATTRIBUTE       reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    $end            reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    RIGHT_PAREN     reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    EQUALS_DEFINITIONS reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)
    EQUALS_EQUALITY reduce using rule 40 (type_invariant_expression -> attribute IN_A_SET attribute .)


state 118

    (47) set_membership -> attribute IN_A_SET Nat .

    PLUS            reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    MINUS           reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    STAR            reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    DIVIDE          reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    CONSTANTS       reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    VARIABLES       reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    ASSUME          reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    EventuallyTerminates reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    LoopInvariant   reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    TerminationHypothesis reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    SPEC            reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    THEOREM         reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    INIT            reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    ATTRIBUTE       reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    $end            reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    RIGHT_PAREN     reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    EQUALS_DEFINITIONS reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)
    EQUALS_EQUALITY reduce using rule 47 (set_membership -> attribute IN_A_SET Nat .)


state 119

    (42) comparison -> attribute comparison_rule attribute .

    PLUS            reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    MINUS           reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    STAR            reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    DIVIDE          reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    CONSTANTS       reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    VARIABLES       reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    ASSUME          reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    EventuallyTerminates reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    LoopInvariant   reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    TerminationHypothesis reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    SPEC            reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    THEOREM         reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    INIT            reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    ATTRIBUTE       reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    $end            reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    RIGHT_PAREN     reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    EQUALS_DEFINITIONS reduce using rule 42 (comparison -> attribute comparison_rule attribute .)
    EQUALS_EQUALITY reduce using rule 42 (comparison -> attribute comparison_rule attribute .)


state 120

    (41) comparison -> attribute comparison_rule NUMBER_LITERAL .

    PLUS            reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    MINUS           reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    STAR            reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    DIVIDE          reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    VARIABLES       reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    ASSUME          reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    SPEC            reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    THEOREM         reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    INIT            reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    $end            reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    RIGHT_PAREN     reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    EQUALS_DEFINITIONS reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)
    EQUALS_EQUALITY reduce using rule 41 (comparison -> attribute comparison_rule NUMBER_LITERAL .)


state 121

    (4) dot_access -> attribute DOT attribute .

    PLUS            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    MODULUS         reduce using rule 4 (dot_access -> attribute DOT attribute .)
    CONSTANTS       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    VARIABLES       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    ASSUME          reduce using rule 4 (dot_access -> attribute DOT attribute .)
    EventuallyTerminates reduce using rule 4 (dot_access -> attribute DOT attribute .)
    LoopInvariant   reduce using rule 4 (dot_access -> attribute DOT attribute .)
    TerminationHypothesis reduce using rule 4 (dot_access -> attribute DOT attribute .)
    SPEC            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    THEOREM         reduce using rule 4 (dot_access -> attribute DOT attribute .)
    INIT            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    ATTRIBUTE       reduce using rule 4 (dot_access -> attribute DOT attribute .)
    $end            reduce using rule 4 (dot_access -> attribute DOT attribute .)
    EQUALS_DEFINITIONS reduce using rule 4 (dot_access -> attribute DOT attribute .)
    EQUALS_EQUALITY reduce using rule 4 (dot_access -> attribute DOT attribute .)
    IN_A_SET        reduce using rule 4 (dot_access -> attribute DOT attribute .)


state 122

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    CONSTANTS       reduce using rule 30 (expression -> expression PLUS expression .)
    VARIABLES       reduce using rule 30 (expression -> expression PLUS expression .)
    ASSUME          reduce using rule 30 (expression -> expression PLUS expression .)
    EventuallyTerminates reduce using rule 30 (expression -> expression PLUS expression .)
    LoopInvariant   reduce using rule 30 (expression -> expression PLUS expression .)
    TerminationHypothesis reduce using rule 30 (expression -> expression PLUS expression .)
    SPEC            reduce using rule 30 (expression -> expression PLUS expression .)
    THEOREM         reduce using rule 30 (expression -> expression PLUS expression .)
    INIT            reduce using rule 30 (expression -> expression PLUS expression .)
    ATTRIBUTE       reduce using rule 30 (expression -> expression PLUS expression .)
    $end            reduce using rule 30 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 30 (expression -> expression PLUS expression .)
    EQUALS_DEFINITIONS reduce using rule 30 (expression -> expression PLUS expression .)
    EQUALS_EQUALITY reduce using rule 30 (expression -> expression PLUS expression .)
    STAR            shift and go to state 88
    DIVIDE          shift and go to state 89

  ! STAR            [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]


state 123

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    CONSTANTS       reduce using rule 31 (expression -> expression MINUS expression .)
    VARIABLES       reduce using rule 31 (expression -> expression MINUS expression .)
    ASSUME          reduce using rule 31 (expression -> expression MINUS expression .)
    EventuallyTerminates reduce using rule 31 (expression -> expression MINUS expression .)
    LoopInvariant   reduce using rule 31 (expression -> expression MINUS expression .)
    TerminationHypothesis reduce using rule 31 (expression -> expression MINUS expression .)
    SPEC            reduce using rule 31 (expression -> expression MINUS expression .)
    THEOREM         reduce using rule 31 (expression -> expression MINUS expression .)
    INIT            reduce using rule 31 (expression -> expression MINUS expression .)
    ATTRIBUTE       reduce using rule 31 (expression -> expression MINUS expression .)
    $end            reduce using rule 31 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 31 (expression -> expression MINUS expression .)
    EQUALS_DEFINITIONS reduce using rule 31 (expression -> expression MINUS expression .)
    EQUALS_EQUALITY reduce using rule 31 (expression -> expression MINUS expression .)
    STAR            shift and go to state 88
    DIVIDE          shift and go to state 89

  ! STAR            [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]


state 124

    (32) expression -> expression STAR expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 32 (expression -> expression STAR expression .)
    MINUS           reduce using rule 32 (expression -> expression STAR expression .)
    STAR            reduce using rule 32 (expression -> expression STAR expression .)
    DIVIDE          reduce using rule 32 (expression -> expression STAR expression .)
    CONSTANTS       reduce using rule 32 (expression -> expression STAR expression .)
    VARIABLES       reduce using rule 32 (expression -> expression STAR expression .)
    ASSUME          reduce using rule 32 (expression -> expression STAR expression .)
    EventuallyTerminates reduce using rule 32 (expression -> expression STAR expression .)
    LoopInvariant   reduce using rule 32 (expression -> expression STAR expression .)
    TerminationHypothesis reduce using rule 32 (expression -> expression STAR expression .)
    SPEC            reduce using rule 32 (expression -> expression STAR expression .)
    THEOREM         reduce using rule 32 (expression -> expression STAR expression .)
    INIT            reduce using rule 32 (expression -> expression STAR expression .)
    ATTRIBUTE       reduce using rule 32 (expression -> expression STAR expression .)
    $end            reduce using rule 32 (expression -> expression STAR expression .)
    RIGHT_PAREN     reduce using rule 32 (expression -> expression STAR expression .)
    EQUALS_DEFINITIONS reduce using rule 32 (expression -> expression STAR expression .)
    EQUALS_EQUALITY reduce using rule 32 (expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]
  ! STAR            [ shift and go to state 88 ]
  ! DIVIDE          [ shift and go to state 89 ]


state 125

    (33) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    STAR            reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    CONSTANTS       reduce using rule 33 (expression -> expression DIVIDE expression .)
    VARIABLES       reduce using rule 33 (expression -> expression DIVIDE expression .)
    ASSUME          reduce using rule 33 (expression -> expression DIVIDE expression .)
    EventuallyTerminates reduce using rule 33 (expression -> expression DIVIDE expression .)
    LoopInvariant   reduce using rule 33 (expression -> expression DIVIDE expression .)
    TerminationHypothesis reduce using rule 33 (expression -> expression DIVIDE expression .)
    SPEC            reduce using rule 33 (expression -> expression DIVIDE expression .)
    THEOREM         reduce using rule 33 (expression -> expression DIVIDE expression .)
    INIT            reduce using rule 33 (expression -> expression DIVIDE expression .)
    ATTRIBUTE       reduce using rule 33 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 33 (expression -> expression DIVIDE expression .)
    RIGHT_PAREN     reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUALS_DEFINITIONS reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUALS_EQUALITY reduce using rule 33 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 87 ]
  ! STAR            [ shift and go to state 88 ]
  ! DIVIDE          [ shift and go to state 89 ]


state 126

    (50) set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    EventuallyTerminates reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    LoopInvariant   reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    TerminationHypothesis reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    SPEC            reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    THEOREM         reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)
    $end            reduce using rule 50 (set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET .)


state 127

    (51) set_info -> set_info COMMA . set_individual_info
    (53) set_individual_info -> . ATTRIBUTE COLON set_scope

    ATTRIBUTE       shift and go to state 93

    set_individual_info            shift and go to state 155

state 128

    (89) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET . formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (90) formula_details -> . NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute
    (91) formula_details -> . dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 157
    ATTRIBUTE       shift and go to state 5

    formula_details                shift and go to state 156
    attribute                      shift and go to state 110
    dot_access                     shift and go to state 158

state 129

    (53) set_individual_info -> ATTRIBUTE COLON . set_scope
    (54) set_scope -> . NUMBER_LITERAL DOT DOT attribute

    NUMBER_LITERAL  shift and go to state 160

    set_scope                      shift and go to state 159

state 130

    (64) function_info -> attribute DOT . attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 161

state 131

    (65) function_info -> attribute comparison_rule . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 162


state 132

    (84) termination_info -> attribute equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 163


state 133

    (62) function_declaration -> attribute equals AND function_info AND . function_info except_section
    (63) function_declaration -> attribute equals AND function_info AND . function_info AND function_info except_section
    (64) function_info -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (65) function_info -> . attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 164
    function_info                  shift and go to state 165

state 134

    (83) termination_statement -> attribute equals AND termination_info AND . termination_info
    (84) termination_info -> . attribute equals NUMBER_LITERAL
    (85) termination_info -> . UNCHANGED attribute
    (3) attribute -> . ATTRIBUTE

    UNCHANGED       shift and go to state 97
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 166
    termination_info               shift and go to state 167

state 135

    (85) termination_info -> UNCHANGED attribute .

    AND             reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    CONSTANTS       reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    VARIABLES       reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    ASSUME          reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    EventuallyTerminates reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    LoopInvariant   reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    TerminationHypothesis reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    SPEC            reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    THEOREM         reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    INIT            reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    ATTRIBUTE       reduce using rule 85 (termination_info -> UNCHANGED attribute .)
    $end            reduce using rule 85 (termination_info -> UNCHANGED attribute .)


state 136

    (86) next_state_relation -> attribute equals OR next_state_info OR . next_state_info OR next_state_info OR next_state_info
    (87) next_state_info -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 98
    next_state_info                shift and go to state 168

state 137

    (108) expression -> LEFT_PAREN expression RIGHT_PAREN .

    PLUS            reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STAR            reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIVIDE          reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANTS       reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    VARIABLES       reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ASSUME          reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LoopInvariant   reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SPEC            reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEOREM         reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INIT            reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS_DEFINITIONS reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUALS_EQUALITY reduce using rule 108 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 138

    (61) bean_equation -> dot_access PLUS dot_access .

    CONSTANTS       reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    VARIABLES       reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    ASSUME          reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    EventuallyTerminates reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    LoopInvariant   reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    TerminationHypothesis reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    SPEC            reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    THEOREM         reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    INIT            reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    ATTRIBUTE       reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)
    $end            reduce using rule 61 (bean_equation -> dot_access PLUS dot_access .)


state 139

    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .

    PLUS            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    MODULUS         reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    CONSTANTS       reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    VARIABLES       reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    ASSUME          reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    EventuallyTerminates reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    LoopInvariant   reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    TerminationHypothesis reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    SPEC            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    THEOREM         reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    INIT            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    ATTRIBUTE       reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    $end            reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    EQUALS_DEFINITIONS reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    EQUALS_EQUALITY reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)
    IN_A_SET        reduce using rule 5 (dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute .)


state 140

    (29) assume_statement -> ASSUME attribute IN_A_SET Nat AND . attribute GREATER_OR_EQ NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 169

state 141

    (93) property_details -> EVENTUALLY LEFT_PAREN ENABLED . attribute RIGHT_PAREN
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 170

state 142

    (96) conditional_statements -> IF conditional_statement THEN . conditional_statement ELSE conditional_statement
    (97) conditional_statement -> . dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
    (98) conditional_statement -> . EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    EVENTUALLY      shift and go to state 109
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    conditional_statement          shift and go to state 171
    dot_access                     shift and go to state 108
    attribute                      shift and go to state 110

state 143

    (97) conditional_statement -> dot_access MODULUS . NUMBER_LITERAL equals NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 172


state 144

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN . dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 173
    attribute                      shift and go to state 110

state 145

    (99) spec_definition -> SPEC equals AND spec_info AND . spec_info AND spec_info
    (100) spec_info -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (101) spec_info -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (102) spec_info -> . INIT

    LEFT_SQR_BRACKET shift and go to state 112
    WEAK_FAIRNESS   shift and go to state 113
    INIT            shift and go to state 114

    spec_info                      shift and go to state 174

state 146

    (100) spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET . LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    LEFT_SQR_BRACKET shift and go to state 175


state 147

    (101) spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE . LEFT_PAREN attribute RIGHT_PAREN

    LEFT_PAREN      shift and go to state 176


state 148

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info . AND theorem_info AND theorem_info AND theorem_info AND theorem_info

    AND             shift and go to state 177


state 149

    (104) theorem_info -> EventuallyTerminates .

    AND             reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    CONSTANTS       reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    VARIABLES       reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    ASSUME          reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    EventuallyTerminates reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    LoopInvariant   reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    TerminationHypothesis reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    SPEC            reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    THEOREM         reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    INIT            reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    ATTRIBUTE       reduce using rule 104 (theorem_info -> EventuallyTerminates .)
    $end            reduce using rule 104 (theorem_info -> EventuallyTerminates .)


state 150

    (105) theorem_info -> attribute .

    AND             reduce using rule 105 (theorem_info -> attribute .)
    CONSTANTS       reduce using rule 105 (theorem_info -> attribute .)
    VARIABLES       reduce using rule 105 (theorem_info -> attribute .)
    ASSUME          reduce using rule 105 (theorem_info -> attribute .)
    EventuallyTerminates reduce using rule 105 (theorem_info -> attribute .)
    LoopInvariant   reduce using rule 105 (theorem_info -> attribute .)
    TerminationHypothesis reduce using rule 105 (theorem_info -> attribute .)
    SPEC            reduce using rule 105 (theorem_info -> attribute .)
    THEOREM         reduce using rule 105 (theorem_info -> attribute .)
    INIT            reduce using rule 105 (theorem_info -> attribute .)
    ATTRIBUTE       reduce using rule 105 (theorem_info -> attribute .)
    $end            reduce using rule 105 (theorem_info -> attribute .)


state 151

    (106) theorem_info -> LoopInvariant .

    AND             reduce using rule 106 (theorem_info -> LoopInvariant .)
    CONSTANTS       reduce using rule 106 (theorem_info -> LoopInvariant .)
    VARIABLES       reduce using rule 106 (theorem_info -> LoopInvariant .)
    ASSUME          reduce using rule 106 (theorem_info -> LoopInvariant .)
    EventuallyTerminates reduce using rule 106 (theorem_info -> LoopInvariant .)
    LoopInvariant   reduce using rule 106 (theorem_info -> LoopInvariant .)
    TerminationHypothesis reduce using rule 106 (theorem_info -> LoopInvariant .)
    SPEC            reduce using rule 106 (theorem_info -> LoopInvariant .)
    THEOREM         reduce using rule 106 (theorem_info -> LoopInvariant .)
    INIT            reduce using rule 106 (theorem_info -> LoopInvariant .)
    ATTRIBUTE       reduce using rule 106 (theorem_info -> LoopInvariant .)
    $end            reduce using rule 106 (theorem_info -> LoopInvariant .)


state 152

    (107) theorem_info -> TerminationHypothesis .

    AND             reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    CONSTANTS       reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    VARIABLES       reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    ASSUME          reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    EventuallyTerminates reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    LoopInvariant   reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    TerminationHypothesis reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    SPEC            reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    THEOREM         reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    INIT            reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    ATTRIBUTE       reduce using rule 107 (theorem_info -> TerminationHypothesis .)
    $end            reduce using rule 107 (theorem_info -> TerminationHypothesis .)


state 153

    (56) init -> INIT equals attribute IN_A_SET init_set_statement .

    CONSTANTS       reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    VARIABLES       reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    ASSUME          reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    EventuallyTerminates reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    LoopInvariant   reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    TerminationHypothesis reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    SPEC            reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    THEOREM         reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    INIT            reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    ATTRIBUTE       reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)
    $end            reduce using rule 56 (init -> INIT equals attribute IN_A_SET init_set_statement .)


state 154

    (57) init_set_statement -> LEFT_BRACE . attribute IN_A_SET attribute COLON order
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 178

state 155

    (51) set_info -> set_info COMMA set_individual_info .

    RIGHT_SQR_BRACKET reduce using rule 51 (set_info -> set_info COMMA set_individual_info .)
    COMMA           reduce using rule 51 (set_info -> set_info COMMA set_individual_info .)


state 156

    (89) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details . RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 179


state 157

    (90) formula_details -> NEXT_VALUE_OF_ATTRIBUTE . LESS_THAN attribute
    (5) dot_access -> NEXT_VALUE_OF_ATTRIBUTE . DOT attribute

    LESS_THAN       shift and go to state 180
    DOT             shift and go to state 103


state 158

    (91) formula_details -> dot_access . MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL

    MODULUS         shift and go to state 181


state 159

    (53) set_individual_info -> ATTRIBUTE COLON set_scope .

    RIGHT_SQR_BRACKET reduce using rule 53 (set_individual_info -> ATTRIBUTE COLON set_scope .)
    COMMA           reduce using rule 53 (set_individual_info -> ATTRIBUTE COLON set_scope .)


state 160

    (54) set_scope -> NUMBER_LITERAL . DOT DOT attribute

    DOT             shift and go to state 182


state 161

    (64) function_info -> attribute DOT attribute . comparison_rule NUMBER_LITERAL
    (43) comparison_rule -> . GREATER_OR_EQ
    (44) comparison_rule -> . LESS_OR_EQ
    (45) comparison_rule -> . GREATER_THAN
    (46) comparison_rule -> . LESS_THAN

    GREATER_OR_EQ   shift and go to state 82
    LESS_OR_EQ      shift and go to state 83
    GREATER_THAN    shift and go to state 84
    LESS_THAN       shift and go to state 85

    comparison_rule                shift and go to state 183

state 162

    (65) function_info -> attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 65 (function_info -> attribute comparison_rule NUMBER_LITERAL .)


state 163

    (84) termination_info -> attribute equals NUMBER_LITERAL .

    AND             reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    VARIABLES       reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    ASSUME          reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    SPEC            reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    THEOREM         reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    INIT            reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)
    $end            reduce using rule 84 (termination_info -> attribute equals NUMBER_LITERAL .)


state 164

    (64) function_info -> attribute . DOT attribute comparison_rule NUMBER_LITERAL
    (65) function_info -> attribute . comparison_rule NUMBER_LITERAL
    (43) comparison_rule -> . GREATER_OR_EQ
    (44) comparison_rule -> . LESS_OR_EQ
    (45) comparison_rule -> . GREATER_THAN
    (46) comparison_rule -> . LESS_THAN

    DOT             shift and go to state 130
    GREATER_OR_EQ   shift and go to state 82
    LESS_OR_EQ      shift and go to state 83
    GREATER_THAN    shift and go to state 84
    LESS_THAN       shift and go to state 85

    comparison_rule                shift and go to state 131

state 165

    (62) function_declaration -> attribute equals AND function_info AND function_info . except_section
    (63) function_declaration -> attribute equals AND function_info AND function_info . AND function_info except_section
    (80) except_section -> . AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause

    AND             shift and go to state 184

    except_section                 shift and go to state 185

state 166

    (84) termination_info -> attribute . equals NUMBER_LITERAL
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 132

state 167

    (83) termination_statement -> attribute equals AND termination_info AND termination_info .

    CONSTANTS       reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    VARIABLES       reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    ASSUME          reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    EventuallyTerminates reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    LoopInvariant   reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    TerminationHypothesis reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    SPEC            reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    THEOREM         reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    INIT            reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    ATTRIBUTE       reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)
    $end            reduce using rule 83 (termination_statement -> attribute equals AND termination_info AND termination_info .)


state 168

    (86) next_state_relation -> attribute equals OR next_state_info OR next_state_info . OR next_state_info OR next_state_info

    OR              shift and go to state 186


state 169

    (29) assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute . GREATER_OR_EQ NUMBER_LITERAL

    GREATER_OR_EQ   shift and go to state 187


state 170

    (93) property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 188


state 171

    (96) conditional_statements -> IF conditional_statement THEN conditional_statement . ELSE conditional_statement

    ELSE            shift and go to state 189


state 172

    (97) conditional_statement -> dot_access MODULUS NUMBER_LITERAL . equals NUMBER_LITERAL
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 190

state 173

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access . equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 191

state 174

    (99) spec_definition -> SPEC equals AND spec_info AND spec_info . AND spec_info

    AND             shift and go to state 192


state 175

    (100) spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET . attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 193

state 176

    (101) spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN . attribute RIGHT_PAREN
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 194

state 177

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND . theorem_info AND theorem_info AND theorem_info AND theorem_info
    (104) theorem_info -> . EventuallyTerminates
    (105) theorem_info -> . attribute
    (106) theorem_info -> . LoopInvariant
    (107) theorem_info -> . TerminationHypothesis
    (3) attribute -> . ATTRIBUTE

    EventuallyTerminates shift and go to state 149
    LoopInvariant   shift and go to state 151
    TerminationHypothesis shift and go to state 152
    ATTRIBUTE       shift and go to state 5

    theorem_info                   shift and go to state 195
    attribute                      shift and go to state 150

state 178

    (57) init_set_statement -> LEFT_BRACE attribute . IN_A_SET attribute COLON order

    IN_A_SET        shift and go to state 196


state 179

    (89) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET . ATTRIBUTE_MAY_CHANGE

    ATTRIBUTE_MAY_CHANGE shift and go to state 197


state 180

    (90) formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 198

state 181

    (91) formula_details -> dot_access MODULUS . expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 199
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 182

    (54) set_scope -> NUMBER_LITERAL DOT . DOT attribute

    DOT             shift and go to state 200


state 183

    (64) function_info -> attribute DOT attribute comparison_rule . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 201


state 184

    (63) function_declaration -> attribute equals AND function_info AND function_info AND . function_info except_section
    (80) except_section -> AND . NEXT_VALUE_OF_ATTRIBUTE equals except_clause
    (64) function_info -> . attribute DOT attribute comparison_rule NUMBER_LITERAL
    (65) function_info -> . attribute comparison_rule NUMBER_LITERAL
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 203
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 164
    function_info                  shift and go to state 202

state 185

    (62) function_declaration -> attribute equals AND function_info AND function_info except_section .

    CONSTANTS       reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    VARIABLES       reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    ASSUME          reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    EventuallyTerminates reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    LoopInvariant   reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    TerminationHypothesis reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    SPEC            reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    THEOREM         reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    INIT            reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    ATTRIBUTE       reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)
    $end            reduce using rule 62 (function_declaration -> attribute equals AND function_info AND function_info except_section .)


state 186

    (86) next_state_relation -> attribute equals OR next_state_info OR next_state_info OR . next_state_info OR next_state_info
    (87) next_state_info -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 98
    next_state_info                shift and go to state 204

state 187

    (29) assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 205


state 188

    (93) property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .

    CONSTANTS       reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    VARIABLES       reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    ASSUME          reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    LoopInvariant   reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    SPEC            reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    THEOREM         reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    INIT            reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)
    $end            reduce using rule 93 (property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN .)


state 189

    (96) conditional_statements -> IF conditional_statement THEN conditional_statement ELSE . conditional_statement
    (97) conditional_statement -> . dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL
    (98) conditional_statement -> . EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    EVENTUALLY      shift and go to state 109
    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    conditional_statement          shift and go to state 206
    dot_access                     shift and go to state 108
    attribute                      shift and go to state 110

state 190

    (97) conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 207


state 191

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals . NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN

    NUMBER_LITERAL  shift and go to state 208


state 192

    (99) spec_definition -> SPEC equals AND spec_info AND spec_info AND . spec_info
    (100) spec_info -> . LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE
    (101) spec_info -> . WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN
    (102) spec_info -> . INIT

    LEFT_SQR_BRACKET shift and go to state 112
    WEAK_FAIRNESS   shift and go to state 113
    INIT            shift and go to state 114

    spec_info                      shift and go to state 209

state 193

    (100) spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute . RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE

    RIGHT_SQR_BRACKET shift and go to state 210


state 194

    (101) spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 211


state 195

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info . AND theorem_info AND theorem_info AND theorem_info

    AND             shift and go to state 212


state 196

    (57) init_set_statement -> LEFT_BRACE attribute IN_A_SET . attribute COLON order
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 213

state 197

    (89) action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .

    CONSTANTS       reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    VARIABLES       reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ASSUME          reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    EventuallyTerminates reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    LoopInvariant   reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    TerminationHypothesis reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    SPEC            reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    THEOREM         reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    INIT            reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ATTRIBUTE       reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    $end            reduce using rule 89 (action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)


state 198

    (90) formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute .

    RIGHT_SQR_BRACKET reduce using rule 90 (formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute .)


state 199

    (91) formula_details -> dot_access MODULUS expression . equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    STAR            shift and go to state 88
    DIVIDE          shift and go to state 89
    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 214

state 200

    (54) set_scope -> NUMBER_LITERAL DOT DOT . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 215

state 201

    (64) function_info -> attribute DOT attribute comparison_rule NUMBER_LITERAL .

    AND             reduce using rule 64 (function_info -> attribute DOT attribute comparison_rule NUMBER_LITERAL .)


state 202

    (63) function_declaration -> attribute equals AND function_info AND function_info AND function_info . except_section
    (80) except_section -> . AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause

    AND             shift and go to state 216

    except_section                 shift and go to state 217

state 203

    (80) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE . equals except_clause
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 218

state 204

    (86) next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info . OR next_state_info

    OR              shift and go to state 219


state 205

    (29) assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .

    CONSTANTS       reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    VARIABLES       reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    ASSUME          reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    SPEC            reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    THEOREM         reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    INIT            reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)
    $end            reduce using rule 29 (assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL .)


state 206

    (96) conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .

    CONSTANTS       reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    VARIABLES       reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    ASSUME          reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    EventuallyTerminates reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    LoopInvariant   reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    TerminationHypothesis reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    SPEC            reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    THEOREM         reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    INIT            reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    ATTRIBUTE       reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)
    $end            reduce using rule 96 (conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement .)


state 207

    (97) conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .

    THEN            reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    ELSE            reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    CONSTANTS       reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    VARIABLES       reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    ASSUME          reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    EventuallyTerminates reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    LoopInvariant   reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    TerminationHypothesis reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    SPEC            reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    THEOREM         reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    INIT            reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    ATTRIBUTE       reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)
    $end            reduce using rule 97 (conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL .)


state 208

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL . AND dot_access equals NUMBER_LITERAL RIGHT_PAREN

    AND             shift and go to state 220


state 209

    (99) spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .

    CONSTANTS       reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    VARIABLES       reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    ASSUME          reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    EventuallyTerminates reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    LoopInvariant   reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    TerminationHypothesis reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    SPEC            reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    THEOREM         reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    INIT            reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    ATTRIBUTE       reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)
    $end            reduce using rule 99 (spec_definition -> SPEC equals AND spec_info AND spec_info AND spec_info .)


state 210

    (100) spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET . ATTRIBUTE_MAY_CHANGE

    ATTRIBUTE_MAY_CHANGE shift and go to state 221


state 211

    (101) spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .

    AND             reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    CONSTANTS       reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    VARIABLES       reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    ASSUME          reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    LoopInvariant   reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    SPEC            reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    THEOREM         reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    INIT            reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)
    $end            reduce using rule 101 (spec_info -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN .)


state 212

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND . theorem_info AND theorem_info AND theorem_info
    (104) theorem_info -> . EventuallyTerminates
    (105) theorem_info -> . attribute
    (106) theorem_info -> . LoopInvariant
    (107) theorem_info -> . TerminationHypothesis
    (3) attribute -> . ATTRIBUTE

    EventuallyTerminates shift and go to state 149
    LoopInvariant   shift and go to state 151
    TerminationHypothesis shift and go to state 152
    ATTRIBUTE       shift and go to state 5

    theorem_info                   shift and go to state 222
    attribute                      shift and go to state 150

state 213

    (57) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute . COLON order

    COLON           shift and go to state 223


state 214

    (91) formula_details -> dot_access MODULUS expression equals . NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 224


state 215

    (54) set_scope -> NUMBER_LITERAL DOT DOT attribute .

    RIGHT_SQR_BRACKET reduce using rule 54 (set_scope -> NUMBER_LITERAL DOT DOT attribute .)
    COMMA           reduce using rule 54 (set_scope -> NUMBER_LITERAL DOT DOT attribute .)


state 216

    (80) except_section -> AND . NEXT_VALUE_OF_ATTRIBUTE equals except_clause

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 203


state 217

    (63) function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .

    CONSTANTS       reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    VARIABLES       reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    ASSUME          reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    EventuallyTerminates reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    LoopInvariant   reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    TerminationHypothesis reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    SPEC            reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    THEOREM         reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    INIT            reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    ATTRIBUTE       reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)
    $end            reduce using rule 63 (function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section .)


state 218

    (80) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals . except_clause
    (81) except_clause -> . LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> . LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    LEFT_SQR_BRACKET shift and go to state 226

    except_clause                  shift and go to state 225

state 219

    (86) next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR . next_state_info
    (87) next_state_info -> . attribute
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 98
    next_state_info                shift and go to state 227

state 220

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND . dot_access equals NUMBER_LITERAL RIGHT_PAREN
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 228
    attribute                      shift and go to state 110

state 221

    (100) spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .

    AND             reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    CONSTANTS       reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    VARIABLES       reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ASSUME          reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    EventuallyTerminates reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    LoopInvariant   reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    TerminationHypothesis reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    SPEC            reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    THEOREM         reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    INIT            reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    ATTRIBUTE       reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)
    $end            reduce using rule 100 (spec_info -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE .)


state 222

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info . AND theorem_info AND theorem_info

    AND             shift and go to state 229


state 223

    (57) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON . order
    (58) order -> . dot_access PLUS dot_access IN_A_SET range_of_values
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 110
    order                          shift and go to state 230
    dot_access                     shift and go to state 231

state 224

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL . EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL

    EQUIVALENCE_OPERATOR shift and go to state 232


state 225

    (80) except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .

    CONSTANTS       reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    VARIABLES       reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    ASSUME          reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    EventuallyTerminates reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    LoopInvariant   reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    TerminationHypothesis reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    SPEC            reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    THEOREM         reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    INIT            reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    ATTRIBUTE       reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)
    $end            reduce using rule 80 (except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause .)


state 226

    (81) except_clause -> LEFT_SQR_BRACKET . attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET . attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 233

state 227

    (86) next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .

    CONSTANTS       reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    VARIABLES       reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    ASSUME          reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    EventuallyTerminates reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    LoopInvariant   reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    TerminationHypothesis reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    SPEC            reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    THEOREM         reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    INIT            reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    ATTRIBUTE       reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)
    $end            reduce using rule 86 (next_state_relation -> attribute equals OR next_state_info OR next_state_info OR next_state_info OR next_state_info .)


state 228

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access . equals NUMBER_LITERAL RIGHT_PAREN
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 234

state 229

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND . theorem_info AND theorem_info
    (104) theorem_info -> . EventuallyTerminates
    (105) theorem_info -> . attribute
    (106) theorem_info -> . LoopInvariant
    (107) theorem_info -> . TerminationHypothesis
    (3) attribute -> . ATTRIBUTE

    EventuallyTerminates shift and go to state 149
    LoopInvariant   shift and go to state 151
    TerminationHypothesis shift and go to state 152
    ATTRIBUTE       shift and go to state 5

    theorem_info                   shift and go to state 235
    attribute                      shift and go to state 150

state 230

    (57) init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .

    CONSTANTS       reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    VARIABLES       reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    ASSUME          reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    EventuallyTerminates reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    LoopInvariant   reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    TerminationHypothesis reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    SPEC            reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    THEOREM         reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    INIT            reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    ATTRIBUTE       reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)
    $end            reduce using rule 57 (init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order .)


state 231

    (58) order -> dot_access . PLUS dot_access IN_A_SET range_of_values

    PLUS            shift and go to state 236


state 232

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR . dot_access MODULUS expression equals NUMBER_LITERAL
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 237
    attribute                      shift and go to state 110

state 233

    (81) except_clause -> LEFT_SQR_BRACKET attribute . EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute . EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCEPT          shift and go to state 238


state 234

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals . NUMBER_LITERAL RIGHT_PAREN

    NUMBER_LITERAL  shift and go to state 239


state 235

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info . AND theorem_info

    AND             shift and go to state 240


state 236

    (58) order -> dot_access PLUS . dot_access IN_A_SET range_of_values
    (4) dot_access -> . attribute DOT attribute
    (5) dot_access -> . NEXT_VALUE_OF_ATTRIBUTE DOT attribute
    (3) attribute -> . ATTRIBUTE

    NEXT_VALUE_OF_ATTRIBUTE shift and go to state 67
    ATTRIBUTE       shift and go to state 5

    dot_access                     shift and go to state 241
    attribute                      shift and go to state 110

state 237

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access . MODULUS expression equals NUMBER_LITERAL

    MODULUS         shift and go to state 242


state 238

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT . EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT . EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCLAMATION_MARK shift and go to state 243


state 239

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL . RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 244


state 240

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND . theorem_info
    (104) theorem_info -> . EventuallyTerminates
    (105) theorem_info -> . attribute
    (106) theorem_info -> . LoopInvariant
    (107) theorem_info -> . TerminationHypothesis
    (3) attribute -> . ATTRIBUTE

    EventuallyTerminates shift and go to state 149
    LoopInvariant   shift and go to state 151
    TerminationHypothesis shift and go to state 152
    ATTRIBUTE       shift and go to state 5

    theorem_info                   shift and go to state 245
    attribute                      shift and go to state 150

state 241

    (58) order -> dot_access PLUS dot_access . IN_A_SET range_of_values

    IN_A_SET        shift and go to state 246


state 242

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS . expression equals NUMBER_LITERAL
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression STAR expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . set_membership
    (35) expression -> . comparison
    (36) expression -> . attribute
    (37) expression -> . type_invariant_expression
    (38) expression -> . NUMBER_LITERAL
    (39) expression -> . STRING_LITERAL
    (108) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (47) set_membership -> . attribute IN_A_SET Nat
    (41) comparison -> . attribute comparison_rule NUMBER_LITERAL
    (42) comparison -> . attribute comparison_rule attribute
    (3) attribute -> . ATTRIBUTE
    (40) type_invariant_expression -> . attribute IN_A_SET attribute

    NUMBER_LITERAL  shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LEFT_PAREN      shift and go to state 65
    ATTRIBUTE       shift and go to state 5

    expression                     shift and go to state 247
    set_membership                 shift and go to state 60
    comparison                     shift and go to state 61
    attribute                      shift and go to state 101
    type_invariant_expression      shift and go to state 62

state 243

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK . DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK . DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    DOT             shift and go to state 248


state 244

    (98) conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .

    THEN            reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    ELSE            reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    CONSTANTS       reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    VARIABLES       reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    ASSUME          reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    EventuallyTerminates reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    LoopInvariant   reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    TerminationHypothesis reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    SPEC            reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    THEOREM         reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    INIT            reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    ATTRIBUTE       reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)
    $end            reduce using rule 98 (conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN .)


state 245

    (103) theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .

    CONSTANTS       reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    VARIABLES       reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    ASSUME          reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    EventuallyTerminates reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    LoopInvariant   reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    TerminationHypothesis reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    SPEC            reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    THEOREM         reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    INIT            reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    ATTRIBUTE       reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)
    $end            reduce using rule 103 (theorem_definition -> THEOREM SPEC IMPLIES AND theorem_info AND theorem_info AND theorem_info AND theorem_info AND theorem_info .)


state 246

    (58) order -> dot_access PLUS dot_access IN_A_SET . range_of_values
    (59) range_of_values -> . NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE

    NUMBER_LITERAL  shift and go to state 250

    range_of_values                shift and go to state 249

state 247

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression . equals NUMBER_LITERAL
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . STAR expression
    (33) expression -> expression . DIVIDE expression
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    PLUS            shift and go to state 86
    MINUS           shift and go to state 87
    STAR            shift and go to state 88
    DIVIDE          shift and go to state 89
    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 251

state 248

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT . attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT . attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 252

state 249

    (58) order -> dot_access PLUS dot_access IN_A_SET range_of_values .

    CONSTANTS       reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    VARIABLES       reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    ASSUME          reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    EventuallyTerminates reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    LoopInvariant   reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    TerminationHypothesis reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    SPEC            reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    THEOREM         reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    INIT            reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    ATTRIBUTE       reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)
    $end            reduce using rule 58 (order -> dot_access PLUS dot_access IN_A_SET range_of_values .)


state 250

    (59) range_of_values -> NUMBER_LITERAL . DOT DOT attribute RIGHT_BRACE

    DOT             shift and go to state 253


state 251

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals . NUMBER_LITERAL

    NUMBER_LITERAL  shift and go to state 254


state 252

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute . equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute . equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 255

state 253

    (59) range_of_values -> NUMBER_LITERAL DOT . DOT attribute RIGHT_BRACE

    DOT             shift and go to state 256


state 254

    (91) formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL .

    RIGHT_SQR_BRACKET reduce using rule 91 (formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL .)


state 255

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals . AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals . AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    AT              shift and go to state 257


state 256

    (59) range_of_values -> NUMBER_LITERAL DOT DOT . attribute RIGHT_BRACE
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 258

state 257

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT . MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT . PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    MINUS           shift and go to state 259
    PLUS            shift and go to state 260


state 258

    (59) range_of_values -> NUMBER_LITERAL DOT DOT attribute . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 261


state 259

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS . NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 262


state 260

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS . NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 263


state 261

    (59) range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .

    CONSTANTS       reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    VARIABLES       reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    ASSUME          reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    EventuallyTerminates reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    LoopInvariant   reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    TerminationHypothesis reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    SPEC            reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    THEOREM         reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    INIT            reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    ATTRIBUTE       reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)
    $end            reduce using rule 59 (range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE .)


state 262

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 264


state 263

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL . COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    COMMA           shift and go to state 265


state 264

    (81) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    EventuallyTerminates reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    LoopInvariant   reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    TerminationHypothesis reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    SPEC            reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    THEOREM         reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    $end            reduce using rule 81 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)


state 265

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA . EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    EXCLAMATION_MARK shift and go to state 266


state 266

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK . DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    DOT             shift and go to state 267


state 267

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT . attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (3) attribute -> . ATTRIBUTE

    ATTRIBUTE       shift and go to state 5

    attribute                      shift and go to state 268

state 268

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute . equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET
    (48) equals -> . EQUALS_DEFINITIONS
    (49) equals -> . EQUALS_EQUALITY

    EQUALS_DEFINITIONS shift and go to state 38
    EQUALS_EQUALITY shift and go to state 39

    equals                         shift and go to state 269

state 269

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals . AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    AT              shift and go to state 270


state 270

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT . MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET

    MINUS           shift and go to state 271


state 271

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS . NUMBER_LITERAL RIGHT_SQR_BRACKET

    NUMBER_LITERAL  shift and go to state 272


state 272

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 273


state 273

    (82) except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .

    CONSTANTS       reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    VARIABLES       reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ASSUME          reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    EventuallyTerminates reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    LoopInvariant   reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    TerminationHypothesis reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    SPEC            reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    THEOREM         reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    INIT            reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    ATTRIBUTE       reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)
    $end            reduce using rule 82 (except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET .)

