
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQUALS_DEFINITIONSNOT_EQUALSnonassocLESS_THANLESS_OR_EQGREATER_THANGREATER_OR_EQleftPLUSMINUSleftSTARDIVIDEMODULUSnonassocLEFT_PARENRIGHT_PARENAND ARROW ASSUME AT ATTRIBUTE BACK_SLASH CHECK COLON COMMA CONSTANTS DIVIDE DOT EDGE ELSE EQUALS_DEFINITIONS EQUALS_EQUALITY EXCLAMATION_MARK EXTENDS FORWARD_SLASH GOAL GRAPH GREATER_OR_EQ GREATER_THAN IF INIT INVARIANT IN_A_SET LEFT_BRACE LEFT_PAREN LEFT_SQR_BRACKET LESS_OR_EQ LESS_THAN MINUS MODULE MODULE_WRAPPER MODULUS NEXT NEXT_VALUE_OF_ATTRIBUTE NODE NOT_EQUALS NUMBER_LITERAL Nat OR PLUS RIGHT_BRACE RIGHT_PAREN RIGHT_SQR_BRACKET SEMICOLON SINGLE_QUOTE SPEC STAR STRING_LITERAL THEN UNCHANGED UNDERSCORE VARIABLES VARIABLE_NAMEmodule : MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements\n              | MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statementsattribute : ATTRIBUTEdot_access : attribute DOT attributeextends : EXTENDS namesnames : names COMMA attribute\n             | attributestatements : statements statement\n                    | statementstatement :   constants_statement\n                   | variables_statement\n                   | assume_statement\n                   | type_invariant\n                   | set_definition\n                   | bean_value_count\n                   | function_declaration\n                   | initconstants_statement : CONSTANTS namesvariables_statement : VARIABLES namesassume_statement : ASSUME expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression DIVIDE expression\n                  | set_membership\n                  | comparison\n                  | attribute\n                  | type_invariant_expression\n                  | NUMBER_LITERAL\n                  | STRING_LITERALtype_invariant_expression : attribute IN_A_SET attributeinit_expression : comparison : attribute comparison_rule NUMBER_LITERAL\n                  | attribute comparison_rule attributecomparison_rule :   GREATER_OR_EQ\n                    | LESS_OR_EQ\n                    | GREATER_THAN                         \n                    | LESS_THAN set_membership : attribute IN_A_SET Nat equals : EQUALS_DEFINITIONS\n              | EQUALS_EQUALITYset_definition : attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKETset_info : set_info COMMA set_individual_info\n                      | set_individual_infoset_individual_info : ATTRIBUTE COLON set_scopeset_scope : NUMBER_LITERAL DOT DOT attributetype_invariant : attribute equals expressioninit : INIT equals attribute IN_A_SET init_set_statementinit_set_statement : LEFT_BRACE attribute IN_A_SET attribute COLON orderorder : dot_access PLUS dot_access IN_A_SET range_of_valuesrange_of_values :  NUMBER_LITERAL DOT DOT attribute RIGHT_BRACEbean_value_count : attribute equals bean_equationbean_equation : dot_access PLUS dot_accessfunction_declaration : attribute equals function_conditions except_sectionfunction_conditions : function_condition\n                           | function_conditions AND function_conditionfunction_condition : attribute comparison_rule NUMBER_LITERAL\n                          | attribute DOT attribute comparison_rule NUMBER_LITERALexcept_section : expression : LEFT_PAREN expression RIGHT_PARENempty :'
    
_lr_action_items = {'MODULE_WRAPPER':([0,4,5,],[2,6,-3,]),'$end':([1,5,9,11,12,13,14,15,16,17,18,19,27,28,30,31,32,34,35,36,37,38,39,42,43,45,46,48,68,71,72,73,74,75,76,77,78,79,80,81,83,85,88,90,92,102,104,106,112,117,122,],[0,-3,-2,-9,-10,-11,-12,-13,-14,-15,-16,-17,-1,-8,-7,-18,-19,-25,-26,-27,-28,-29,-30,-27,-47,-52,-59,-55,-54,-6,-20,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-42,-56,-53,-48,-58,-57,-4,-49,-50,-51,]),'MODULE':([2,],[3,]),'ATTRIBUTE':([3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,85,86,88,90,92,93,99,100,102,104,106,107,108,111,112,114,117,120,122,],[5,-3,5,5,5,5,-9,-10,-11,-12,-13,-14,-15,-16,-17,5,5,5,5,-40,-41,5,-8,-5,-7,-18,-19,-25,-26,-27,-28,-29,-30,5,5,-27,-47,67,-52,-59,-55,5,5,5,5,5,5,5,5,-35,-36,-37,-38,5,5,-54,5,5,-6,-20,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-42,67,-56,-53,-48,5,5,5,-58,-57,-4,5,5,5,-49,5,-50,5,-51,]),'EQUALS_DEFINITIONS':([5,7,23,],[-3,25,25,]),'EQUALS_EQUALITY':([5,7,23,],[-3,26,26,]),'COMMA':([5,29,30,31,32,65,66,71,95,96,110,],[-3,49,-7,49,49,86,-44,-6,-43,-45,-46,]),'CONSTANTS':([5,6,8,9,11,12,13,14,15,16,17,18,19,27,28,29,30,31,32,34,35,36,37,38,39,42,43,45,46,48,68,71,72,73,74,75,76,77,78,79,80,81,83,85,88,90,92,102,104,106,112,117,122,],[-3,20,20,20,-9,-10,-11,-12,-13,-14,-15,-16,-17,20,-8,-5,-7,-18,-19,-25,-26,-27,-28,-29,-30,-27,-47,-52,-59,-55,-54,-6,-20,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-42,-56,-53,-48,-58,-57,-4,-49,-50,-51,]),'VARIABLES':([5,6,8,9,11,12,13,14,15,16,17,18,19,27,28,29,30,31,32,34,35,36,37,38,39,42,43,45,46,48,68,71,72,73,74,75,76,77,78,79,80,81,83,85,88,90,92,102,104,106,112,117,122,],[-3,21,21,21,-9,-10,-11,-12,-13,-14,-15,-16,-17,21,-8,-5,-7,-18,-19,-25,-26,-27,-28,-29,-30,-27,-47,-52,-59,-55,-54,-6,-20,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-42,-56,-53,-48,-58,-57,-4,-49,-50,-51,]),'ASSUME':([5,6,8,9,11,12,13,14,15,16,17,18,19,27,28,29,30,31,32,34,35,36,37,38,39,42,43,45,46,48,68,71,72,73,74,75,76,77,78,79,80,81,83,85,88,90,92,102,104,106,112,117,122,],[-3,22,22,22,-9,-10,-11,-12,-13,-14,-15,-16,-17,22,-8,-5,-7,-18,-19,-25,-26,-27,-28,-29,-30,-27,-47,-52,-59,-55,-54,-6,-20,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-42,-56,-53,-48,-58,-57,-4,-49,-50,-51,]),'INIT':([5,6,8,9,11,12,13,14,15,16,17,18,19,27,28,29,30,31,32,34,35,36,37,38,39,42,43,45,46,48,68,71,72,73,74,75,76,77,78,79,80,81,83,85,88,90,92,102,104,106,112,117,122,],[-3,23,23,23,-9,-10,-11,-12,-13,-14,-15,-16,-17,23,-8,-5,-7,-18,-19,-25,-26,-27,-28,-29,-30,-27,-47,-52,-59,-55,-54,-6,-20,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-42,-56,-53,-48,-58,-57,-4,-49,-50,-51,]),'IN_A_SET':([5,36,42,62,101,106,115,],[-3,55,55,82,107,-4,116,]),'GREATER_OR_EQ':([5,36,42,84,89,105,],[-3,57,57,57,57,57,]),'LESS_OR_EQ':([5,36,42,84,89,105,],[-3,58,58,58,58,58,]),'GREATER_THAN':([5,36,42,84,89,105,],[-3,59,59,59,59,59,]),'LESS_THAN':([5,36,42,84,89,105,],[-3,60,60,60,60,60,]),'AND':([5,33,34,35,36,37,38,39,46,48,73,74,75,76,77,78,79,80,81,83,88,102,104,],[-3,50,-25,-26,-27,-28,-29,-30,69,-55,-21,-22,-23,-24,-31,-39,-34,-33,-60,-57,-56,-58,-57,]),'PLUS':([5,33,34,35,36,37,38,39,42,43,47,61,72,73,74,75,76,77,78,79,80,81,83,84,106,113,],[-3,51,-25,-26,-27,-28,-29,-30,-27,51,70,51,51,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,-4,-4,114,]),'MINUS':([5,33,34,35,36,37,38,39,42,43,61,72,73,74,75,76,77,78,79,80,81,83,],[-3,52,-25,-26,-27,-28,-29,-30,-27,52,52,52,-21,-22,-23,-24,-31,-39,-34,-33,-60,-33,]),'STAR':([5,33,34,35,36,37,38,39,42,43,61,72,73,74,75,76,77,78,79,80,81,83,],[-3,53,-25,-26,-27,-28,-29,-30,-27,53,53,53,53,53,-23,-24,-31,-39,-34,-33,-60,-33,]),'DIVIDE':([5,33,34,35,36,37,38,39,42,43,61,72,73,74,75,76,77,78,79,80,81,83,],[-3,54,-25,-26,-27,-28,-29,-30,-27,54,54,54,54,54,-23,-24,-31,-39,-34,-33,-60,-33,]),'DOT':([5,42,89,91,97,103,118,119,],[-3,64,99,100,103,108,119,120,]),'RIGHT_PAREN':([5,34,35,36,37,38,39,61,73,74,75,76,77,78,79,80,81,],[-3,-25,-26,-27,-28,-29,-30,81,-21,-22,-23,-24,-31,-39,-34,-33,-60,]),'COLON':([5,67,109,],[-3,87,111,]),'RIGHT_SQR_BRACKET':([5,65,66,95,96,110,],[-3,85,-44,-43,-45,-46,]),'RIGHT_BRACE':([5,121,],[-3,122,]),'EXTENDS':([6,],[10,]),'NUMBER_LITERAL':([22,24,25,26,40,50,51,52,53,54,56,57,58,59,60,63,87,94,98,116,],[38,38,-40,-41,38,38,38,38,38,38,80,-35,-36,-37,-38,83,97,102,104,118,]),'STRING_LITERAL':([22,24,25,26,40,50,51,52,53,54,],[39,39,-40,-41,39,39,39,39,39,39,]),'LEFT_PAREN':([22,24,25,26,40,50,51,52,53,54,],[40,40,-40,-41,40,40,40,40,40,40,]),'LEFT_SQR_BRACKET':([24,25,26,],[44,-40,-41,]),'Nat':([55,],[78,]),'LEFT_BRACE':([82,],[93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'attribute':([3,6,8,9,10,20,21,22,24,27,40,41,49,50,51,52,53,54,55,56,63,64,69,70,93,99,100,107,108,111,114,120,],[4,7,7,7,30,30,30,36,42,7,36,62,71,36,36,36,36,36,77,79,79,84,89,91,101,105,106,109,110,91,91,121,]),'extends':([6,],[8,]),'statements':([6,8,],[9,27,]),'statement':([6,8,9,27,],[11,11,28,28,]),'constants_statement':([6,8,9,27,],[12,12,12,12,]),'variables_statement':([6,8,9,27,],[13,13,13,13,]),'assume_statement':([6,8,9,27,],[14,14,14,14,]),'type_invariant':([6,8,9,27,],[15,15,15,15,]),'set_definition':([6,8,9,27,],[16,16,16,16,]),'bean_value_count':([6,8,9,27,],[17,17,17,17,]),'function_declaration':([6,8,9,27,],[18,18,18,18,]),'init':([6,8,9,27,],[19,19,19,19,]),'equals':([7,23,],[24,41,]),'names':([10,20,21,],[29,31,32,]),'expression':([22,24,40,50,51,52,53,54,],[33,43,61,72,73,74,75,76,]),'set_membership':([22,24,40,50,51,52,53,54,],[34,34,34,34,34,34,34,34,]),'comparison':([22,24,40,50,51,52,53,54,],[35,35,35,35,35,35,35,35,]),'type_invariant_expression':([22,24,40,50,51,52,53,54,],[37,37,37,37,37,37,37,37,]),'bean_equation':([24,],[45,]),'function_conditions':([24,],[46,]),'dot_access':([24,70,111,114,],[47,90,113,115,]),'function_condition':([24,69,],[48,88,]),'comparison_rule':([36,42,84,89,105,],[56,63,94,98,94,]),'set_info':([44,],[65,]),'set_individual_info':([44,86,],[66,95,]),'except_section':([46,],[68,]),'init_set_statement':([82,],[92,]),'set_scope':([87,],[96,]),'order':([111,],[112,]),'range_of_values':([116,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements','module',6,'p_module','parser.py',38),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements','module',5,'p_module','parser.py',39),
  ('attribute -> ATTRIBUTE','attribute',1,'p_attribute','parser.py',47),
  ('dot_access -> attribute DOT attribute','dot_access',3,'p_dot_access','parser.py',52),
  ('extends -> EXTENDS names','extends',2,'p_extends','parser.py',56),
  ('names -> names COMMA attribute','names',3,'p_names','parser.py',62),
  ('names -> attribute','names',1,'p_names','parser.py',63),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',75),
  ('statements -> statement','statements',1,'p_statements','parser.py',76),
  ('statement -> constants_statement','statement',1,'p_statement','parser.py',89),
  ('statement -> variables_statement','statement',1,'p_statement','parser.py',90),
  ('statement -> assume_statement','statement',1,'p_statement','parser.py',91),
  ('statement -> type_invariant','statement',1,'p_statement','parser.py',92),
  ('statement -> set_definition','statement',1,'p_statement','parser.py',93),
  ('statement -> bean_value_count','statement',1,'p_statement','parser.py',94),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',95),
  ('statement -> init','statement',1,'p_statement','parser.py',96),
  ('constants_statement -> CONSTANTS names','constants_statement',2,'p_constants_statement','parser.py',101),
  ('variables_statement -> VARIABLES names','variables_statement',2,'p_variables_statement','parser.py',106),
  ('assume_statement -> ASSUME expression AND expression','assume_statement',4,'p_assume_statement','parser.py',111),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',117),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression STAR expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',120),
  ('expression -> set_membership','expression',1,'p_expression','parser.py',121),
  ('expression -> comparison','expression',1,'p_expression','parser.py',122),
  ('expression -> attribute','expression',1,'p_expression','parser.py',123),
  ('expression -> type_invariant_expression','expression',1,'p_expression','parser.py',124),
  ('expression -> NUMBER_LITERAL','expression',1,'p_expression','parser.py',125),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser.py',126),
  ('type_invariant_expression -> attribute IN_A_SET attribute','type_invariant_expression',3,'p_type_invariant_expression','parser.py',140),
  ('init_expression -> <empty>','init_expression',0,'p_init_expression','parser.py',144),
  ('comparison -> attribute comparison_rule NUMBER_LITERAL','comparison',3,'p_comparison','parser.py',147),
  ('comparison -> attribute comparison_rule attribute','comparison',3,'p_comparison','parser.py',148),
  ('comparison_rule -> GREATER_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',152),
  ('comparison_rule -> LESS_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',153),
  ('comparison_rule -> GREATER_THAN','comparison_rule',1,'p_comparison_rule','parser.py',154),
  ('comparison_rule -> LESS_THAN','comparison_rule',1,'p_comparison_rule','parser.py',155),
  ('set_membership -> attribute IN_A_SET Nat','set_membership',3,'p_set_membership','parser.py',159),
  ('equals -> EQUALS_DEFINITIONS','equals',1,'p_equals','parser.py',163),
  ('equals -> EQUALS_EQUALITY','equals',1,'p_equals','parser.py',164),
  ('set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET','set_definition',5,'p_set_definition','parser.py',168),
  ('set_info -> set_info COMMA set_individual_info','set_info',3,'p_set_info','parser.py',175),
  ('set_info -> set_individual_info','set_info',1,'p_set_info','parser.py',176),
  ('set_individual_info -> ATTRIBUTE COLON set_scope','set_individual_info',3,'p_set_individual_info','parser.py',183),
  ('set_scope -> NUMBER_LITERAL DOT DOT attribute','set_scope',4,'p_set_scope','parser.py',188),
  ('type_invariant -> attribute equals expression','type_invariant',3,'p_type_invariant','parser.py',193),
  ('init -> INIT equals attribute IN_A_SET init_set_statement','init',5,'p_init','parser.py',198),
  ('init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order','init_set_statement',6,'p_init_set_statement','parser.py',203),
  ('order -> dot_access PLUS dot_access IN_A_SET range_of_values','order',5,'p_order','parser.py',208),
  ('range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE','range_of_values',5,'p_range_of_values','parser.py',214),
  ('bean_value_count -> attribute equals bean_equation','bean_value_count',3,'p_bean_value_count','parser.py',220),
  ('bean_equation -> dot_access PLUS dot_access','bean_equation',3,'p_bean_equation','parser.py',226),
  ('function_declaration -> attribute equals function_conditions except_section','function_declaration',4,'p_function_declaration','parser.py',253),
  ('function_conditions -> function_condition','function_conditions',1,'p_function_conditions','parser.py',258),
  ('function_conditions -> function_conditions AND function_condition','function_conditions',3,'p_function_conditions','parser.py',259),
  ('function_condition -> attribute comparison_rule NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',268),
  ('function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL','function_condition',5,'p_function_condition','parser.py',269),
  ('except_section -> <empty>','except_section',0,'p_except_section','parser.py',277),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_expression_group','parser.py',291),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',296),
]
