
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQUALS_DEFINITIONSNOT_EQUALSnonassocLESS_THANLESS_OR_EQGREATER_THANGREATER_OR_EQleftPLUSMINUSleftSTARDIVIDEMODULUSnonassocLEFT_PARENRIGHT_PARENAND ARROW ASSUME AT ATTRIBUTE BACK_SLASH CHECK COLON COMMA CONSTANTS DIVIDE DOT EDGE ELSE EQUALS_DEFINITIONS EQUALS_EQUALITY EXCLAMATION_MARK EXTENDS FORWARD_SLASH GOAL GRAPH GREATER_OR_EQ GREATER_THAN IF INIT INVARIANT IN_A_SET LEFT_BRACE LEFT_PAREN LEFT_SQR_BRACKET LESS_OR_EQ LESS_THAN MINUS MODULE MODULE_WRAPPER MODULUS NEXT NODE NOT_EQUALS NUMBER_LITERAL Nat OR PLUS RIGHT_BRACE RIGHT_PAREN RIGHT_SQR_BRACKET SEMICOLON SINGLE_QUOTE SPEC STAR STRING_LITERAL THEN UNCHANGED UNDERSCORE VARIABLES VARIABLE_NAMEmodule : MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements\n              | MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statementsattribute : ATTRIBUTEextends : EXTENDS namesnames : names COMMA attribute\n             | attributestatements : statements statement\n                    | statementstatement :   constants_statement\n                   | variables_statement\n                   | assume_statementconstants_statement : CONSTANTS namesvariables_statement : VARIABLES namesassume_statement : ASSUME expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression DIVIDE expression\n                  | set_membership\n                  | comparison\n                  | attribute\n                  | NUMBER_LITERAL\n                  | STRING_LITERALcomparison : attribute comparison_rule NUMBER_LITERAL\n                  | attribute comparison_rule attributecomparison_rule :   GREATER_OR_EQ\n                    | LESS_OR_EQ\n                    | GREATER_THAN                         \n                    | LESS_THAN set_membership : attribute IN_A_SET Nat set_of_records : LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKETset_info : set_info COMMA set_individual_info\n                      | set_individual_infoset_individual_info : ATTRIBUTE COLON set_scopeset_scope : NUMBER_LITERAL DOT DOT attributeexpression : LEFT_PAREN expression RIGHT_PARENinit_declaration : INIT EQUALS_DEFINITIONS expressionempty :'
    
_lr_action_items = {'MODULE_WRAPPER':([0,4,5,],[2,6,-3,]),'$end':([1,5,8,10,11,12,13,17,18,20,21,22,24,25,26,27,28,43,44,45,46,47,48,49,50,51,52,],[0,-3,-2,-8,-9,-10,-11,-1,-7,-6,-12,-13,-19,-20,-21,-22,-23,-5,-14,-15,-16,-17,-18,-30,-25,-24,-36,]),'MODULE':([2,],[3,]),'ATTRIBUTE':([3,9,14,15,16,29,30,31,32,33,34,35,37,38,39,40,41,],[5,5,5,5,5,5,5,5,5,5,5,5,5,-26,-27,-28,-29,]),'COMMA':([5,19,20,21,22,43,],[-3,30,-6,30,30,-5,]),'CONSTANTS':([5,6,7,8,10,11,12,13,17,18,19,20,21,22,24,25,26,27,28,43,44,45,46,47,48,49,50,51,52,],[-3,14,14,14,-8,-9,-10,-11,14,-7,-4,-6,-12,-13,-19,-20,-21,-22,-23,-5,-14,-15,-16,-17,-18,-30,-25,-24,-36,]),'VARIABLES':([5,6,7,8,10,11,12,13,17,18,19,20,21,22,24,25,26,27,28,43,44,45,46,47,48,49,50,51,52,],[-3,15,15,15,-8,-9,-10,-11,15,-7,-4,-6,-12,-13,-19,-20,-21,-22,-23,-5,-14,-15,-16,-17,-18,-30,-25,-24,-36,]),'ASSUME':([5,6,7,8,10,11,12,13,17,18,19,20,21,22,24,25,26,27,28,43,44,45,46,47,48,49,50,51,52,],[-3,16,16,16,-8,-9,-10,-11,16,-7,-4,-6,-12,-13,-19,-20,-21,-22,-23,-5,-14,-15,-16,-17,-18,-30,-25,-24,-36,]),'IN_A_SET':([5,26,],[-3,36,]),'GREATER_OR_EQ':([5,26,],[-3,38,]),'LESS_OR_EQ':([5,26,],[-3,39,]),'GREATER_THAN':([5,26,],[-3,40,]),'LESS_THAN':([5,26,],[-3,41,]),'AND':([5,23,24,25,26,27,28,45,46,47,48,49,50,51,52,],[-3,31,-19,-20,-21,-22,-23,-15,-16,-17,-18,-30,-25,-24,-36,]),'PLUS':([5,23,24,25,26,27,28,42,44,45,46,47,48,49,50,51,52,],[-3,32,-19,-20,-21,-22,-23,32,32,-15,-16,-17,-18,-30,-25,-24,-36,]),'MINUS':([5,23,24,25,26,27,28,42,44,45,46,47,48,49,50,51,52,],[-3,33,-19,-20,-21,-22,-23,33,33,-15,-16,-17,-18,-30,-25,-24,-36,]),'STAR':([5,23,24,25,26,27,28,42,44,45,46,47,48,49,50,51,52,],[-3,34,-19,-20,-21,-22,-23,34,34,34,34,-17,-18,-30,-25,-24,-36,]),'DIVIDE':([5,23,24,25,26,27,28,42,44,45,46,47,48,49,50,51,52,],[-3,35,-19,-20,-21,-22,-23,35,35,35,35,-17,-18,-30,-25,-24,-36,]),'RIGHT_PAREN':([5,24,25,26,27,28,42,45,46,47,48,49,50,51,52,],[-3,-19,-20,-21,-22,-23,52,-15,-16,-17,-18,-30,-25,-24,-36,]),'EXTENDS':([6,],[9,]),'NUMBER_LITERAL':([16,29,31,32,33,34,35,37,38,39,40,41,],[27,27,27,27,27,27,27,51,-26,-27,-28,-29,]),'STRING_LITERAL':([16,29,31,32,33,34,35,],[28,28,28,28,28,28,28,]),'LEFT_PAREN':([16,29,31,32,33,34,35,],[29,29,29,29,29,29,29,]),'Nat':([36,],[49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'attribute':([3,9,14,15,16,29,30,31,32,33,34,35,37,],[4,20,20,20,26,26,43,26,26,26,26,26,50,]),'extends':([6,],[7,]),'statements':([6,7,],[8,17,]),'statement':([6,7,8,17,],[10,10,18,18,]),'constants_statement':([6,7,8,17,],[11,11,11,11,]),'variables_statement':([6,7,8,17,],[12,12,12,12,]),'assume_statement':([6,7,8,17,],[13,13,13,13,]),'names':([9,14,15,],[19,21,22,]),'expression':([16,29,31,32,33,34,35,],[23,42,44,45,46,47,48,]),'set_membership':([16,29,31,32,33,34,35,],[24,24,24,24,24,24,24,]),'comparison':([16,29,31,32,33,34,35,],[25,25,25,25,25,25,25,]),'comparison_rule':([26,],[37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements','module',6,'p_module','parser.py',32),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements','module',5,'p_module','parser.py',33),
  ('attribute -> ATTRIBUTE','attribute',1,'p_attribute','parser.py',41),
  ('extends -> EXTENDS names','extends',2,'p_extends','parser.py',46),
  ('names -> names COMMA attribute','names',3,'p_names','parser.py',52),
  ('names -> attribute','names',1,'p_names','parser.py',53),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',63),
  ('statements -> statement','statements',1,'p_statements','parser.py',64),
  ('statement -> constants_statement','statement',1,'p_statement','parser.py',77),
  ('statement -> variables_statement','statement',1,'p_statement','parser.py',78),
  ('statement -> assume_statement','statement',1,'p_statement','parser.py',79),
  ('constants_statement -> CONSTANTS names','constants_statement',2,'p_constants_statement','parser.py',84),
  ('variables_statement -> VARIABLES names','variables_statement',2,'p_variables_statement','parser.py',89),
  ('assume_statement -> ASSUME expression AND expression','assume_statement',4,'p_assume_statement','parser.py',94),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',100),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',101),
  ('expression -> expression STAR expression','expression',3,'p_expression','parser.py',102),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',103),
  ('expression -> set_membership','expression',1,'p_expression','parser.py',104),
  ('expression -> comparison','expression',1,'p_expression','parser.py',105),
  ('expression -> attribute','expression',1,'p_expression','parser.py',106),
  ('expression -> NUMBER_LITERAL','expression',1,'p_expression','parser.py',107),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser.py',108),
  ('comparison -> attribute comparison_rule NUMBER_LITERAL','comparison',3,'p_comparison','parser.py',122),
  ('comparison -> attribute comparison_rule attribute','comparison',3,'p_comparison','parser.py',123),
  ('comparison_rule -> GREATER_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',127),
  ('comparison_rule -> LESS_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',128),
  ('comparison_rule -> GREATER_THAN','comparison_rule',1,'p_comparison_rule','parser.py',129),
  ('comparison_rule -> LESS_THAN','comparison_rule',1,'p_comparison_rule','parser.py',130),
  ('set_membership -> attribute IN_A_SET Nat','set_membership',3,'p_set_membership','parser.py',134),
  ('set_of_records -> LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET','set_of_records',3,'p_set_of_records','parser.py',139),
  ('set_info -> set_info COMMA set_individual_info','set_info',3,'p_set_info','parser.py',144),
  ('set_info -> set_individual_info','set_info',1,'p_set_info','parser.py',145),
  ('set_individual_info -> ATTRIBUTE COLON set_scope','set_individual_info',3,'p_set_individual_info','parser.py',152),
  ('set_scope -> NUMBER_LITERAL DOT DOT attribute','set_scope',4,'p_set_scope','parser.py',156),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_expression_group','parser.py',177),
  ('init_declaration -> INIT EQUALS_DEFINITIONS expression','init_declaration',3,'p_init_declaration','parser.py',187),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',193),
]
