
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUIVALENCE_OPERATORleftANDnonassocEQUALS_DEFINITIONSNOT_EQUALSnonassocLESS_THANLESS_OR_EQGREATER_THANGREATER_OR_EQleftPLUSMINUSleftSTARDIVIDEMODULUSnonassocLEFT_PARENRIGHT_PARENAND ARROW ASSUME AT ATTRIBUTE ATTRIBUTE_MAY_CHANGE BACK_SLASH CHECK COLON COMMA CONSTANTS DIVIDE DOT EDGE ELSE ENABLED EQUALS_DEFINITIONS EQUALS_EQUALITY EQUIVALENCE_OPERATOR EVENTUALLY EXCEPT EXCLAMATION_MARK EXTENDS FORWARD_SLASH GOAL GRAPH GREATER_OR_EQ GREATER_THAN IF INIT INVARIANT IN_A_SET LEFT_BRACE LEFT_PAREN LEFT_SQR_BRACKET LESS_OR_EQ LESS_THAN MINUS MODULE MODULE_WRAPPER MODULUS NEXT_VALUE_OF_ATTRIBUTE NODE NOT_EQUALS NUMBER_LITERAL Nat OR PLUS RIGHT_BRACE RIGHT_PAREN RIGHT_SQR_BRACKET SEMICOLON SINGLE_QUOTE SPEC STAR STRING_LITERAL THEN UNCHANGED UNDERSCORE VARIABLES VARIABLE_NAMEmodule : MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements\n              | MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statementsattribute : ATTRIBUTEdot_access : attribute DOT attribute\n                  | NEXT_VALUE_OF_ATTRIBUTE DOT attributeextends : EXTENDS namesnames : names COMMA attribute\n             | attributestatements : statements statement\n                    | statementstatement :   constants_statement\n                   | variables_statement\n                   | assume_statement\n                   | type_invariant\n                   | set_definition\n                   | bean_value_count\n                   | function_declaration\n                   | termination_statement\n                   | next_state_relation\n                   | action_formula_definition\n                   | liveness_property\n                   | loop_invariant\n                   | initconstants_statement : CONSTANTS namesvariables_statement : VARIABLES namesassume_statement : ASSUME expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression DIVIDE expression\n                  | set_membership\n                  | comparison\n                  | attribute\n                  | type_invariant_expression\n                  | NUMBER_LITERAL\n                  | STRING_LITERALtype_invariant_expression : attribute IN_A_SET attributeinit_expression : comparison : attribute comparison_rule NUMBER_LITERAL\n                  | attribute comparison_rule attributecomparison_rule :   GREATER_OR_EQ\n                    | LESS_OR_EQ\n                    | GREATER_THAN                         \n                    | LESS_THAN set_membership : attribute IN_A_SET Nat equals : EQUALS_DEFINITIONS\n              | EQUALS_EQUALITYset_definition : attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKETset_info : set_info COMMA set_individual_info\n                      | set_individual_infoset_individual_info : ATTRIBUTE COLON set_scopeset_scope : NUMBER_LITERAL DOT DOT attributetype_invariant : attribute equals expressioninit : INIT equals attribute IN_A_SET init_set_statementinit_set_statement : LEFT_BRACE attribute IN_A_SET attribute COLON orderorder : dot_access PLUS dot_access IN_A_SET range_of_valuesrange_of_values :  NUMBER_LITERAL DOT DOT attribute RIGHT_BRACEbean_value_count : attribute equals bean_equationbean_equation : dot_access PLUS dot_accessfunction_declaration : attribute equals AND function_conditions except_sectionfunction_conditions : function_condition\n                           | function_conditions AND function_condition\n                           | function_conditions OR function_conditionfunction_condition : attribute comparison_rule NUMBER_LITERAL\n                          | attribute equals NUMBER_LITERAL\n                          | UNCHANGED attribute\n                          | attribute\n                          | attribute DOT attribute comparison_rule NUMBER_LITERALexcept_section : AND NEXT_VALUE_OF_ATTRIBUTE equals except_clauseexcept_clause : LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET\n                     | LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKETtermination_statement : attribute equals AND function_conditionsnext_state_relation : attribute equals OR function_conditionsaction_formula_definition : attribute equals action_formulaaction_formula : LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGEformula_details : NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute\n                       | dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERALliveness_property : attribute equals property_detailsproperty_details : EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PARENloop_invariant : attribute equals action_formulaexpression : LEFT_PAREN expression RIGHT_PARENempty :'
    
_lr_action_items = {'MODULE_WRAPPER':([0,4,5,],[2,6,-3,]),'$end':([1,5,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,33,35,36,37,39,40,41,42,43,44,47,48,50,53,54,77,78,79,81,85,86,87,88,89,90,91,92,93,94,95,97,98,106,108,110,113,114,122,123,125,127,136,138,142,143,152,165,177,179,187,],[0,-3,-2,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-1,-9,-8,-24,-25,-31,-32,-33,-34,-35,-36,-33,-53,-58,-74,-78,-67,-72,-61,-73,-7,-26,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-48,-60,-66,-59,-5,-54,-64,-65,-62,-63,-79,-75,-68,-69,-55,-56,-70,-57,-71,]),'MODULE':([2,],[3,]),'ATTRIBUTE':([3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,62,63,64,65,66,67,68,69,72,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,104,105,106,107,108,109,110,112,113,114,115,122,123,125,127,131,132,136,137,138,141,142,143,144,149,152,154,156,158,160,165,173,177,179,181,187,],[5,-3,5,5,5,5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,5,5,5,5,-46,-47,5,-9,-6,-8,-24,-25,-31,-32,-33,-34,-35,-36,5,5,-33,-53,76,-58,5,5,-74,-78,5,5,5,5,5,5,5,5,-41,-42,-43,-44,5,-67,-72,-61,5,-73,5,5,-7,-26,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-48,76,5,5,5,-60,5,-66,5,-59,5,-5,-54,5,-64,-65,-62,-63,5,5,-79,5,-75,5,-68,-69,5,5,-55,5,5,5,5,-56,5,-70,-57,5,-71,]),'EQUALS_DEFINITIONS':([5,7,28,39,40,41,42,43,44,77,87,88,89,90,91,92,93,94,95,126,140,161,163,182,],[-3,30,30,-31,-32,-33,-34,-35,-36,30,-27,-28,-29,-30,-37,-45,-40,-39,-81,30,30,30,30,30,]),'EQUALS_EQUALITY':([5,7,28,39,40,41,42,43,44,77,87,88,89,90,91,92,93,94,95,126,140,161,163,182,],[-3,31,31,-31,-32,-33,-34,-35,-36,31,-27,-28,-29,-30,-37,-45,-40,-39,-81,31,31,31,31,31,]),'COMMA':([5,34,35,36,37,73,75,85,116,120,147,175,],[-3,58,-8,58,58,99,-50,-7,-49,-51,-52,178,]),'CONSTANTS':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,33,34,35,36,37,39,40,41,42,43,44,47,48,50,53,54,77,78,79,81,85,86,87,88,89,90,91,92,93,94,95,97,98,106,108,110,113,114,122,123,125,127,136,138,142,143,152,165,177,179,187,],[-3,25,25,25,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,25,-9,-6,-8,-24,-25,-31,-32,-33,-34,-35,-36,-33,-53,-58,-74,-78,-67,-72,-61,-73,-7,-26,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-48,-60,-66,-59,-5,-54,-64,-65,-62,-63,-79,-75,-68,-69,-55,-56,-70,-57,-71,]),'VARIABLES':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,33,34,35,36,37,39,40,41,42,43,44,47,48,50,53,54,77,78,79,81,85,86,87,88,89,90,91,92,93,94,95,97,98,106,108,110,113,114,122,123,125,127,136,138,142,143,152,165,177,179,187,],[-3,26,26,26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,26,-9,-6,-8,-24,-25,-31,-32,-33,-34,-35,-36,-33,-53,-58,-74,-78,-67,-72,-61,-73,-7,-26,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-48,-60,-66,-59,-5,-54,-64,-65,-62,-63,-79,-75,-68,-69,-55,-56,-70,-57,-71,]),'ASSUME':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,33,34,35,36,37,39,40,41,42,43,44,47,48,50,53,54,77,78,79,81,85,86,87,88,89,90,91,92,93,94,95,97,98,106,108,110,113,114,122,123,125,127,136,138,142,143,152,165,177,179,187,],[-3,27,27,27,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,27,-9,-6,-8,-24,-25,-31,-32,-33,-34,-35,-36,-33,-53,-58,-74,-78,-67,-72,-61,-73,-7,-26,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-48,-60,-66,-59,-5,-54,-64,-65,-62,-63,-79,-75,-68,-69,-55,-56,-70,-57,-71,]),'INIT':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,32,33,34,35,36,37,39,40,41,42,43,44,47,48,50,53,54,77,78,79,81,85,86,87,88,89,90,91,92,93,94,95,97,98,106,108,110,113,114,122,123,125,127,136,138,142,143,152,165,177,179,187,],[-3,28,28,28,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,28,-9,-6,-8,-24,-25,-31,-32,-33,-34,-35,-36,-33,-53,-58,-74,-78,-67,-72,-61,-73,-7,-26,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-48,-60,-66,-59,-5,-54,-64,-65,-62,-63,-79,-75,-68,-69,-55,-56,-70,-57,-71,]),'IN_A_SET':([5,41,47,71,97,113,129,159,],[-3,64,64,96,-4,-5,137,162,]),'GREATER_OR_EQ':([5,41,47,77,124,],[-3,66,66,66,66,]),'LESS_OR_EQ':([5,41,47,77,124,],[-3,67,67,67,67,]),'GREATER_THAN':([5,41,47,77,124,],[-3,68,68,68,68,]),'LESS_THAN':([5,41,47,77,118,124,],[-3,69,69,69,131,69,]),'AND':([5,29,30,31,38,39,40,41,42,43,44,77,78,79,81,87,88,89,90,91,92,93,94,95,108,122,123,125,127,142,],[-3,51,-46,-47,59,-31,-32,-33,-34,-35,-36,-67,105,-61,109,-27,-28,-29,-30,-37,-45,-40,-39,-81,-66,-64,-65,-62,-63,-68,]),'PLUS':([5,38,39,40,41,42,43,44,47,48,55,70,86,87,88,89,90,91,92,93,94,95,97,113,140,153,163,168,],[-3,60,-31,-32,-33,-34,-35,-36,-33,60,82,60,60,-27,-28,-29,-30,-37,-45,-40,-39,-81,-4,-5,60,156,60,172,]),'MINUS':([5,38,39,40,41,42,43,44,47,48,70,86,87,88,89,90,91,92,93,94,95,140,163,168,184,],[-3,61,-31,-32,-33,-34,-35,-36,-33,61,61,61,-27,-28,-29,-30,-37,-45,-40,-39,-81,61,61,171,185,]),'STAR':([5,38,39,40,41,42,43,44,47,48,70,86,87,88,89,90,91,92,93,94,95,140,163,],[-3,62,-31,-32,-33,-34,-35,-36,-33,62,62,62,62,62,-29,-30,-37,-45,-40,-39,-81,62,62,]),'DIVIDE':([5,38,39,40,41,42,43,44,47,48,70,86,87,88,89,90,91,92,93,94,95,140,163,],[-3,63,-31,-32,-33,-34,-35,-36,-33,63,63,63,63,63,-29,-30,-37,-45,-40,-39,-81,63,63,]),'DOT':([5,47,57,77,111,118,121,133,155,166,169,180,],[-3,72,84,104,72,84,133,141,158,169,173,181,]),'RIGHT_PAREN':([5,39,40,41,42,43,44,70,87,88,89,90,91,92,93,94,95,128,],[-3,-31,-32,-33,-34,-35,-36,95,-27,-28,-29,-30,-37,-45,-40,-39,-81,136,]),'OR':([5,29,30,31,77,78,79,81,108,122,123,125,127,142,],[-3,52,-46,-47,-67,107,-61,107,-66,-64,-65,-62,-63,-68,]),'MODULUS':([5,97,113,119,157,],[-3,-4,-5,132,160,]),'RIGHT_SQR_BRACKET':([5,49,73,75,116,117,120,139,147,170,174,186,],[-3,74,98,-50,-49,130,-51,-76,-52,-77,177,187,]),'COLON':([5,76,145,],[-3,101,149,]),'EXCEPT':([5,148,],[-3,151,]),'RIGHT_BRACE':([5,176,],[-3,179,]),'EXTENDS':([6,],[10,]),'NUMBER_LITERAL':([27,29,30,31,45,59,60,61,62,63,65,66,67,68,69,101,102,103,132,134,146,160,162,167,171,172,185,],[43,43,-46,-47,43,43,43,43,43,43,94,-41,-42,-43,-44,121,122,123,43,142,150,43,166,170,174,175,186,]),'STRING_LITERAL':([27,29,30,31,45,59,60,61,62,63,132,160,],[44,44,-46,-47,44,44,44,44,44,44,44,44,]),'LEFT_PAREN':([27,29,30,31,45,56,59,60,61,62,63,132,160,],[45,45,-46,-47,45,83,45,45,45,45,45,45,45,]),'LEFT_SQR_BRACKET':([29,30,31,74,135,],[49,-46,-47,100,144,]),'EVENTUALLY':([29,30,31,],[56,-46,-47,]),'NEXT_VALUE_OF_ATTRIBUTE':([29,30,31,82,100,105,149,154,156,],[57,-46,-47,57,118,126,57,57,57,]),'AT':([30,31,164,183,],[-46,-47,168,184,]),'UNCHANGED':([51,52,105,107,109,],[80,80,80,80,80,]),'Nat':([64,],[92,]),'ENABLED':([83,],[112,]),'LEFT_BRACE':([96,],[115,]),'ATTRIBUTE_MAY_CHANGE':([130,],[138,]),'EQUIVALENCE_OPERATOR':([150,],[154,]),'EXCLAMATION_MARK':([151,178,],[155,180,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'attribute':([3,6,8,9,10,25,26,27,29,32,45,46,51,52,58,59,60,61,62,63,64,65,72,80,82,84,100,104,105,107,109,112,115,131,132,137,141,144,149,154,156,158,160,173,181,],[4,7,7,7,35,35,35,41,47,7,41,71,77,77,85,41,41,41,41,41,91,93,97,108,111,113,111,124,77,77,77,128,129,139,41,145,147,148,111,111,111,161,41,176,182,]),'extends':([6,],[8,]),'statements':([6,8,],[9,32,]),'statement':([6,8,9,32,],[11,11,33,33,]),'constants_statement':([6,8,9,32,],[12,12,12,12,]),'variables_statement':([6,8,9,32,],[13,13,13,13,]),'assume_statement':([6,8,9,32,],[14,14,14,14,]),'type_invariant':([6,8,9,32,],[15,15,15,15,]),'set_definition':([6,8,9,32,],[16,16,16,16,]),'bean_value_count':([6,8,9,32,],[17,17,17,17,]),'function_declaration':([6,8,9,32,],[18,18,18,18,]),'termination_statement':([6,8,9,32,],[19,19,19,19,]),'next_state_relation':([6,8,9,32,],[20,20,20,20,]),'action_formula_definition':([6,8,9,32,],[21,21,21,21,]),'liveness_property':([6,8,9,32,],[22,22,22,22,]),'loop_invariant':([6,8,9,32,],[23,23,23,23,]),'init':([6,8,9,32,],[24,24,24,24,]),'equals':([7,28,77,126,140,161,163,182,],[29,46,103,135,146,164,167,183,]),'names':([10,25,26,],[34,36,37,]),'expression':([27,29,45,59,60,61,62,63,132,160,],[38,48,70,86,87,88,89,90,140,163,]),'set_membership':([27,29,45,59,60,61,62,63,132,160,],[39,39,39,39,39,39,39,39,39,39,]),'comparison':([27,29,45,59,60,61,62,63,132,160,],[40,40,40,40,40,40,40,40,40,40,]),'type_invariant_expression':([27,29,45,59,60,61,62,63,132,160,],[42,42,42,42,42,42,42,42,42,42,]),'bean_equation':([29,],[50,]),'action_formula':([29,],[53,]),'property_details':([29,],[54,]),'dot_access':([29,82,100,149,154,156,],[55,110,119,153,157,159,]),'comparison_rule':([41,47,77,124,],[65,65,102,134,]),'set_info':([49,],[73,]),'set_individual_info':([49,99,],[75,116,]),'function_conditions':([51,52,],[78,81,]),'function_condition':([51,52,105,107,109,],[79,79,125,127,125,]),'except_section':([78,],[106,]),'init_set_statement':([96,],[114,]),'formula_details':([100,],[117,]),'set_scope':([101,],[120,]),'except_clause':([135,],[143,]),'order':([149,],[152,]),'range_of_values':([162,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements','module',6,'p_module','parser.py',30),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements','module',5,'p_module','parser.py',31),
  ('attribute -> ATTRIBUTE','attribute',1,'p_attribute','parser.py',39),
  ('dot_access -> attribute DOT attribute','dot_access',3,'p_dot_access','parser.py',44),
  ('dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute','dot_access',3,'p_dot_access','parser.py',45),
  ('extends -> EXTENDS names','extends',2,'p_extends','parser.py',49),
  ('names -> names COMMA attribute','names',3,'p_names','parser.py',55),
  ('names -> attribute','names',1,'p_names','parser.py',56),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',68),
  ('statements -> statement','statements',1,'p_statements','parser.py',69),
  ('statement -> constants_statement','statement',1,'p_statement','parser.py',82),
  ('statement -> variables_statement','statement',1,'p_statement','parser.py',83),
  ('statement -> assume_statement','statement',1,'p_statement','parser.py',84),
  ('statement -> type_invariant','statement',1,'p_statement','parser.py',85),
  ('statement -> set_definition','statement',1,'p_statement','parser.py',86),
  ('statement -> bean_value_count','statement',1,'p_statement','parser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',88),
  ('statement -> termination_statement','statement',1,'p_statement','parser.py',89),
  ('statement -> next_state_relation','statement',1,'p_statement','parser.py',90),
  ('statement -> action_formula_definition','statement',1,'p_statement','parser.py',91),
  ('statement -> liveness_property','statement',1,'p_statement','parser.py',92),
  ('statement -> loop_invariant','statement',1,'p_statement','parser.py',93),
  ('statement -> init','statement',1,'p_statement','parser.py',94),
  ('constants_statement -> CONSTANTS names','constants_statement',2,'p_constants_statement','parser.py',99),
  ('variables_statement -> VARIABLES names','variables_statement',2,'p_variables_statement','parser.py',104),
  ('assume_statement -> ASSUME expression AND expression','assume_statement',4,'p_assume_statement','parser.py',109),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',115),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',116),
  ('expression -> expression STAR expression','expression',3,'p_expression','parser.py',117),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',118),
  ('expression -> set_membership','expression',1,'p_expression','parser.py',119),
  ('expression -> comparison','expression',1,'p_expression','parser.py',120),
  ('expression -> attribute','expression',1,'p_expression','parser.py',121),
  ('expression -> type_invariant_expression','expression',1,'p_expression','parser.py',122),
  ('expression -> NUMBER_LITERAL','expression',1,'p_expression','parser.py',123),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser.py',124),
  ('type_invariant_expression -> attribute IN_A_SET attribute','type_invariant_expression',3,'p_type_invariant_expression','parser.py',138),
  ('init_expression -> <empty>','init_expression',0,'p_init_expression','parser.py',142),
  ('comparison -> attribute comparison_rule NUMBER_LITERAL','comparison',3,'p_comparison','parser.py',145),
  ('comparison -> attribute comparison_rule attribute','comparison',3,'p_comparison','parser.py',146),
  ('comparison_rule -> GREATER_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',150),
  ('comparison_rule -> LESS_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',151),
  ('comparison_rule -> GREATER_THAN','comparison_rule',1,'p_comparison_rule','parser.py',152),
  ('comparison_rule -> LESS_THAN','comparison_rule',1,'p_comparison_rule','parser.py',153),
  ('set_membership -> attribute IN_A_SET Nat','set_membership',3,'p_set_membership','parser.py',157),
  ('equals -> EQUALS_DEFINITIONS','equals',1,'p_equals','parser.py',161),
  ('equals -> EQUALS_EQUALITY','equals',1,'p_equals','parser.py',162),
  ('set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET','set_definition',5,'p_set_definition','parser.py',166),
  ('set_info -> set_info COMMA set_individual_info','set_info',3,'p_set_info','parser.py',173),
  ('set_info -> set_individual_info','set_info',1,'p_set_info','parser.py',174),
  ('set_individual_info -> ATTRIBUTE COLON set_scope','set_individual_info',3,'p_set_individual_info','parser.py',181),
  ('set_scope -> NUMBER_LITERAL DOT DOT attribute','set_scope',4,'p_set_scope','parser.py',186),
  ('type_invariant -> attribute equals expression','type_invariant',3,'p_type_invariant','parser.py',191),
  ('init -> INIT equals attribute IN_A_SET init_set_statement','init',5,'p_init','parser.py',196),
  ('init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order','init_set_statement',6,'p_init_set_statement','parser.py',201),
  ('order -> dot_access PLUS dot_access IN_A_SET range_of_values','order',5,'p_order','parser.py',206),
  ('range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE','range_of_values',5,'p_range_of_values','parser.py',212),
  ('bean_value_count -> attribute equals bean_equation','bean_value_count',3,'p_bean_value_count','parser.py',218),
  ('bean_equation -> dot_access PLUS dot_access','bean_equation',3,'p_bean_equation','parser.py',224),
  ('function_declaration -> attribute equals AND function_conditions except_section','function_declaration',5,'p_function_declaration','parser.py',237),
  ('function_conditions -> function_condition','function_conditions',1,'p_function_conditions','parser.py',242),
  ('function_conditions -> function_conditions AND function_condition','function_conditions',3,'p_function_conditions','parser.py',243),
  ('function_conditions -> function_conditions OR function_condition','function_conditions',3,'p_function_conditions','parser.py',244),
  ('function_condition -> attribute comparison_rule NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',253),
  ('function_condition -> attribute equals NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',254),
  ('function_condition -> UNCHANGED attribute','function_condition',2,'p_function_condition','parser.py',255),
  ('function_condition -> attribute','function_condition',1,'p_function_condition','parser.py',256),
  ('function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL','function_condition',5,'p_function_condition','parser.py',257),
  ('except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause','except_section',4,'p_except_section','parser.py',269),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',11,'p_except_clause','parser.py',274),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',19,'p_except_clause','parser.py',275),
  ('termination_statement -> attribute equals AND function_conditions','termination_statement',4,'p_termination_statement','parser.py',284),
  ('next_state_relation -> attribute equals OR function_conditions','next_state_relation',4,'p_next_state_relation','parser.py',290),
  ('action_formula_definition -> attribute equals action_formula','action_formula_definition',3,'p_action_formula_definition','parser.py',296),
  ('action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE','action_formula',6,'p_action_formula','parser.py',301),
  ('formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute','formula_details',3,'p_formula_details','parser.py',307),
  ('formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL','formula_details',11,'p_formula_details','parser.py',308),
  ('liveness_property -> attribute equals property_details','liveness_property',3,'p_liveness_property','parser.py',317),
  ('property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN','property_details',5,'p_property_details','parser.py',323),
  ('loop_invariant -> attribute equals action_formula','loop_invariant',3,'p_loop_invariant','parser.py',331),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_expression_group','parser.py',352),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',357),
]
