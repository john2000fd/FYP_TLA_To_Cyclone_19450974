
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUIVALENCE_OPERATORleftANDnonassocEQUALS_DEFINITIONSNOT_EQUALSnonassocLESS_THANLESS_OR_EQGREATER_THANGREATER_OR_EQleftPLUSMINUSleftSTARDIVIDEMODULUSnonassocLEFT_PARENRIGHT_PARENAND ARROW ASSUME AT ATTRIBUTE ATTRIBUTE_MAY_CHANGE BACK_SLASH CHECK COLON COMMA CONSTANTS DIVIDE DOT EDGE ELSE ENABLED EQUALS_DEFINITIONS EQUALS_EQUALITY EQUIVALENCE_OPERATOR EVENTUALLY EXCEPT EXCLAMATION_MARK EXTENDS FORWARD_SLASH GOAL GRAPH GREATER_OR_EQ GREATER_THAN IF INIT INVARIANT IN_A_SET LEFT_BRACE LEFT_PAREN LEFT_SQR_BRACKET LESS_OR_EQ LESS_THAN MINUS MODULE MODULE_WRAPPER MODULUS NEXT_VALUE_OF_ATTRIBUTE NODE NOT_EQUALS NUMBER_LITERAL Nat OR PLUS RIGHT_BRACE RIGHT_PAREN RIGHT_SQR_BRACKET SEMICOLON SINGLE_QUOTE SPEC STAR STRING_LITERAL THEN UNCHANGED UNDERSCORE VARIABLES VARIABLE_NAMEmodule : MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements\n              | MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statementsattribute : ATTRIBUTEdot_access : attribute DOT attribute\n                  | NEXT_VALUE_OF_ATTRIBUTE DOT attributeextends : EXTENDS namesnames : names COMMA attribute\n             | attributestatements : statements statement\n                    | statementstatement :   constants_statement\n                   | variables_statement\n                   | assume_statement\n                   | type_invariant\n                   | set_definition\n                   | bean_value_count\n                   | function_declaration\n                   | termination_statement\n                   | next_state_relation\n                   | action_formula_definition\n                   | liveness_property\n                   | initconstants_statement : CONSTANTS namesvariables_statement : VARIABLES namesassume_statement : ASSUME expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression DIVIDE expression\n                  | set_membership\n                  | comparison\n                  | attribute\n                  | type_invariant_expression\n                  | NUMBER_LITERAL\n                  | STRING_LITERALtype_invariant_expression : attribute IN_A_SET attributeinit_expression : comparison : attribute comparison_rule NUMBER_LITERAL\n                  | attribute comparison_rule attributecomparison_rule :   GREATER_OR_EQ\n                    | LESS_OR_EQ\n                    | GREATER_THAN                         \n                    | LESS_THAN set_membership : attribute IN_A_SET Nat equals : EQUALS_DEFINITIONS\n              | EQUALS_EQUALITYset_definition : attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKETset_info : set_info COMMA set_individual_info\n                      | set_individual_infoset_individual_info : ATTRIBUTE COLON set_scopeset_scope : NUMBER_LITERAL DOT DOT attributetype_invariant : attribute equals expressioninit : INIT equals attribute IN_A_SET init_set_statementinit_set_statement : LEFT_BRACE attribute IN_A_SET attribute COLON orderorder : dot_access PLUS dot_access IN_A_SET range_of_valuesrange_of_values :  NUMBER_LITERAL DOT DOT attribute RIGHT_BRACEbean_value_count : attribute equals bean_equationbean_equation : dot_access PLUS dot_accessfunction_declaration : attribute equals AND function_conditions except_sectionfunction_conditions : function_condition\n                           | function_conditions AND function_condition\n                           | function_conditions OR function_conditionfunction_condition : attribute comparison_rule NUMBER_LITERAL\n                          | attribute equals NUMBER_LITERAL\n                          | UNCHANGED attribute\n                          | attribute\n                          | attribute DOT attribute comparison_rule NUMBER_LITERALexcept_section : AND NEXT_VALUE_OF_ATTRIBUTE equals except_clauseexcept_clause : LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET\n                     | LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKETtermination_statement : attribute equals AND function_conditionsnext_state_relation : attribute equals OR function_conditionsaction_formula_definition : attribute equals action_formulaaction_formula : LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGEformula_details : NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute\n                       | dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERALliveness_property : attribute equals property_detailsproperty_details : EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PARENloop_invariant : attribute equals action_formulaexpression : LEFT_PAREN expression RIGHT_PARENempty :'
    
_lr_action_items = {'MODULE_WRAPPER':([0,4,5,],[2,6,-3,]),'$end':([1,5,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,34,35,36,38,39,40,41,42,43,46,47,49,52,53,76,77,78,80,84,85,86,87,88,89,90,91,92,93,94,96,97,105,107,109,112,113,121,122,124,126,135,137,141,142,151,164,176,178,186,],[0,-3,-2,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-1,-9,-8,-23,-24,-30,-31,-32,-33,-34,-35,-32,-52,-57,-73,-77,-66,-71,-60,-72,-7,-25,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-47,-59,-65,-58,-5,-53,-63,-64,-61,-62,-78,-74,-67,-68,-54,-55,-69,-56,-70,]),'MODULE':([2,],[3,]),'ATTRIBUTE':([3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,66,67,68,71,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,103,104,105,106,107,108,109,111,112,113,114,121,122,124,126,130,131,135,136,137,140,141,142,143,148,151,153,155,157,159,164,172,176,178,180,186,],[5,-3,5,5,5,5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,5,5,5,5,-45,-46,5,-9,-6,-8,-23,-24,-30,-31,-32,-33,-34,-35,5,5,-32,-52,75,-57,5,5,-73,-77,5,5,5,5,5,5,5,5,-40,-41,-42,-43,5,-66,-71,-60,5,-72,5,5,-7,-25,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-47,75,5,5,5,-59,5,-65,5,-58,5,-5,-53,5,-63,-64,-61,-62,5,5,-78,5,-74,5,-67,-68,5,5,-54,5,5,5,5,-55,5,-69,-56,5,-70,]),'EQUALS_DEFINITIONS':([5,7,27,38,39,40,41,42,43,76,86,87,88,89,90,91,92,93,94,125,139,160,162,181,],[-3,29,29,-30,-31,-32,-33,-34,-35,29,-26,-27,-28,-29,-36,-44,-39,-38,-80,29,29,29,29,29,]),'EQUALS_EQUALITY':([5,7,27,38,39,40,41,42,43,76,86,87,88,89,90,91,92,93,94,125,139,160,162,181,],[-3,30,30,-30,-31,-32,-33,-34,-35,30,-26,-27,-28,-29,-36,-44,-39,-38,-80,30,30,30,30,30,]),'COMMA':([5,33,34,35,36,72,74,84,115,119,146,174,],[-3,57,-8,57,57,98,-49,-7,-48,-50,-51,177,]),'CONSTANTS':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,36,38,39,40,41,42,43,46,47,49,52,53,76,77,78,80,84,85,86,87,88,89,90,91,92,93,94,96,97,105,107,109,112,113,121,122,124,126,135,137,141,142,151,164,176,178,186,],[-3,24,24,24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,24,-9,-6,-8,-23,-24,-30,-31,-32,-33,-34,-35,-32,-52,-57,-73,-77,-66,-71,-60,-72,-7,-25,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-47,-59,-65,-58,-5,-53,-63,-64,-61,-62,-78,-74,-67,-68,-54,-55,-69,-56,-70,]),'VARIABLES':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,36,38,39,40,41,42,43,46,47,49,52,53,76,77,78,80,84,85,86,87,88,89,90,91,92,93,94,96,97,105,107,109,112,113,121,122,124,126,135,137,141,142,151,164,176,178,186,],[-3,25,25,25,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,25,-9,-6,-8,-23,-24,-30,-31,-32,-33,-34,-35,-32,-52,-57,-73,-77,-66,-71,-60,-72,-7,-25,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-47,-59,-65,-58,-5,-53,-63,-64,-61,-62,-78,-74,-67,-68,-54,-55,-69,-56,-70,]),'ASSUME':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,36,38,39,40,41,42,43,46,47,49,52,53,76,77,78,80,84,85,86,87,88,89,90,91,92,93,94,96,97,105,107,109,112,113,121,122,124,126,135,137,141,142,151,164,176,178,186,],[-3,26,26,26,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,26,-9,-6,-8,-23,-24,-30,-31,-32,-33,-34,-35,-32,-52,-57,-73,-77,-66,-71,-60,-72,-7,-25,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-47,-59,-65,-58,-5,-53,-63,-64,-61,-62,-78,-74,-67,-68,-54,-55,-69,-56,-70,]),'INIT':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,36,38,39,40,41,42,43,46,47,49,52,53,76,77,78,80,84,85,86,87,88,89,90,91,92,93,94,96,97,105,107,109,112,113,121,122,124,126,135,137,141,142,151,164,176,178,186,],[-3,27,27,27,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,27,-9,-6,-8,-23,-24,-30,-31,-32,-33,-34,-35,-32,-52,-57,-73,-77,-66,-71,-60,-72,-7,-25,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-47,-59,-65,-58,-5,-53,-63,-64,-61,-62,-78,-74,-67,-68,-54,-55,-69,-56,-70,]),'IN_A_SET':([5,40,46,70,96,112,128,158,],[-3,63,63,95,-4,-5,136,161,]),'GREATER_OR_EQ':([5,40,46,76,123,],[-3,65,65,65,65,]),'LESS_OR_EQ':([5,40,46,76,123,],[-3,66,66,66,66,]),'GREATER_THAN':([5,40,46,76,123,],[-3,67,67,67,67,]),'LESS_THAN':([5,40,46,76,117,123,],[-3,68,68,68,130,68,]),'AND':([5,28,29,30,37,38,39,40,41,42,43,76,77,78,80,86,87,88,89,90,91,92,93,94,107,121,122,124,126,141,],[-3,50,-45,-46,58,-30,-31,-32,-33,-34,-35,-66,104,-60,108,-26,-27,-28,-29,-36,-44,-39,-38,-80,-65,-63,-64,-61,-62,-67,]),'PLUS':([5,37,38,39,40,41,42,43,46,47,54,69,85,86,87,88,89,90,91,92,93,94,96,112,139,152,162,167,],[-3,59,-30,-31,-32,-33,-34,-35,-32,59,81,59,59,-26,-27,-28,-29,-36,-44,-39,-38,-80,-4,-5,59,155,59,171,]),'MINUS':([5,37,38,39,40,41,42,43,46,47,69,85,86,87,88,89,90,91,92,93,94,139,162,167,183,],[-3,60,-30,-31,-32,-33,-34,-35,-32,60,60,60,-26,-27,-28,-29,-36,-44,-39,-38,-80,60,60,170,184,]),'STAR':([5,37,38,39,40,41,42,43,46,47,69,85,86,87,88,89,90,91,92,93,94,139,162,],[-3,61,-30,-31,-32,-33,-34,-35,-32,61,61,61,61,61,-28,-29,-36,-44,-39,-38,-80,61,61,]),'DIVIDE':([5,37,38,39,40,41,42,43,46,47,69,85,86,87,88,89,90,91,92,93,94,139,162,],[-3,62,-30,-31,-32,-33,-34,-35,-32,62,62,62,62,62,-28,-29,-36,-44,-39,-38,-80,62,62,]),'DOT':([5,46,56,76,110,117,120,132,154,165,168,179,],[-3,71,83,103,71,83,132,140,157,168,172,180,]),'RIGHT_PAREN':([5,38,39,40,41,42,43,69,86,87,88,89,90,91,92,93,94,127,],[-3,-30,-31,-32,-33,-34,-35,94,-26,-27,-28,-29,-36,-44,-39,-38,-80,135,]),'OR':([5,28,29,30,76,77,78,80,107,121,122,124,126,141,],[-3,51,-45,-46,-66,106,-60,106,-65,-63,-64,-61,-62,-67,]),'MODULUS':([5,96,112,118,156,],[-3,-4,-5,131,159,]),'RIGHT_SQR_BRACKET':([5,48,72,74,115,116,119,138,146,169,173,185,],[-3,73,97,-49,-48,129,-50,-75,-51,-76,176,186,]),'COLON':([5,75,144,],[-3,100,148,]),'EXCEPT':([5,147,],[-3,150,]),'RIGHT_BRACE':([5,175,],[-3,178,]),'EXTENDS':([6,],[10,]),'NUMBER_LITERAL':([26,28,29,30,44,58,59,60,61,62,64,65,66,67,68,100,101,102,131,133,145,159,161,166,170,171,184,],[42,42,-45,-46,42,42,42,42,42,42,93,-40,-41,-42,-43,120,121,122,42,141,149,42,165,169,173,174,185,]),'STRING_LITERAL':([26,28,29,30,44,58,59,60,61,62,131,159,],[43,43,-45,-46,43,43,43,43,43,43,43,43,]),'LEFT_PAREN':([26,28,29,30,44,55,58,59,60,61,62,131,159,],[44,44,-45,-46,44,82,44,44,44,44,44,44,44,]),'LEFT_SQR_BRACKET':([28,29,30,73,134,],[48,-45,-46,99,143,]),'EVENTUALLY':([28,29,30,],[55,-45,-46,]),'NEXT_VALUE_OF_ATTRIBUTE':([28,29,30,81,99,104,148,153,155,],[56,-45,-46,56,117,125,56,56,56,]),'AT':([29,30,163,182,],[-45,-46,167,183,]),'UNCHANGED':([50,51,104,106,108,],[79,79,79,79,79,]),'Nat':([63,],[91,]),'ENABLED':([82,],[111,]),'LEFT_BRACE':([95,],[114,]),'ATTRIBUTE_MAY_CHANGE':([129,],[137,]),'EQUIVALENCE_OPERATOR':([149,],[153,]),'EXCLAMATION_MARK':([150,177,],[154,179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'attribute':([3,6,8,9,10,24,25,26,28,31,44,45,50,51,57,58,59,60,61,62,63,64,71,79,81,83,99,103,104,106,108,111,114,130,131,136,140,143,148,153,155,157,159,172,180,],[4,7,7,7,34,34,34,40,46,7,40,70,76,76,84,40,40,40,40,40,90,92,96,107,110,112,110,123,76,76,76,127,128,138,40,144,146,147,110,110,110,160,40,175,181,]),'extends':([6,],[8,]),'statements':([6,8,],[9,31,]),'statement':([6,8,9,31,],[11,11,32,32,]),'constants_statement':([6,8,9,31,],[12,12,12,12,]),'variables_statement':([6,8,9,31,],[13,13,13,13,]),'assume_statement':([6,8,9,31,],[14,14,14,14,]),'type_invariant':([6,8,9,31,],[15,15,15,15,]),'set_definition':([6,8,9,31,],[16,16,16,16,]),'bean_value_count':([6,8,9,31,],[17,17,17,17,]),'function_declaration':([6,8,9,31,],[18,18,18,18,]),'termination_statement':([6,8,9,31,],[19,19,19,19,]),'next_state_relation':([6,8,9,31,],[20,20,20,20,]),'action_formula_definition':([6,8,9,31,],[21,21,21,21,]),'liveness_property':([6,8,9,31,],[22,22,22,22,]),'init':([6,8,9,31,],[23,23,23,23,]),'equals':([7,27,76,125,139,160,162,181,],[28,45,102,134,145,163,166,182,]),'names':([10,24,25,],[33,35,36,]),'expression':([26,28,44,58,59,60,61,62,131,159,],[37,47,69,85,86,87,88,89,139,162,]),'set_membership':([26,28,44,58,59,60,61,62,131,159,],[38,38,38,38,38,38,38,38,38,38,]),'comparison':([26,28,44,58,59,60,61,62,131,159,],[39,39,39,39,39,39,39,39,39,39,]),'type_invariant_expression':([26,28,44,58,59,60,61,62,131,159,],[41,41,41,41,41,41,41,41,41,41,]),'bean_equation':([28,],[49,]),'action_formula':([28,],[52,]),'property_details':([28,],[53,]),'dot_access':([28,81,99,148,153,155,],[54,109,118,152,156,158,]),'comparison_rule':([40,46,76,123,],[64,64,101,133,]),'set_info':([48,],[72,]),'set_individual_info':([48,98,],[74,115,]),'function_conditions':([50,51,],[77,80,]),'function_condition':([50,51,104,106,108,],[78,78,124,126,124,]),'except_section':([77,],[105,]),'init_set_statement':([95,],[113,]),'formula_details':([99,],[116,]),'set_scope':([100,],[119,]),'except_clause':([134,],[142,]),'order':([148,],[151,]),'range_of_values':([161,],[164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements','module',6,'p_module','parser.py',30),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements','module',5,'p_module','parser.py',31),
  ('attribute -> ATTRIBUTE','attribute',1,'p_attribute','parser.py',39),
  ('dot_access -> attribute DOT attribute','dot_access',3,'p_dot_access','parser.py',44),
  ('dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute','dot_access',3,'p_dot_access','parser.py',45),
  ('extends -> EXTENDS names','extends',2,'p_extends','parser.py',49),
  ('names -> names COMMA attribute','names',3,'p_names','parser.py',55),
  ('names -> attribute','names',1,'p_names','parser.py',56),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',68),
  ('statements -> statement','statements',1,'p_statements','parser.py',69),
  ('statement -> constants_statement','statement',1,'p_statement','parser.py',82),
  ('statement -> variables_statement','statement',1,'p_statement','parser.py',83),
  ('statement -> assume_statement','statement',1,'p_statement','parser.py',84),
  ('statement -> type_invariant','statement',1,'p_statement','parser.py',85),
  ('statement -> set_definition','statement',1,'p_statement','parser.py',86),
  ('statement -> bean_value_count','statement',1,'p_statement','parser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',88),
  ('statement -> termination_statement','statement',1,'p_statement','parser.py',89),
  ('statement -> next_state_relation','statement',1,'p_statement','parser.py',90),
  ('statement -> action_formula_definition','statement',1,'p_statement','parser.py',91),
  ('statement -> liveness_property','statement',1,'p_statement','parser.py',92),
  ('statement -> init','statement',1,'p_statement','parser.py',93),
  ('constants_statement -> CONSTANTS names','constants_statement',2,'p_constants_statement','parser.py',98),
  ('variables_statement -> VARIABLES names','variables_statement',2,'p_variables_statement','parser.py',103),
  ('assume_statement -> ASSUME expression AND expression','assume_statement',4,'p_assume_statement','parser.py',108),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',114),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',115),
  ('expression -> expression STAR expression','expression',3,'p_expression','parser.py',116),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',117),
  ('expression -> set_membership','expression',1,'p_expression','parser.py',118),
  ('expression -> comparison','expression',1,'p_expression','parser.py',119),
  ('expression -> attribute','expression',1,'p_expression','parser.py',120),
  ('expression -> type_invariant_expression','expression',1,'p_expression','parser.py',121),
  ('expression -> NUMBER_LITERAL','expression',1,'p_expression','parser.py',122),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser.py',123),
  ('type_invariant_expression -> attribute IN_A_SET attribute','type_invariant_expression',3,'p_type_invariant_expression','parser.py',137),
  ('init_expression -> <empty>','init_expression',0,'p_init_expression','parser.py',141),
  ('comparison -> attribute comparison_rule NUMBER_LITERAL','comparison',3,'p_comparison','parser.py',144),
  ('comparison -> attribute comparison_rule attribute','comparison',3,'p_comparison','parser.py',145),
  ('comparison_rule -> GREATER_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',149),
  ('comparison_rule -> LESS_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',150),
  ('comparison_rule -> GREATER_THAN','comparison_rule',1,'p_comparison_rule','parser.py',151),
  ('comparison_rule -> LESS_THAN','comparison_rule',1,'p_comparison_rule','parser.py',152),
  ('set_membership -> attribute IN_A_SET Nat','set_membership',3,'p_set_membership','parser.py',156),
  ('equals -> EQUALS_DEFINITIONS','equals',1,'p_equals','parser.py',160),
  ('equals -> EQUALS_EQUALITY','equals',1,'p_equals','parser.py',161),
  ('set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET','set_definition',5,'p_set_definition','parser.py',165),
  ('set_info -> set_info COMMA set_individual_info','set_info',3,'p_set_info','parser.py',172),
  ('set_info -> set_individual_info','set_info',1,'p_set_info','parser.py',173),
  ('set_individual_info -> ATTRIBUTE COLON set_scope','set_individual_info',3,'p_set_individual_info','parser.py',180),
  ('set_scope -> NUMBER_LITERAL DOT DOT attribute','set_scope',4,'p_set_scope','parser.py',185),
  ('type_invariant -> attribute equals expression','type_invariant',3,'p_type_invariant','parser.py',190),
  ('init -> INIT equals attribute IN_A_SET init_set_statement','init',5,'p_init','parser.py',195),
  ('init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order','init_set_statement',6,'p_init_set_statement','parser.py',200),
  ('order -> dot_access PLUS dot_access IN_A_SET range_of_values','order',5,'p_order','parser.py',205),
  ('range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE','range_of_values',5,'p_range_of_values','parser.py',211),
  ('bean_value_count -> attribute equals bean_equation','bean_value_count',3,'p_bean_value_count','parser.py',217),
  ('bean_equation -> dot_access PLUS dot_access','bean_equation',3,'p_bean_equation','parser.py',223),
  ('function_declaration -> attribute equals AND function_conditions except_section','function_declaration',5,'p_function_declaration','parser.py',236),
  ('function_conditions -> function_condition','function_conditions',1,'p_function_conditions','parser.py',241),
  ('function_conditions -> function_conditions AND function_condition','function_conditions',3,'p_function_conditions','parser.py',242),
  ('function_conditions -> function_conditions OR function_condition','function_conditions',3,'p_function_conditions','parser.py',243),
  ('function_condition -> attribute comparison_rule NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',252),
  ('function_condition -> attribute equals NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',253),
  ('function_condition -> UNCHANGED attribute','function_condition',2,'p_function_condition','parser.py',254),
  ('function_condition -> attribute','function_condition',1,'p_function_condition','parser.py',255),
  ('function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL','function_condition',5,'p_function_condition','parser.py',256),
  ('except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause','except_section',4,'p_except_section','parser.py',268),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',11,'p_except_clause','parser.py',273),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',19,'p_except_clause','parser.py',274),
  ('termination_statement -> attribute equals AND function_conditions','termination_statement',4,'p_termination_statement','parser.py',283),
  ('next_state_relation -> attribute equals OR function_conditions','next_state_relation',4,'p_next_state_relation','parser.py',289),
  ('action_formula_definition -> attribute equals action_formula','action_formula_definition',3,'p_action_formula_definition','parser.py',295),
  ('action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE','action_formula',6,'p_action_formula','parser.py',300),
  ('formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute','formula_details',3,'p_formula_details','parser.py',306),
  ('formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL','formula_details',11,'p_formula_details','parser.py',307),
  ('liveness_property -> attribute equals property_details','liveness_property',3,'p_liveness_property','parser.py',319),
  ('property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN','property_details',5,'p_property_details','parser.py',325),
  ('loop_invariant -> attribute equals action_formula','loop_invariant',3,'p_loop_invariant','parser.py',333),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_expression_group','parser.py',351),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',356),
]
