
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUIVALENCE_OPERATORleftANDnonassocEQUALS_DEFINITIONSNOT_EQUALSnonassocLESS_THANLESS_OR_EQGREATER_THANGREATER_OR_EQleftPLUSMINUSleftSTARDIVIDEMODULUSnonassocLEFT_PARENRIGHT_PARENAND ARROW ASSUME AT ATTRIBUTE ATTRIBUTE_MAY_CHANGE BACK_SLASH CHECK COLON COMMA CONSTANTS DIVIDE DOT EDGE ELSE ENABLED EQUALS_DEFINITIONS EQUALS_EQUALITY EQUIVALENCE_OPERATOR EVENTUALLY EXCEPT EXCLAMATION_MARK EXTENDS EventuallyTerminates FORWARD_SLASH GOAL GRAPH GREATER_OR_EQ GREATER_THAN IF IMPLIES INIT INVARIANT IN_A_SET LEFT_BRACE LEFT_PAREN LEFT_SQR_BRACKET LESS_OR_EQ LESS_THAN LoopInvariant MINUS MODULE MODULE_WRAPPER MODULUS NEXT_VALUE_OF_ATTRIBUTE NODE NOT_EQUALS NUMBER_LITERAL Nat OR PLUS RIGHT_BRACE RIGHT_PAREN RIGHT_SQR_BRACKET SEMICOLON SINGLE_QUOTE SPEC STAR STRING_LITERAL THEN THEOREM TerminationHypothesis UNCHANGED UNDERSCORE VARIABLES VARIABLE_NAME WEAK_FAIRNESSmodule : MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements\n              | MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statementsattribute : ATTRIBUTEdot_access : attribute DOT attribute\n                  | NEXT_VALUE_OF_ATTRIBUTE DOT attributeextends : EXTENDS namesnames : names COMMA attribute\n             | attributestatements : statements statement\n                    | statementstatement :   constants_statement\n                   | variables_statement\n                   | assume_statement\n                   | type_invariant\n                   | set_definition\n                   | bean_value_count\n                   | function_declaration\n                   | termination_statement\n                   | next_state_relation\n                   | action_formula_definition\n                   | liveness_property\n                   | loop_invariant\n                   | termination_hypothesis\n                   | spec_definition\n                   | theorem_definition\n                   | initconstants_statement : CONSTANTS namesvariables_statement : VARIABLES namesassume_statement : ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERALexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression DIVIDE expression\n                  | set_membership\n                  | comparison\n                  | attribute\n                  | type_invariant_expression\n                  | NUMBER_LITERAL\n                  | STRING_LITERALtype_invariant_expression : attribute IN_A_SET attributeinit_expression : comparison : attribute comparison_rule NUMBER_LITERAL\n                  | attribute comparison_rule attributecomparison_rule :   GREATER_OR_EQ\n                    | LESS_OR_EQ\n                    | GREATER_THAN                         \n                    | LESS_THAN set_membership : attribute IN_A_SET Nat equals : EQUALS_DEFINITIONS\n              | EQUALS_EQUALITYset_definition : attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKETset_info : set_info COMMA set_individual_info\n                      | set_individual_infoset_individual_info : ATTRIBUTE COLON set_scopeset_scope : NUMBER_LITERAL DOT DOT attributetype_invariant : attribute equals expressioninit : INIT equals attribute IN_A_SET init_set_statementinit_set_statement : LEFT_BRACE attribute IN_A_SET attribute COLON orderorder : dot_access PLUS dot_access IN_A_SET range_of_valuesrange_of_values :  NUMBER_LITERAL DOT DOT attribute RIGHT_BRACEbean_value_count : attribute equals bean_equationbean_equation : dot_access PLUS dot_accessfunction_declaration : attribute equals AND function_info AND function_info except_section\n                            | attribute equals AND function_info AND function_info AND function_info except_sectionfunction_info : attribute DOT attribute comparison_rule NUMBER_LITERAL\n                     | attribute comparison_rule NUMBER_LITERALfunction_conditions : function_condition\n                           | function_conditions AND function_condition\n                           | function_conditions OR function_conditionfunction_condition : attribute comparison_rule NUMBER_LITERAL\n                          | attribute equals NUMBER_LITERAL\n                          | UNCHANGED attribute\n                          | LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE\n                          | WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN\n                          | attribute\n                          | INIT\n                          | EventuallyTerminates\n                          | LoopInvariant\n                          | TerminationHypothesis\n                          | attribute DOT attribute comparison_rule NUMBER_LITERALexcept_section : AND NEXT_VALUE_OF_ATTRIBUTE equals except_clauseexcept_clause : LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET\n                     | LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKETtermination_statement : attribute equals AND function_conditionsnext_state_relation : attribute equals OR function_conditionsaction_formula_definition : attribute equals action_formulaaction_formula : LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGEformula_details : NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute\n                       | dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERALliveness_property : EventuallyTerminates equals property_detailsproperty_details : EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PARENloop_invariant : LoopInvariant equals action_formulatermination_hypothesis : TerminationHypothesis equals conditional_statementsconditional_statements : IF conditional_statement THEN conditional_statement ELSE conditional_statementconditional_statement : dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL\n                             | EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PARENspec_definition : SPEC equals AND function_conditionstheorem_definition : THEOREM SPEC IMPLIES AND function_conditionsexpression : LEFT_PAREN expression RIGHT_PARENempty :'
    
_lr_action_items = {'MODULE_WRAPPER':([0,4,5,],[2,6,-3,]),'$end':([1,5,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,43,44,45,53,54,56,59,60,61,62,63,64,70,72,74,94,96,97,101,102,103,104,105,106,108,111,118,121,122,123,124,125,126,127,128,129,130,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[0,-3,-2,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-1,-9,-8,-27,-28,-36,-56,-61,-86,-34,-35,-37,-38,-39,-90,-92,-93,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'MODULE':([2,],[3,]),'ATTRIBUTE':([3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,43,44,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,72,74,75,76,79,80,81,82,83,84,85,86,87,88,89,94,96,97,98,101,102,103,104,105,106,108,109,110,111,118,119,121,122,123,124,125,126,127,128,129,130,131,132,134,137,138,139,140,144,145,146,147,148,149,150,152,153,154,155,163,164,167,168,169,170,171,180,181,184,186,187,192,193,196,197,200,201,207,208,209,210,211,218,220,221,222,225,226,228,230,233,238,240,243,244,251,256,259,262,268,],[5,-3,5,5,5,5,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,5,5,5,5,-49,-50,5,-9,-6,-8,-27,-28,5,-36,-56,93,-61,5,5,-86,-34,-35,-37,-38,-39,5,5,-90,-92,-93,5,5,5,5,5,-44,-45,-46,-47,5,5,5,5,-75,-84,-67,5,-76,-77,-78,-79,-75,-85,-36,5,5,-7,-97,5,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,93,5,5,5,5,5,-72,5,-99,-62,-5,5,5,5,5,-98,-57,5,-70,-71,-68,-69,5,5,-70,5,5,5,5,-63,-91,5,5,-87,5,-80,-74,-80,-29,-94,-95,-64,-73,5,5,-81,5,-58,5,5,5,-96,5,-59,5,-60,-82,5,-83,]),'EQUALS_DEFINITIONS':([5,7,31,32,33,34,36,60,61,62,63,64,94,105,108,121,122,123,124,125,126,127,128,129,145,147,176,177,199,205,227,242,247,263,],[-3,38,38,38,38,38,38,-34,-35,-37,-38,-39,38,38,-36,-40,-48,-43,-42,-4,-30,-31,-32,-33,-99,-5,38,38,38,38,38,38,38,38,]),'EQUALS_EQUALITY':([5,7,31,32,33,34,36,60,61,62,63,64,94,105,108,121,122,123,124,125,126,127,128,129,145,147,176,177,199,205,227,242,247,263,],[-3,39,39,39,39,39,39,-34,-35,-37,-38,-39,39,39,-36,-40,-48,-43,-42,-4,-30,-31,-32,-33,-99,-5,39,39,39,39,39,39,39,39,]),'COMMA':([5,42,43,44,45,90,92,111,156,160,215,258,],[-3,68,-8,68,68,131,-53,-7,-52,-54,-55,260,]),'CONSTANTS':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,59,60,61,62,63,64,70,72,74,94,96,97,101,102,103,104,105,106,108,111,118,121,122,123,124,125,126,127,128,129,130,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,28,28,28,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,28,-9,-6,-8,-27,-28,-36,-56,-61,-86,-34,-35,-37,-38,-39,-90,-92,-93,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'VARIABLES':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,59,60,61,62,63,64,70,72,74,94,96,97,101,102,103,104,105,106,108,111,118,121,122,123,124,125,126,127,128,129,130,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,29,29,29,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,29,-9,-6,-8,-27,-28,-36,-56,-61,-86,-34,-35,-37,-38,-39,-90,-92,-93,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'ASSUME':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,59,60,61,62,63,64,70,72,74,94,96,97,101,102,103,104,105,106,108,111,118,121,122,123,124,125,126,127,128,129,130,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,30,30,30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,30,-9,-6,-8,-27,-28,-36,-56,-61,-86,-34,-35,-37,-38,-39,-90,-92,-93,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'EventuallyTerminates':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,57,58,59,60,61,62,63,64,70,72,74,76,94,96,97,101,102,103,104,105,106,108,111,118,119,121,122,123,124,125,126,127,128,129,130,138,139,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,31,31,31,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,31,-9,-6,-8,-27,-28,-36,-56,-61,102,102,-86,-34,-35,-37,-38,-39,-90,-92,-93,102,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,102,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,102,102,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'LoopInvariant':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,57,58,59,60,61,62,63,64,70,72,74,76,94,96,97,101,102,103,104,105,106,108,111,118,119,121,122,123,124,125,126,127,128,129,130,138,139,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,32,32,32,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,32,-9,-6,-8,-27,-28,-36,-56,-61,103,103,-86,-34,-35,-37,-38,-39,-90,-92,-93,103,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,103,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,103,103,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'TerminationHypothesis':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,57,58,59,60,61,62,63,64,70,72,74,76,94,96,97,101,102,103,104,105,106,108,111,118,119,121,122,123,124,125,126,127,128,129,130,138,139,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,33,33,33,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,33,-9,-6,-8,-27,-28,-36,-56,-61,104,104,-86,-34,-35,-37,-38,-39,-90,-92,-93,104,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,104,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,104,104,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'SPEC':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,35,40,41,42,43,44,45,53,54,56,59,60,61,62,63,64,70,72,74,94,96,97,101,102,103,104,105,106,108,111,118,121,122,123,124,125,126,127,128,129,130,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,34,34,34,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,51,34,-9,-6,-8,-27,-28,-36,-56,-61,-86,-34,-35,-37,-38,-39,-90,-92,-93,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'THEOREM':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,59,60,61,62,63,64,70,72,74,94,96,97,101,102,103,104,105,106,108,111,118,121,122,123,124,125,126,127,128,129,130,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,35,35,35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,35,-9,-6,-8,-27,-28,-36,-56,-61,-86,-34,-35,-37,-38,-39,-90,-92,-93,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'INIT':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,41,42,43,44,45,53,54,56,57,58,59,60,61,62,63,64,70,72,74,76,94,96,97,101,102,103,104,105,106,108,111,118,119,121,122,123,124,125,126,127,128,129,130,138,139,140,145,146,147,153,154,163,164,167,168,171,187,192,197,201,207,208,209,210,211,218,220,225,228,240,244,256,259,268,],[-3,36,36,36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,36,-9,-6,-8,-27,-28,-36,-56,-61,101,101,-86,-34,-35,-37,-38,-39,-90,-92,-93,101,-75,-84,-67,-76,-77,-78,-79,-75,-85,-36,-7,-97,101,-40,-48,-43,-42,-4,-30,-31,-32,-33,-51,101,101,-72,-99,-62,-5,-98,-57,-70,-71,-68,-69,-70,-63,-91,-87,-80,-74,-80,-29,-94,-95,-64,-73,-81,-58,-96,-59,-60,-82,-83,]),'IN_A_SET':([5,46,53,78,108,125,147,178,237,],[-3,69,79,120,79,-4,-5,196,241,]),'DOT':([5,53,67,94,105,117,158,161,165,182,239,245,248,261,],[-3,81,110,134,144,81,110,182,184,200,243,248,251,262,]),'GREATER_OR_EQ':([5,53,94,105,108,162,165,172,173,202,],[-3,82,82,82,82,82,82,82,191,82,]),'LESS_OR_EQ':([5,53,94,105,108,162,165,172,202,],[-3,83,83,83,83,83,83,83,83,]),'GREATER_THAN':([5,53,94,105,108,162,165,172,202,],[-3,84,84,84,84,84,84,84,84,]),'LESS_THAN':([5,53,94,105,108,158,162,165,172,202,],[-3,85,85,85,85,180,85,85,85,85,]),'PLUS':([5,53,54,60,61,62,63,64,66,107,108,121,122,123,124,125,126,127,128,129,145,147,199,229,242,252,],[-3,-36,86,-34,-35,-37,-38,-39,109,86,-36,-40,-48,-43,-42,-4,-30,-31,-32,-33,-99,-5,86,233,86,255,]),'MINUS':([5,53,54,60,61,62,63,64,107,108,121,122,123,124,126,127,128,129,145,199,242,252,265,],[-3,-36,87,-34,-35,-37,-38,-39,87,-36,-40,-48,-43,-42,-30,-31,-32,-33,-99,87,87,254,266,]),'STAR':([5,53,54,60,61,62,63,64,107,108,121,122,123,124,126,127,128,129,145,199,242,],[-3,-36,88,-34,-35,-37,-38,-39,88,-36,-40,-48,-43,-42,88,88,-32,-33,-99,88,88,]),'DIVIDE':([5,53,54,60,61,62,63,64,107,108,121,122,123,124,126,127,128,129,145,199,242,],[-3,-36,89,-34,-35,-37,-38,-39,89,-36,-40,-48,-43,-42,89,89,-32,-33,-99,89,89,]),'AND':([5,37,38,39,50,77,94,95,96,97,101,102,103,104,105,106,112,118,140,153,163,164,166,167,168,171,201,203,204,207,208,212,220,224,],[-3,57,-49,-50,76,119,-75,137,138,-67,-76,-77,-78,-79,-75,138,148,138,-72,138,-66,-71,186,-68,-69,-70,-65,-66,217,-74,-80,221,-73,-65,]),'OR':([5,37,38,39,94,96,97,101,102,103,104,105,106,118,140,153,163,164,167,168,171,201,207,208,220,],[-3,58,-49,-50,-75,139,-67,-76,-77,-78,-79,-75,139,139,-72,139,-70,-71,-68,-69,-70,-80,-74,-80,-73,]),'RIGHT_PAREN':([5,60,61,62,63,64,107,108,121,122,123,124,126,127,128,129,145,174,189,236,],[-3,-34,-35,-37,-38,-39,145,-36,-40,-48,-43,-42,-30,-31,-32,-33,-99,192,207,240,]),'MODULUS':([5,115,125,147,159,234,],[-3,151,-4,-5,181,238,]),'RIGHT_SQR_BRACKET':([5,55,73,90,92,99,156,157,160,188,198,215,249,257,267,],[-3,91,91,130,-53,141,-52,179,-54,206,-88,-55,-89,259,268,]),'COLON':([5,93,213,],[-3,133,222,]),'EXCEPT':([5,231,],[-3,235,]),'RIGHT_BRACE':([5,253,],[-3,256,]),'EXTENDS':([6,],[10,]),'LEFT_SQR_BRACKET':([37,38,39,48,57,58,76,91,119,138,139,141,219,],[55,-49,-50,73,99,99,99,132,99,99,99,169,226,]),'NUMBER_LITERAL':([37,38,39,65,80,82,83,84,85,86,87,88,89,133,135,136,143,151,181,183,185,190,191,194,195,214,216,232,238,241,246,254,255,266,],[63,-49,-50,63,124,-44,-45,-46,-47,63,63,63,63,161,163,164,171,176,63,201,203,208,209,211,212,223,224,236,63,245,249,257,258,267,]),'STRING_LITERAL':([37,38,39,65,86,87,88,89,181,238,],[64,-49,-50,64,64,64,64,64,64,64,]),'LEFT_PAREN':([37,38,39,65,71,86,87,88,89,116,142,181,238,],[65,-49,-50,65,113,65,65,65,65,152,170,65,65,]),'NEXT_VALUE_OF_ATTRIBUTE':([37,38,39,75,109,132,150,152,186,193,217,221,222,230,233,],[67,-49,-50,67,67,158,67,67,205,67,205,67,67,67,67,]),'EVENTUALLY':([38,39,47,75,150,193,],[-49,-50,71,116,116,116,]),'IF':([38,39,49,],[-49,-50,75,]),'AT':([38,39,250,264,],[-49,-50,252,265,]),'IMPLIES':([51,],[77,]),'UNCHANGED':([57,58,76,119,138,139,],[98,98,98,98,98,98,]),'WEAK_FAIRNESS':([57,58,76,119,138,139,],[100,100,100,100,100,100,]),'Nat':([69,79,],[112,122,]),'ATTRIBUTE_MAY_CHANGE':([100,179,206,],[142,197,220,]),'ENABLED':([113,],[149,]),'THEN':([114,211,240,],[150,-95,-96,]),'LEFT_BRACE':([120,],[155,]),'ELSE':([175,211,240,],[193,-95,-96,]),'EQUIVALENCE_OPERATOR':([223,],[230,]),'EXCLAMATION_MARK':([235,260,],[239,261,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'attribute':([3,6,8,9,10,28,29,30,37,40,52,57,58,65,68,75,76,79,80,81,86,87,88,89,98,109,110,119,132,134,137,138,139,144,148,149,150,152,155,169,170,180,181,184,186,193,196,200,221,222,226,230,233,238,243,251,262,],[4,7,7,7,43,43,43,46,53,7,78,94,105,108,111,117,105,121,123,125,108,108,108,108,140,117,147,105,117,162,165,105,105,172,173,174,117,117,178,188,189,198,108,202,165,117,213,215,117,117,231,117,117,108,247,253,263,]),'extends':([6,],[8,]),'statements':([6,8,],[9,40,]),'statement':([6,8,9,40,],[11,11,41,41,]),'constants_statement':([6,8,9,40,],[12,12,12,12,]),'variables_statement':([6,8,9,40,],[13,13,13,13,]),'assume_statement':([6,8,9,40,],[14,14,14,14,]),'type_invariant':([6,8,9,40,],[15,15,15,15,]),'set_definition':([6,8,9,40,],[16,16,16,16,]),'bean_value_count':([6,8,9,40,],[17,17,17,17,]),'function_declaration':([6,8,9,40,],[18,18,18,18,]),'termination_statement':([6,8,9,40,],[19,19,19,19,]),'next_state_relation':([6,8,9,40,],[20,20,20,20,]),'action_formula_definition':([6,8,9,40,],[21,21,21,21,]),'liveness_property':([6,8,9,40,],[22,22,22,22,]),'loop_invariant':([6,8,9,40,],[23,23,23,23,]),'termination_hypothesis':([6,8,9,40,],[24,24,24,24,]),'spec_definition':([6,8,9,40,],[25,25,25,25,]),'theorem_definition':([6,8,9,40,],[26,26,26,26,]),'init':([6,8,9,40,],[27,27,27,27,]),'equals':([7,31,32,33,34,36,94,105,176,177,199,205,227,242,247,263,],[37,47,48,49,50,52,136,136,194,195,214,219,232,246,250,264,]),'names':([10,28,29,],[42,44,45,]),'expression':([37,65,86,87,88,89,181,238,],[54,107,126,127,128,129,199,242,]),'bean_equation':([37,],[56,]),'action_formula':([37,48,],[59,72,]),'set_membership':([37,65,86,87,88,89,181,238,],[60,60,60,60,60,60,60,60,]),'comparison':([37,65,86,87,88,89,181,238,],[61,61,61,61,61,61,61,61,]),'type_invariant_expression':([37,65,86,87,88,89,181,238,],[62,62,62,62,62,62,62,62,]),'dot_access':([37,75,109,132,150,152,193,221,222,230,233,],[66,115,146,159,115,177,115,227,229,234,237,]),'property_details':([47,],[70,]),'conditional_statements':([49,],[74,]),'comparison_rule':([53,94,105,108,162,165,172,202,],[80,135,143,80,183,185,190,216,]),'set_info':([55,],[90,]),'set_individual_info':([55,131,],[92,156,]),'function_info':([57,137,186,],[95,166,204,]),'function_conditions':([57,58,76,119,],[96,106,118,153,]),'function_condition':([57,58,76,119,138,139,],[97,97,97,97,167,168,]),'conditional_statement':([75,150,193,],[114,175,210,]),'init_set_statement':([120,],[154,]),'formula_details':([132,],[157,]),'set_scope':([133,],[160,]),'except_section':([166,204,],[187,218,]),'except_clause':([219,],[225,]),'order':([222,],[228,]),'range_of_values':([241,],[244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements','module',6,'p_module','parser.py',30),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements','module',5,'p_module','parser.py',31),
  ('attribute -> ATTRIBUTE','attribute',1,'p_attribute','parser.py',39),
  ('dot_access -> attribute DOT attribute','dot_access',3,'p_dot_access','parser.py',44),
  ('dot_access -> NEXT_VALUE_OF_ATTRIBUTE DOT attribute','dot_access',3,'p_dot_access','parser.py',45),
  ('extends -> EXTENDS names','extends',2,'p_extends','parser.py',49),
  ('names -> names COMMA attribute','names',3,'p_names','parser.py',55),
  ('names -> attribute','names',1,'p_names','parser.py',56),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',68),
  ('statements -> statement','statements',1,'p_statements','parser.py',69),
  ('statement -> constants_statement','statement',1,'p_statement','parser.py',82),
  ('statement -> variables_statement','statement',1,'p_statement','parser.py',83),
  ('statement -> assume_statement','statement',1,'p_statement','parser.py',84),
  ('statement -> type_invariant','statement',1,'p_statement','parser.py',85),
  ('statement -> set_definition','statement',1,'p_statement','parser.py',86),
  ('statement -> bean_value_count','statement',1,'p_statement','parser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',88),
  ('statement -> termination_statement','statement',1,'p_statement','parser.py',89),
  ('statement -> next_state_relation','statement',1,'p_statement','parser.py',90),
  ('statement -> action_formula_definition','statement',1,'p_statement','parser.py',91),
  ('statement -> liveness_property','statement',1,'p_statement','parser.py',92),
  ('statement -> loop_invariant','statement',1,'p_statement','parser.py',93),
  ('statement -> termination_hypothesis','statement',1,'p_statement','parser.py',94),
  ('statement -> spec_definition','statement',1,'p_statement','parser.py',95),
  ('statement -> theorem_definition','statement',1,'p_statement','parser.py',96),
  ('statement -> init','statement',1,'p_statement','parser.py',97),
  ('constants_statement -> CONSTANTS names','constants_statement',2,'p_constants_statement','parser.py',102),
  ('variables_statement -> VARIABLES names','variables_statement',2,'p_variables_statement','parser.py',107),
  ('assume_statement -> ASSUME attribute IN_A_SET Nat AND attribute GREATER_OR_EQ NUMBER_LITERAL','assume_statement',8,'p_assume_statement','parser.py',112),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression STAR expression','expression',3,'p_expression','parser.py',120),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',121),
  ('expression -> set_membership','expression',1,'p_expression','parser.py',122),
  ('expression -> comparison','expression',1,'p_expression','parser.py',123),
  ('expression -> attribute','expression',1,'p_expression','parser.py',124),
  ('expression -> type_invariant_expression','expression',1,'p_expression','parser.py',125),
  ('expression -> NUMBER_LITERAL','expression',1,'p_expression','parser.py',126),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser.py',127),
  ('type_invariant_expression -> attribute IN_A_SET attribute','type_invariant_expression',3,'p_type_invariant_expression','parser.py',141),
  ('init_expression -> <empty>','init_expression',0,'p_init_expression','parser.py',145),
  ('comparison -> attribute comparison_rule NUMBER_LITERAL','comparison',3,'p_comparison','parser.py',148),
  ('comparison -> attribute comparison_rule attribute','comparison',3,'p_comparison','parser.py',149),
  ('comparison_rule -> GREATER_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',153),
  ('comparison_rule -> LESS_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',154),
  ('comparison_rule -> GREATER_THAN','comparison_rule',1,'p_comparison_rule','parser.py',155),
  ('comparison_rule -> LESS_THAN','comparison_rule',1,'p_comparison_rule','parser.py',156),
  ('set_membership -> attribute IN_A_SET Nat','set_membership',3,'p_set_membership','parser.py',160),
  ('equals -> EQUALS_DEFINITIONS','equals',1,'p_equals','parser.py',164),
  ('equals -> EQUALS_EQUALITY','equals',1,'p_equals','parser.py',165),
  ('set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET','set_definition',5,'p_set_definition','parser.py',169),
  ('set_info -> set_info COMMA set_individual_info','set_info',3,'p_set_info','parser.py',176),
  ('set_info -> set_individual_info','set_info',1,'p_set_info','parser.py',177),
  ('set_individual_info -> ATTRIBUTE COLON set_scope','set_individual_info',3,'p_set_individual_info','parser.py',184),
  ('set_scope -> NUMBER_LITERAL DOT DOT attribute','set_scope',4,'p_set_scope','parser.py',189),
  ('type_invariant -> attribute equals expression','type_invariant',3,'p_type_invariant','parser.py',194),
  ('init -> INIT equals attribute IN_A_SET init_set_statement','init',5,'p_init','parser.py',199),
  ('init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order','init_set_statement',6,'p_init_set_statement','parser.py',204),
  ('order -> dot_access PLUS dot_access IN_A_SET range_of_values','order',5,'p_order','parser.py',209),
  ('range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE','range_of_values',5,'p_range_of_values','parser.py',215),
  ('bean_value_count -> attribute equals bean_equation','bean_value_count',3,'p_bean_value_count','parser.py',221),
  ('bean_equation -> dot_access PLUS dot_access','bean_equation',3,'p_bean_equation','parser.py',227),
  ('function_declaration -> attribute equals AND function_info AND function_info except_section','function_declaration',7,'p_function_declaration','parser.py',240),
  ('function_declaration -> attribute equals AND function_info AND function_info AND function_info except_section','function_declaration',9,'p_function_declaration','parser.py',241),
  ('function_info -> attribute DOT attribute comparison_rule NUMBER_LITERAL','function_info',5,'p_function_info','parser.py',250),
  ('function_info -> attribute comparison_rule NUMBER_LITERAL','function_info',3,'p_function_info','parser.py',251),
  ('function_conditions -> function_condition','function_conditions',1,'p_function_conditions','parser.py',260),
  ('function_conditions -> function_conditions AND function_condition','function_conditions',3,'p_function_conditions','parser.py',261),
  ('function_conditions -> function_conditions OR function_condition','function_conditions',3,'p_function_conditions','parser.py',262),
  ('function_condition -> attribute comparison_rule NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',271),
  ('function_condition -> attribute equals NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',272),
  ('function_condition -> UNCHANGED attribute','function_condition',2,'p_function_condition','parser.py',273),
  ('function_condition -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET attribute RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE','function_condition',6,'p_function_condition','parser.py',274),
  ('function_condition -> WEAK_FAIRNESS ATTRIBUTE_MAY_CHANGE LEFT_PAREN attribute RIGHT_PAREN','function_condition',5,'p_function_condition','parser.py',275),
  ('function_condition -> attribute','function_condition',1,'p_function_condition','parser.py',276),
  ('function_condition -> INIT','function_condition',1,'p_function_condition','parser.py',277),
  ('function_condition -> EventuallyTerminates','function_condition',1,'p_function_condition','parser.py',278),
  ('function_condition -> LoopInvariant','function_condition',1,'p_function_condition','parser.py',279),
  ('function_condition -> TerminationHypothesis','function_condition',1,'p_function_condition','parser.py',280),
  ('function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL','function_condition',5,'p_function_condition','parser.py',281),
  ('except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause','except_section',4,'p_except_section','parser.py',293),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',11,'p_except_clause','parser.py',298),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',19,'p_except_clause','parser.py',299),
  ('termination_statement -> attribute equals AND function_conditions','termination_statement',4,'p_termination_statement','parser.py',308),
  ('next_state_relation -> attribute equals OR function_conditions','next_state_relation',4,'p_next_state_relation','parser.py',315),
  ('action_formula_definition -> attribute equals action_formula','action_formula_definition',3,'p_action_formula_definition','parser.py',321),
  ('action_formula -> LEFT_SQR_BRACKET RIGHT_SQR_BRACKET LEFT_SQR_BRACKET formula_details RIGHT_SQR_BRACKET ATTRIBUTE_MAY_CHANGE','action_formula',6,'p_action_formula','parser.py',326),
  ('formula_details -> NEXT_VALUE_OF_ATTRIBUTE LESS_THAN attribute','formula_details',3,'p_formula_details','parser.py',332),
  ('formula_details -> dot_access MODULUS expression equals NUMBER_LITERAL EQUIVALENCE_OPERATOR dot_access MODULUS expression equals NUMBER_LITERAL','formula_details',11,'p_formula_details','parser.py',333),
  ('liveness_property -> EventuallyTerminates equals property_details','liveness_property',3,'p_liveness_property','parser.py',342),
  ('property_details -> EVENTUALLY LEFT_PAREN ENABLED attribute RIGHT_PAREN','property_details',5,'p_property_details','parser.py',348),
  ('loop_invariant -> LoopInvariant equals action_formula','loop_invariant',3,'p_loop_invariant','parser.py',356),
  ('termination_hypothesis -> TerminationHypothesis equals conditional_statements','termination_hypothesis',3,'p_termination_hypothesis','parser.py',366),
  ('conditional_statements -> IF conditional_statement THEN conditional_statement ELSE conditional_statement','conditional_statements',6,'p_conditional_statements','parser.py',372),
  ('conditional_statement -> dot_access MODULUS NUMBER_LITERAL equals NUMBER_LITERAL','conditional_statement',5,'p_conditional_statement','parser.py',378),
  ('conditional_statement -> EVENTUALLY LEFT_PAREN dot_access equals NUMBER_LITERAL AND dot_access equals NUMBER_LITERAL RIGHT_PAREN','conditional_statement',10,'p_conditional_statement','parser.py',379),
  ('spec_definition -> SPEC equals AND function_conditions','spec_definition',4,'p_spec_definition','parser.py',393),
  ('theorem_definition -> THEOREM SPEC IMPLIES AND function_conditions','theorem_definition',5,'p_theorem_definition','parser.py',400),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_expression_group','parser.py',411),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',416),
]
