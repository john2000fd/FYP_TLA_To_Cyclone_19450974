
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQUALS_DEFINITIONSNOT_EQUALSnonassocLESS_THANLESS_OR_EQGREATER_THANGREATER_OR_EQleftPLUSMINUSleftSTARDIVIDEMODULUSnonassocLEFT_PARENRIGHT_PARENAND ARROW ASSUME AT ATTRIBUTE BACK_SLASH CHECK COLON COMMA CONSTANTS DIVIDE DOT EDGE ELSE EQUALS_DEFINITIONS EQUALS_EQUALITY EXCEPT EXCLAMATION_MARK EXTENDS FORWARD_SLASH GOAL GRAPH GREATER_OR_EQ GREATER_THAN IF INIT INVARIANT IN_A_SET LEFT_BRACE LEFT_PAREN LEFT_SQR_BRACKET LESS_OR_EQ LESS_THAN MINUS MODULE MODULE_WRAPPER MODULUS NEXT NEXT_VALUE_OF_ATTRIBUTE NODE NOT_EQUALS NUMBER_LITERAL Nat OR PLUS RIGHT_BRACE RIGHT_PAREN RIGHT_SQR_BRACKET SEMICOLON SINGLE_QUOTE SPEC STAR STRING_LITERAL THEN UNCHANGED UNDERSCORE VARIABLES VARIABLE_NAMEmodule : MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements\n              | MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statementsattribute : ATTRIBUTEdot_access : attribute DOT attributeextends : EXTENDS namesnames : names COMMA attribute\n             | attributestatements : statements statement\n                    | statementstatement :   constants_statement\n                   | variables_statement\n                   | assume_statement\n                   | type_invariant\n                   | set_definition\n                   | bean_value_count\n                   | function_declaration\n                   | termination_statement\n                   | initconstants_statement : CONSTANTS namesvariables_statement : VARIABLES namesassume_statement : ASSUME expression AND expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression STAR expression\n                  | expression DIVIDE expression\n                  | set_membership\n                  | comparison\n                  | attribute\n                  | type_invariant_expression\n                  | NUMBER_LITERAL\n                  | STRING_LITERALtype_invariant_expression : attribute IN_A_SET attributeinit_expression : comparison : attribute comparison_rule NUMBER_LITERAL\n                  | attribute comparison_rule attributecomparison_rule :   GREATER_OR_EQ\n                    | LESS_OR_EQ\n                    | GREATER_THAN                         \n                    | LESS_THAN set_membership : attribute IN_A_SET Nat equals : EQUALS_DEFINITIONS\n              | EQUALS_EQUALITYset_definition : attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKETset_info : set_info COMMA set_individual_info\n                      | set_individual_infoset_individual_info : ATTRIBUTE COLON set_scopeset_scope : NUMBER_LITERAL DOT DOT attributetype_invariant : attribute equals expressioninit : INIT equals attribute IN_A_SET init_set_statementinit_set_statement : LEFT_BRACE attribute IN_A_SET attribute COLON orderorder : dot_access PLUS dot_access IN_A_SET range_of_valuesrange_of_values :  NUMBER_LITERAL DOT DOT attribute RIGHT_BRACEbean_value_count : attribute equals bean_equationbean_equation : dot_access PLUS dot_accessfunction_declaration : attribute equals AND function_conditions except_sectionfunction_conditions : function_condition\n                           | function_conditions AND function_condition\n                           | function_conditions OR function_conditionfunction_condition : attribute comparison_rule NUMBER_LITERAL\n                          | attribute equals NUMBER_LITERAL\n                          | UNCHANGED attribute\n                          | attribute\n                          | attribute DOT attribute comparison_rule NUMBER_LITERALexcept_section : AND NEXT_VALUE_OF_ATTRIBUTE equals except_clauseexcept_clause : LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET\n                     | LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKETtermination_statement : attribute equals AND function_conditionsnext_state_relation : NEXT equals OR function_conditionsexpression : LEFT_PAREN expression RIGHT_PARENempty :'
    
_lr_action_items = {'MODULE_WRAPPER':([0,4,5,],[2,6,-3,]),'$end':([1,5,9,11,12,13,14,15,16,17,18,19,20,28,29,31,32,33,35,36,37,38,39,40,43,44,46,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,92,94,95,97,102,103,105,107,114,115,122,131,141,143,151,],[0,-3,-2,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-1,-8,-7,-19,-20,-26,-27,-28,-29,-30,-31,-28,-48,-53,-62,-67,-56,-6,-21,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,-43,-55,-61,-54,-49,-59,-60,-57,-58,-63,-64,-50,-51,-65,-52,-66,]),'MODULE':([2,],[3,]),'ATTRIBUTE':([3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,90,91,92,93,94,95,97,98,102,103,105,107,112,113,114,115,116,120,122,125,126,131,137,141,143,145,151,],[5,-3,5,5,5,5,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,5,5,5,5,-41,-42,5,-8,-5,-7,-19,-20,-26,-27,-28,-29,-30,-31,5,5,-28,-48,66,-53,5,5,5,5,5,5,5,5,5,-36,-37,-38,-39,5,-62,-67,-56,5,5,-6,-21,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,-43,66,5,5,-55,5,-61,-54,-49,5,-59,-60,-57,-58,5,5,-63,-64,5,5,-50,5,5,-51,5,-65,-52,5,-66,]),'EQUALS_DEFINITIONS':([5,7,24,67,106,128,146,],[-3,26,26,26,26,26,26,]),'EQUALS_EQUALITY':([5,7,24,67,106,128,146,],[-3,27,27,27,27,27,27,]),'COMMA':([5,30,31,32,33,64,65,72,99,100,118,139,],[-3,49,-7,49,49,86,-45,-6,-44,-46,-47,142,]),'CONSTANTS':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,28,29,30,31,32,33,35,36,37,38,39,40,43,44,46,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,92,94,95,97,102,103,105,107,114,115,122,131,141,143,151,],[-3,21,21,21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,21,-8,-5,-7,-19,-20,-26,-27,-28,-29,-30,-31,-28,-48,-53,-62,-67,-56,-6,-21,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,-43,-55,-61,-54,-49,-59,-60,-57,-58,-63,-64,-50,-51,-65,-52,-66,]),'VARIABLES':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,28,29,30,31,32,33,35,36,37,38,39,40,43,44,46,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,92,94,95,97,102,103,105,107,114,115,122,131,141,143,151,],[-3,22,22,22,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,22,-8,-5,-7,-19,-20,-26,-27,-28,-29,-30,-31,-28,-48,-53,-62,-67,-56,-6,-21,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,-43,-55,-61,-54,-49,-59,-60,-57,-58,-63,-64,-50,-51,-65,-52,-66,]),'ASSUME':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,28,29,30,31,32,33,35,36,37,38,39,40,43,44,46,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,92,94,95,97,102,103,105,107,114,115,122,131,141,143,151,],[-3,23,23,23,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,23,-8,-5,-7,-19,-20,-26,-27,-28,-29,-30,-31,-28,-48,-53,-62,-67,-56,-6,-21,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,-43,-55,-61,-54,-49,-59,-60,-57,-58,-63,-64,-50,-51,-65,-52,-66,]),'INIT':([5,6,8,9,11,12,13,14,15,16,17,18,19,20,28,29,30,31,32,33,35,36,37,38,39,40,43,44,46,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,92,94,95,97,102,103,105,107,114,115,122,131,141,143,151,],[-3,24,24,24,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,-8,-5,-7,-19,-20,-26,-27,-28,-29,-30,-31,-28,-48,-53,-62,-67,-56,-6,-21,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,-43,-55,-61,-54,-49,-59,-60,-57,-58,-63,-64,-50,-51,-65,-52,-66,]),'IN_A_SET':([5,37,43,62,84,108,127,],[-3,55,55,83,-4,112,129,]),'GREATER_OR_EQ':([5,37,43,67,104,],[-3,57,57,57,57,]),'LESS_OR_EQ':([5,37,43,67,104,],[-3,58,58,58,58,]),'GREATER_THAN':([5,37,43,67,104,],[-3,59,59,59,59,]),'LESS_THAN':([5,37,43,67,104,],[-3,60,60,60,60,]),'AND':([5,25,26,27,34,35,36,37,38,39,40,67,68,69,74,75,76,77,78,79,80,81,82,94,102,103,105,107,114,],[-3,47,-41,-42,50,-26,-27,-28,-29,-30,-31,-62,91,-56,-22,-23,-24,-25,-32,-40,-35,-34,-69,-61,-59,-60,-57,-58,-63,]),'PLUS':([5,34,35,36,37,38,39,40,43,44,48,61,73,74,75,76,77,78,79,80,81,82,84,123,133,],[-3,51,-26,-27,-28,-29,-30,-31,-28,51,71,51,51,-22,-23,-24,-25,-32,-40,-35,-34,-69,-4,125,136,]),'MINUS':([5,34,35,36,37,38,39,40,43,44,61,73,74,75,76,77,78,79,80,81,82,133,148,],[-3,52,-26,-27,-28,-29,-30,-31,-28,52,52,52,-22,-23,-24,-25,-32,-40,-35,-34,-69,135,149,]),'STAR':([5,34,35,36,37,38,39,40,43,44,61,73,74,75,76,77,78,79,80,81,82,],[-3,53,-26,-27,-28,-29,-30,-31,-28,53,53,53,53,53,-24,-25,-32,-40,-35,-34,-69,]),'DIVIDE':([5,34,35,36,37,38,39,40,43,44,61,73,74,75,76,77,78,79,80,81,82,],[-3,54,-26,-27,-28,-29,-30,-31,-28,54,54,54,54,54,-24,-25,-32,-40,-35,-34,-69,]),'DOT':([5,43,67,96,101,109,124,132,134,144,],[-3,63,90,63,109,113,126,134,137,145,]),'RIGHT_PAREN':([5,35,36,37,38,39,40,61,74,75,76,77,78,79,80,81,82,],[-3,-26,-27,-28,-29,-30,-31,82,-22,-23,-24,-25,-32,-40,-35,-34,-69,]),'OR':([5,67,68,69,94,102,103,105,107,114,],[-3,-62,93,-56,-61,-59,-60,-57,-58,-63,]),'COLON':([5,66,117,],[-3,87,120,]),'RIGHT_SQR_BRACKET':([5,64,65,99,100,118,138,150,],[-3,85,-45,-44,-46,-47,141,151,]),'EXCEPT':([5,119,],[-3,121,]),'RIGHT_BRACE':([5,140,],[-3,143,]),'EXTENDS':([6,],[10,]),'NUMBER_LITERAL':([23,25,26,27,41,50,51,52,53,54,56,57,58,59,60,87,88,89,110,129,135,136,149,],[39,39,-41,-42,39,39,39,39,39,39,81,-36,-37,-38,-39,101,102,103,114,132,138,139,150,]),'STRING_LITERAL':([23,25,26,27,41,50,51,52,53,54,],[40,40,-41,-42,40,40,40,40,40,40,]),'LEFT_PAREN':([23,25,26,27,41,50,51,52,53,54,],[41,41,-41,-42,41,41,41,41,41,41,]),'LEFT_SQR_BRACKET':([25,26,27,111,],[45,-41,-42,116,]),'AT':([26,27,130,147,],[-41,-42,133,148,]),'UNCHANGED':([47,91,93,],[70,70,70,]),'Nat':([55,],[79,]),'LEFT_BRACE':([83,],[98,]),'NEXT_VALUE_OF_ATTRIBUTE':([91,],[106,]),'EXCLAMATION_MARK':([121,142,],[124,144,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,],[1,]),'attribute':([3,6,8,9,10,21,22,23,25,28,41,42,47,49,50,51,52,53,54,55,56,63,70,71,90,91,93,98,112,113,116,120,125,126,137,145,],[4,7,7,7,31,31,31,37,43,7,37,62,67,72,37,37,37,37,37,78,80,84,94,96,104,67,67,108,117,118,119,96,96,128,140,146,]),'extends':([6,],[8,]),'statements':([6,8,],[9,28,]),'statement':([6,8,9,28,],[11,11,29,29,]),'constants_statement':([6,8,9,28,],[12,12,12,12,]),'variables_statement':([6,8,9,28,],[13,13,13,13,]),'assume_statement':([6,8,9,28,],[14,14,14,14,]),'type_invariant':([6,8,9,28,],[15,15,15,15,]),'set_definition':([6,8,9,28,],[16,16,16,16,]),'bean_value_count':([6,8,9,28,],[17,17,17,17,]),'function_declaration':([6,8,9,28,],[18,18,18,18,]),'termination_statement':([6,8,9,28,],[19,19,19,19,]),'init':([6,8,9,28,],[20,20,20,20,]),'equals':([7,24,67,106,128,146,],[25,42,89,111,130,147,]),'names':([10,21,22,],[30,32,33,]),'expression':([23,25,41,50,51,52,53,54,],[34,44,61,73,74,75,76,77,]),'set_membership':([23,25,41,50,51,52,53,54,],[35,35,35,35,35,35,35,35,]),'comparison':([23,25,41,50,51,52,53,54,],[36,36,36,36,36,36,36,36,]),'type_invariant_expression':([23,25,41,50,51,52,53,54,],[38,38,38,38,38,38,38,38,]),'bean_equation':([25,],[46,]),'dot_access':([25,71,120,125,],[48,95,123,127,]),'comparison_rule':([37,43,67,104,],[56,56,88,110,]),'set_info':([45,],[64,]),'set_individual_info':([45,86,],[65,99,]),'function_conditions':([47,],[68,]),'function_condition':([47,91,93,],[69,105,107,]),'except_section':([68,],[92,]),'init_set_statement':([83,],[97,]),'set_scope':([87,],[100,]),'except_clause':([111,],[115,]),'order':([120,],[122,]),'range_of_values':([129,],[131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER extends statements','module',6,'p_module','parser.py',29),
  ('module -> MODULE_WRAPPER MODULE attribute MODULE_WRAPPER statements','module',5,'p_module','parser.py',30),
  ('attribute -> ATTRIBUTE','attribute',1,'p_attribute','parser.py',38),
  ('dot_access -> attribute DOT attribute','dot_access',3,'p_dot_access','parser.py',43),
  ('extends -> EXTENDS names','extends',2,'p_extends','parser.py',47),
  ('names -> names COMMA attribute','names',3,'p_names','parser.py',53),
  ('names -> attribute','names',1,'p_names','parser.py',54),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',66),
  ('statements -> statement','statements',1,'p_statements','parser.py',67),
  ('statement -> constants_statement','statement',1,'p_statement','parser.py',80),
  ('statement -> variables_statement','statement',1,'p_statement','parser.py',81),
  ('statement -> assume_statement','statement',1,'p_statement','parser.py',82),
  ('statement -> type_invariant','statement',1,'p_statement','parser.py',83),
  ('statement -> set_definition','statement',1,'p_statement','parser.py',84),
  ('statement -> bean_value_count','statement',1,'p_statement','parser.py',85),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',86),
  ('statement -> termination_statement','statement',1,'p_statement','parser.py',87),
  ('statement -> init','statement',1,'p_statement','parser.py',88),
  ('constants_statement -> CONSTANTS names','constants_statement',2,'p_constants_statement','parser.py',93),
  ('variables_statement -> VARIABLES names','variables_statement',2,'p_variables_statement','parser.py',98),
  ('assume_statement -> ASSUME expression AND expression','assume_statement',4,'p_assume_statement','parser.py',103),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',109),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',110),
  ('expression -> expression STAR expression','expression',3,'p_expression','parser.py',111),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',112),
  ('expression -> set_membership','expression',1,'p_expression','parser.py',113),
  ('expression -> comparison','expression',1,'p_expression','parser.py',114),
  ('expression -> attribute','expression',1,'p_expression','parser.py',115),
  ('expression -> type_invariant_expression','expression',1,'p_expression','parser.py',116),
  ('expression -> NUMBER_LITERAL','expression',1,'p_expression','parser.py',117),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','parser.py',118),
  ('type_invariant_expression -> attribute IN_A_SET attribute','type_invariant_expression',3,'p_type_invariant_expression','parser.py',132),
  ('init_expression -> <empty>','init_expression',0,'p_init_expression','parser.py',136),
  ('comparison -> attribute comparison_rule NUMBER_LITERAL','comparison',3,'p_comparison','parser.py',139),
  ('comparison -> attribute comparison_rule attribute','comparison',3,'p_comparison','parser.py',140),
  ('comparison_rule -> GREATER_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',144),
  ('comparison_rule -> LESS_OR_EQ','comparison_rule',1,'p_comparison_rule','parser.py',145),
  ('comparison_rule -> GREATER_THAN','comparison_rule',1,'p_comparison_rule','parser.py',146),
  ('comparison_rule -> LESS_THAN','comparison_rule',1,'p_comparison_rule','parser.py',147),
  ('set_membership -> attribute IN_A_SET Nat','set_membership',3,'p_set_membership','parser.py',151),
  ('equals -> EQUALS_DEFINITIONS','equals',1,'p_equals','parser.py',155),
  ('equals -> EQUALS_EQUALITY','equals',1,'p_equals','parser.py',156),
  ('set_definition -> attribute equals LEFT_SQR_BRACKET set_info RIGHT_SQR_BRACKET','set_definition',5,'p_set_definition','parser.py',160),
  ('set_info -> set_info COMMA set_individual_info','set_info',3,'p_set_info','parser.py',167),
  ('set_info -> set_individual_info','set_info',1,'p_set_info','parser.py',168),
  ('set_individual_info -> ATTRIBUTE COLON set_scope','set_individual_info',3,'p_set_individual_info','parser.py',175),
  ('set_scope -> NUMBER_LITERAL DOT DOT attribute','set_scope',4,'p_set_scope','parser.py',180),
  ('type_invariant -> attribute equals expression','type_invariant',3,'p_type_invariant','parser.py',185),
  ('init -> INIT equals attribute IN_A_SET init_set_statement','init',5,'p_init','parser.py',190),
  ('init_set_statement -> LEFT_BRACE attribute IN_A_SET attribute COLON order','init_set_statement',6,'p_init_set_statement','parser.py',195),
  ('order -> dot_access PLUS dot_access IN_A_SET range_of_values','order',5,'p_order','parser.py',200),
  ('range_of_values -> NUMBER_LITERAL DOT DOT attribute RIGHT_BRACE','range_of_values',5,'p_range_of_values','parser.py',206),
  ('bean_value_count -> attribute equals bean_equation','bean_value_count',3,'p_bean_value_count','parser.py',212),
  ('bean_equation -> dot_access PLUS dot_access','bean_equation',3,'p_bean_equation','parser.py',218),
  ('function_declaration -> attribute equals AND function_conditions except_section','function_declaration',5,'p_function_declaration','parser.py',249),
  ('function_conditions -> function_condition','function_conditions',1,'p_function_conditions','parser.py',254),
  ('function_conditions -> function_conditions AND function_condition','function_conditions',3,'p_function_conditions','parser.py',255),
  ('function_conditions -> function_conditions OR function_condition','function_conditions',3,'p_function_conditions','parser.py',256),
  ('function_condition -> attribute comparison_rule NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',265),
  ('function_condition -> attribute equals NUMBER_LITERAL','function_condition',3,'p_function_condition','parser.py',266),
  ('function_condition -> UNCHANGED attribute','function_condition',2,'p_function_condition','parser.py',267),
  ('function_condition -> attribute','function_condition',1,'p_function_condition','parser.py',268),
  ('function_condition -> attribute DOT attribute comparison_rule NUMBER_LITERAL','function_condition',5,'p_function_condition','parser.py',269),
  ('except_section -> AND NEXT_VALUE_OF_ATTRIBUTE equals except_clause','except_section',4,'p_except_section','parser.py',281),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',11,'p_except_clause','parser.py',286),
  ('except_clause -> LEFT_SQR_BRACKET attribute EXCEPT EXCLAMATION_MARK DOT attribute equals AT PLUS NUMBER_LITERAL COMMA EXCLAMATION_MARK DOT attribute equals AT MINUS NUMBER_LITERAL RIGHT_SQR_BRACKET','except_clause',19,'p_except_clause','parser.py',287),
  ('termination_statement -> attribute equals AND function_conditions','termination_statement',4,'p_termination_statement','parser.py',296),
  ('next_state_relation -> NEXT equals OR function_conditions','next_state_relation',4,'p_next_state_relation','parser.py',302),
  ('expression -> LEFT_PAREN expression RIGHT_PAREN','expression',3,'p_expression_group','parser.py',314),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',319),
]
